{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to My Notebook","text":"<p>\u7f51\u7ad9\u6b63\u5728\u6784\u5efa\u4e2d\u2026\u2026</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Compiler/Abstract%20Syntax/","title":"ch4 -Abstract Syntax","text":"<p>\u7f16\u7a0b\u8bed\u8a00 = \u8bed\u6cd5 + \u8bed\u4e49</p> <ul> <li>\u8bed\u6cd5: What sequences of characters are valid programs? </li> <li>\u8bed\u4e49: What is the behavior of a valid programs?</li> </ul> <p>Abstract Syntax \u7528\u4e8e\u8854\u63a5\u8bed\u6cd5\u548c\u8bed\u4e49\u90e8\u5206(\u62bd\u8c61\u8bed\u6cd5\u6811)</p>"},{"location":"Compiler/Abstract%20Syntax/#1-attribute-grammar","title":"1. Attribute Grammar","text":"<p>\u8be5\u90e8\u5206\u5185\u5bb9 \u4e0d\u8981\u6c42\u638c\u63e1,\u4e3a\u524d\u7f6e\u5185\u5bb9.</p> <p>\u5c5e\u6027\u6587\u6cd5: \u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u6cd5+\u5c5e\u6027+\u5c5e\u6027\u8ba1\u7b97\u89c4\u5219.</p> <ul> <li>\u5c5e\u6027: \u63cf\u8ff0\u6587\u6cd5\u7b26\u53f7\u7684\u8bed\u4e49\u7279\u5f81\uff0c\u5982\u53d8\u91cf\u7c7b\u578b\u3001\u503c. \u4f8b: \u975e\u7ec8\u7ed3\u7b26E\u7684\u5c5e\u6027E.val\uff08\u8868\u8fbe\u5f0f\u7684\u503c\uff09</li> <li>\u5c5e\u6027\u8ba1\u7b97\u89c4\u5219(\u8bed\u4e49\u89c4\u5219): \u4e0e\u4ea7\u751f\u5f0f\u76f8\u5173\u8054\u3001\u53cd\u6620\u6587\u6cd5\u7b26\u53f7\u5c5e\u6027\u95f4\u5173\u7cfb\u7684\u89c4\u5219, \u6bd4\u5982\u201d\u5982\u4f55\u8ba1\u7b97E.val\u201d</li> </ul> <p>\u6f5c\u5728\u5e94\u7528:</p> <ul> <li>\u63a8\u5bfc\u7c7b--\u7a0b\u5e8f\u5206\u6790</li> </ul> <p></p> <ul> <li>\u751f\u6210\u7c7b--\u7a0b\u5e8f\u5408\u6210</li> </ul> <p></p>"},{"location":"Compiler/Abstract%20Syntax/#2-semantic-action","title":"2. Semantic Action","text":"<p>\u8bed\u4e49\u52a8\u4f5c\u53ef\u5e94\u7528\u4e8e\u6784\u9020AST.</p> <p>\u6bcf\u4e00\u4e2a terminal \u548c nonterminal \u90fd\u6709 its own type of semantic value\uff0c\u5f53\u5b58\u5728 rule \uff1a\\(A \\rightarrow BCD\\) \u65f6\uff0csemantic action \u5fc5\u987b\u8fd4\u56de\u4e0e nonterminal A \u7684 type \u4e00\u81f4\u7684\u4e00\u4e2a value\uff0c\u8be5value\u53ef\u4ece B\uff0cC\uff0cD \u7684 values \u5f97\u5230\u3002</p> <p>\u4f8b\uff1a</p> <p></p> <p>\u6240\u4ee5\uff0csemantic action \u5b9a\u4e49\u5982\u4e0b\uff1a</p> <ul> <li>the values returned by parsing functions,</li> <li>or the side effects of those functions</li> <li>or both</li> </ul> <p>Semantic Actions in Yacc-Generated Parsers\uff1a</p> <p></p>"},{"location":"Compiler/Abstract%20Syntax/#21-abstract-syntax-tree","title":"2.1 Abstract syntax tree","text":""},{"location":"Compiler/Abstract%20Syntax/#211","title":"2.1.1 \u5b9a\u4e49","text":"<p>AST\u662f Parse Tree \u7684\u4e00\u4e2a\u4fdd\u7559\u6838\u5fc3\u7ec6\u8282\u7684\u5316\u7b80\u7248\u672c,  \u88ab\u8f93\u5165\u8fdb\u8bed\u4e49\u5206\u6790\u90e8\u5206. \u6240\u4ee5\u5728Parsing\u8fc7\u7a0b\u4e2d\u8fd8\u9700\u8981\u751f\u6210AST.</p> <p></p> <p>\u5176\u4e2d\uff0cParse trees encodes the grammatical structure of the source\uff0c\u4f46\u643a\u5e26\u4e86\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u4fe1\u606f\uff08Redundant and useless tokens for later phases\u3001\u592a\u4f9d\u8d56\u8bed\u6cd5\uff09\uff0c\u7f16\u8bd1\u5668\u53ea\u9700\u8981\u77e5\u9053 expression \u7684operators \u548c operands \u5c31\u53ef\u4ee5\u4e86\u3002</p> <p></p> <p>\u5e94\u7528\uff1a</p> <ul> <li>Applications inside compilers</li> <li>Semantic analysis , e.g., type checking</li> <li>Translation to in termediate representations</li> <li>Some high-level optimizations, e.g., constant fold</li> <li>Applications outside compilers</li> <li>Pretty print, code editing, code diff, etc.</li> <li>\u201cAdvanced\u201d analysis tools (e.g., Clang Static Analyzer)</li> </ul>"},{"location":"Compiler/Abstract%20Syntax/#212","title":"2.1.2 \u8868\u793a","text":"<p>\u6784\u9020: \u901a\u8fc7semantic actions </p> <p>C\u8bed\u8a00\u5b9e\u73b0\u7ec6\u8282\u4e0d\u4f1a\u8003()</p>"},{"location":"Compiler/Abstract%20Syntax/#213","title":"2.1.3 \u751f\u6210","text":"<p>Top-down -- C\u548cJava\u5b9e\u73b0,\u5e94\u8be5\u4e0d\u4f1a\u8003</p> <p>\u9012\u5f52\u4e0b\u964d\uff0c\u624b\u5199</p> <p></p> <p>C\u8bed\u8a00\uff1a</p> <p></p> <p></p> <p></p> <p>Java\u53ef\u4ee5\u8fb9\u6784\u9020\u8fb9\u6253\u5370\u3002</p> <p>Bottom-Up -- Yacc \u4f1a\u8003\u542b\u4e49</p> <p></p>"},{"location":"Compiler/Activation%20Record/","title":"ch6 - Activation Record","text":"<p>Compiler \u5e94\u8be5\u5c06\u6240\u6709 code \u7ffb\u8bd1\u4e3a\u6c47\u7f16\u8bed\u8a00\uff0c\u5e76\u4e3a data \u5206\u914d\u7a7a\u95f4\u3002</p> <p></p> <p>\u9996\u5148\u6765\u56de\u987e\u4e00\u4e0b\u73b0\u4ee3\u5904\u7406\u5668\u67b6\u6784\uff1a</p> <ul> <li> <p>ALU \u7b97\u672f\u903b\u8f91\u5355\u5143( operands \u53ef\u4e3a immediate\uff0cregister &amp; memory)</p> </li> <li> <p>Control\uff08\u7528\u4e8e\u6267\u884c\u6307\u4ee4\uff0c\u56e0\u4e3ainstruction\u5728\u5185\u5b58\u4e2d\uff0c\u9760PC\u6807\u8bc6\uff09</p> </li> <li> <p>Register</p> </li> <li> <p>Memory\uff08\u6ce8\u610fstack\u5411\u4e0b\u589e\u957f\uff0cheap\u5411\u4e0a\u589e\u957f\uff09</p> </li> </ul> <p></p> <p>\u8fd9\u4e00\u7ae0\u96c6\u4e2d\u4e8e Stack\uff0c\u4e5f\u5c31\u662f Activation Record \u5904\u5728\u7684\u5730\u65b9\uff1a</p> <p></p> <p>Activation Record \u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u662f Function call \u65f6\u7684\u8bb0\u5f55\uff0c\u91cd\u70b9\u4e3a Application Binary Interface\uff1a</p> <ul> <li>Contracts between binary programs</li> <li>Even compiled from other languages</li> <li>Conventions on low-level details</li> <li>How to pass arguments?</li> <li>how to return values?</li> <li>how to make use of registers?</li> </ul>"},{"location":"Compiler/Activation%20Record/#1-stack-frame","title":"1. Stack Frame","text":"<p>Stack Frame \u5373 Activation record\uff0c\u662f a piece of memory on the stack for a function\uff0c\u5b83\u8fde\u63a5\u4e86 caller \u548c callee \uff1a</p> <ul> <li>Relevant machine state (saved registers, etc.)</li> <li>Space for return value</li> <li>Space for local data</li> <li>Pointer to activation for accessing non-local data</li> </ul> <p></p> <p>\u5982\u4f55\u8bbe\u8ba1\u8ba9 caller \u548c callee \u6b63\u786e\u4e14\u9ad8\u6548\u6c9f\u901a\uff1f</p> <ul> <li>Frame pointer (FP)  \u5e27\u6307\u9488, \u201c\u57fa\u5740\u5bc4\u5b58\u5668(base pointer)\u201d \u6307\u5411\u5f53\u524d\u51fd\u6570\u6808\u5e27\u7684\u57fa\u5740</li> <li>Stack pointer (SP) \u6808\u6307\u9488\uff0c\u6307\u5411\u6808\u9876</li> </ul> <p></p> <p>rbp \u5b58FP\uff0crsp\u5b58SP\uff1b\u5148\u5c06\u4e0a\u4e00\u4e2aframe\u7684FP\u503cpush\u8fdb\u6808\uff0c\u518d\u5c06\u5f53\u524d SP \u8d4b\u7ed9 rbp\uff0c\u4f5c\u4e3a current frame\u7684FP\u3002rdi \u5b58\u51fd\u6570\u4f20\u9012\u7684\u53c2\u6570\u3002rax\u5c06\u5b58\u51fd\u6570\u8fd4\u56de\u503c\u3002</p> <p>\u5f53\u51fd\u6570 f \u8c03\u7528\u51fd\u6570 g \u65f6\uff0cSP \u6307\u5411 f \u4f20\u9012\u7ed9 g \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0cg \u901a\u8fc7\u4ece\u6808\u6307\u9488\u51cf\u53bb\u6808\u5e27\u5927\u5c0f\u6765\u5206\u914d\u81ea\u5df1\u7684\u6808\u5e27\uff1b\u5f53\u8fdb\u5165\u51fd\u6570 g \u65f6\uff0c\u5c06\u65e7\u7684\u5e27\u6307\u9488 FP \u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u8bbe\u7f6e FP = SP\uff0c\u4f7f FP \u6307\u5411\u5f53\u524d\u6808\u5e27\u7684\u57fa\u5740\uff1b\u5f53\u51fd\u6570 g \u9000\u51fa\u65f6\uff0c\u8bbe\u7f6e SP = FP\uff0c\u6062\u590d\u6808\u6307\u9488\uff0c\u4ece\u4fdd\u5b58\u7684\u4f4d\u7f6e\u83b7\u53d6\u65e7\u7684 FP \u503c(pop rbp)</p> <p></p> <ul> <li>Globals \u4e0d\u80fd\u88ab\u5b58\u5728\u6808\u4e2d\uff0cAll references to a global variable point to the same object\uff0cGlobals are assigned a fixed address once\uff0c\u6240\u6709 \u201cfixed address\u201d \u90fd\u662f \u201cstatically allocated\u201d</li> <li>\u52a8\u6001\u5206\u914d\u7684\u6570\u636e\u88ab\u5b58\u5728 Heap \u4e2d\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u636e\u7684\u751f\u547d\u5468\u671f\u53ef\u80fd\u6bd4\u521b\u9020\u5b83\u4eec\u7684 blocks \u66f4\u957f\uff0c\u6545\u4e0d\u80fd\u5b58\u5728 activation record \u4e2d</li> </ul>"},{"location":"Compiler/Activation%20Record/#2-use-of-register","title":"2. Use of Register","text":"<p>Putting everything in the stack frame can cause the memory traffic\uff0c\u89e3\u51b3\u65b9\u6cd5\u4e3a Hold as much of the frame as possible in registers\uff0c\u4e0b\u8ff0 value \u53ef\u4ee5\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u4e2d\uff1a</p> <p></p>"},{"location":"Compiler/Activation%20Record/#21-parameter-passing","title":"2.1 Parameter Passing","text":"<p>Tiger\u7684\u53c2\u6570\u65b9\u5f0f: Call-by-value</p> <ul> <li>\u5b9e\u53c2(actual arguments)\u7684\u503c\u88ab\u4f20\u9012\u5e76\u4f5c\u4e3a\u5f62\u5f0f\u53c2\u6570(formal parameters)\u7684\u503c\u3002</li> <li>\u5f62\u53c2\u7684\u6539\u53d8\u4e0d\u4f1a\u5f71\u54cd\u5b9e\u53c2</li> </ul> <p>\u5982\u679c\u5728 stack \u4e2d\u8fdb\u884c\u53c2\u6570\u4f20\u9012\uff0c\u4f1a\u5bfc\u81f4 memory traffic\u3002\u6240\u4ee5\u524d k \u4e2a arguments ( k = 4 or 6) \u901a\u8fc7\u5bc4\u5b58\u5668\u4f20\u9012\uff08X86-64: rdi, rsi, rcx, rdx; ARM\uff1ar0~r3\uff09\uff0c\u5269\u4f59\u53c2\u6570\u901a\u8fc7 stack \u4f20\u9012\u3002</p> <p>\u4fdd\u5b58\u5bc4\u5b58\u5668\u72b6\u6001\u7684\u9700\u6c42\uff1a</p> <p></p> <p>\u4e24\u79cd\u4fdd\u5b58\u65b9\u5f0f\uff1acaller-save \u548c callee-save</p> <p></p> <p>caller-save\u4f8b\uff1a</p> <p></p> <p>callee-save\u4f8b\uff1a</p> <p></p> <p>\u603b\u7ed3\uff1a</p> <p></p> <p>\u5982\u679c f \u5728\u7528rdi\u4f20\u53c2\u524d\uff0c\u8981\u5148\u628ardi\u5f53\u524d\u7684\u503c\u5b58\u5165stack frame(\u8c03\u7528\u5b8c\u518d\u6062\u590d) , \u90a3\u6700\u7ec8\u5e76\u6ca1\u6709\u907f\u514dstack frame\u7684\u8bbf\u5b58\u64cd\u4f5c\uff08\u5bfc\u81f4memory traffic\uff09!</p> <p></p> <p>\u5982\u4f55\u89e3\u51b3\u7c7b\u4f3c\u4e0a\u56fe\u7684 memory traffic \u5462\uff1f</p> <ol> <li>\u5728\u8c03\u7528h\u540ea\u7684\u503c\u4e0d\u518d\u4f7f\u7528(\u4e0d\u5b58\u5728\u7b2c5\u884c)\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u4fdd\u5b58\u5bc4\u5b58\u5668r1\u7684\u503c\u4e86\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4f18\u5316\u4ee3\u7801\u505a\u5230\u3002</li> <li>Use global register allocation: different functions use different set of registers to pass arguments. \u5982f\u53ef\u7528\u5bc4\u5b58\u5668r1\u63a5\u6536\u53c2\u6570\uff0c\u4f46\u901a\u8fc7\u5bc4\u5b58\u5668r2\u7ed9h\u4f20\u53c2</li> <li>Leaf procedures:\u4e0d\u8c03\u7528\u5176\u4ed6\u8fc7\u7a0b\u7684\u4e3a\u53f6\u5b50\u8fc7\u7a0b(Leaf procedure)\u3002\u53f6\u5b50\u8fc7\u7a0b\u4e0d\u5fc5\u5c06\u4f20\u5165\u7684\u53c2\u6570\u4fdd\u5b58\u5230\u5b58\u50a8\u5668\u4e2d</li> <li>Use register windows (as on SPARC): Each function invocation can allocate a fresh set of registers</li> </ol>"},{"location":"Compiler/Activation%20Record/#22-return-address","title":"2.2 Return Address","text":"<p>\u5f53\u8c03\u7528\u51fd\u6570 f\uff0cf \u9700\u8981\u77e5\u9053\u8fd4\u56de\u5230\u54ea\u4e2a\u4f4d\u7f6e</p> <ul> <li>Old approach (1970s): Push return address on stack via call instruction</li> <li>Modern approach: Put return address in a designated register (e.g., rip \u6307\u4ee4\u6307\u9488\u5bc4\u5b58\u5668)</li> </ul>"},{"location":"Compiler/Activation%20Record/#23-return-value","title":"2.3 Return Value","text":"<p>Placed in designated register by callee function.</p> <ul> <li>X86-64\u7cfb\u7edf\u6574\u578b\u8fd4\u56de\u503c\uff1arax</li> </ul> <p></p>"},{"location":"Compiler/Activation%20Record/#24-locals-and-temporaries","title":"2.4 Locals and Temporaries","text":"<ul> <li>(Some) Local variables</li> <li>(Some) Intermediate results of expressions (temporaries)</li> </ul> <p>\u66f4\u591a\u7ec6\u8282\u5c06\u5728 register allocation section \u8ba8\u8bba\u3002</p>"},{"location":"Compiler/Activation%20Record/#3-frame-resident-variables","title":"3. Frame-Resident Variables","text":"<p>\u65e2\u7136\u5f88\u591a\u5730\u65b9\u90fd\u53ef\u4ee5\u7528\u5bc4\u5b58\u5668\uff0c\u90a3\u8fd8\u9700\u8981\u5728stack frame\u4e2d\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u5417?</p> <p>\u7b54\u6848\u80af\u5b9a\u662f\u8981\uff0c\u56e0\u4e3a\uff1a</p> <ul> <li>\u53d8\u91cf passed by reference , \u9700\u8981\u4e00\u4e2a\u5185\u5b58\u5730\u5740\u6765\u4f20\u9012\uff0c\u6545\u5b58\u5728\u6808\u5e27\u4e2d</li> </ul> <p></p> <ul> <li>Its address is taken, e.g., &amp;a in the C language</li> </ul> <p></p> <ul> <li>\u53d8\u91cf\u9700\u8981\u901a\u8fc7\u4e00\u4e2a\u5d4c\u5957\u7ed3\u6784\u83b7\u53d6</li> </ul> <p></p> <ul> <li>The value is too big to fit into a single register </li> </ul> <p></p> <ul> <li>\u53d8\u91cf\u662f \u6570\u7ec4 \uff0cfor which address arithmetic is necessary to extract components \uff08\u4f46\u662f\u8fd9\u79cd\u60c5\u51b5\u4e0b\u653e\u5728\u6808\u5e27\u8fd8\u662fheap\u4e0a\u503c\u5f97\u8ba8\u8bba\uff09</li> </ul> <p></p> <ul> <li>The are too many locals and temporaries \u2013 \u201cspill\u201d\uff08\u4e8e\u5bc4\u5b58\u5668\u5206\u914d\u7ae0\u8282\u4e2d\u8ba8\u8bba\uff09</li> </ul> <p>\u524d\u4e09\u79cd\u60c5\u51b5\u53ef\u4ee5\u770b\u4f5c \u201cvariable escapes\u201d\uff1a</p> <p></p>"},{"location":"Compiler/Activation%20Record/#4-block-structure","title":"4. Block Structure","text":"<p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5e27\u6307\u9488\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf\uff08\u6ce8\u610f\uff0cFP\u7684\u5b9e\u9645\u503c\u5728\u8fd0\u884c\u65f6\u662f\u672a\u77e5\u7684\uff0c\u4f46\u662f\u6bcf\u4e2a\u5c40\u90e8\u53d8\u91cf\u76f8\u5bf9\u4e8eFP\u7684\u504f\u79fb\u5728\u7f16\u8bd1\u65f6\u662f\u5df2\u77e5\u7684\uff01\uff09</p> <p>problem\uff1aHow can h access the \u201cnon-local\u201d variables m?</p> <p></p>"},{"location":"Compiler/Activation%20Record/#41-static-link","title":"4.1 Static Link (\u91cd\u70b9)","text":"<p>The static link is a pointer to the activation record of the enclosing procedure.</p> <p>\u6bcf\u5f53 f \u8c03\u7528 g \u65f6\uff0c\u5b83\u90fd\u4f1a\u4f20\u9012\u6307\u5411 f \u7684\u6700\u8fd1\u4e00\u6b21 activation record \u7684\u6307\u9488\uff0c\u8be5\u8bb0\u5f55\u7acb\u5373 encloses g in program text</p> <p>\u5982\u4f55\u5229\u7528 static links \u83b7\u53d6 non-local data:</p> <ul> <li>Each function is annotated with its enclosing depth</li> <li>When a function at depth n accesses a variable at depth m: Emit code to climb up n-m links to visit the appropriate activation record</li> </ul> <p></p> <p></p> <ul> <li>pros: \u53c2\u6570\u4f20\u9012\u7684\u989d\u5916\u5f00\u9500\u8f83\u5c11\uff08\u6bcf\u4e2a\u6fc0\u6d3b\u8bb0\u5f55\u53ea\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u6307\u9488\uff09</li> <li>Cons : O(n) time to access a variable n levels up.</li> </ul> <p></p> <p>\u5728x86-64\u67b6\u6784\u4e2d\uff0c\u52a8\u6001\u94fe\u63a5\u5c31\u662f\u51fd\u6570\u5e8f\u8a00\u4e2d\u4fdd\u5b58\u7684\u65e7rbp\u503c\uff08push rbp\u540e\u5b58\u50a8\u5728\u6808\u4e0a\u7684\u90a3\u4e2a\u503c\uff09\u3002\u800c\u9759\u6001\u94fe\u63a5\u901a\u5e38\u5b58\u50a8\u5728[rbp+8]\u4f4d\u7f6e\u3002</p>"},{"location":"Compiler/Activation%20Record/#42-display","title":"4.2 Display \uff08\u53ef\u80fd\u91cd\u70b9\uff09","text":"<p>Display \u662f a global array of pointers to frames</p> <ul> <li>\u8be5\u5168\u5c40\u6307\u9488\u5305\u62ec\u6bcf\u4e00\u4e2a\u8bcd\u6cd5 level \u7684 frame pointers</li> <li>Array[i] = pointer to most recent activation at level i (\u540c leve l\u53ef\u80fd\u6709\u591a\u4e2a\u51fd\u6570\uff0c\u53d6\u6700 recent \u7684)</li> <li>Update display when entering/exiting a function\uff08\u96be\u70b9\uff09</li> <li>\u53ef\u76f4\u63a5\u83b7\u53d6\uff0c\u4e0d\u9700 chain traversal</li> </ul> <p></p> <p></p> <p></p> <p>push\u3001pop\u7684\u6808\u548c\u51fd\u6570\u6808\u5e27\u4e0d\u5171\u7528\u4e00\u4e2a\u6808\uff1f</p> <ul> <li>Cons\uff1aO(1) access time to any lexical level; Simpler code generation</li> <li>Pros\uff1aComplex context switching; Display array is a global resource</li> </ul> <p></p>"},{"location":"Compiler/Activation%20Record/#43-lambda-lifting","title":"4.3 Lambda Lifting","text":"<ul> <li>\u5bf9\u6bcf\u4e2a\u51fd\u6570\uff0cidentify \u51fd\u6570\u7528\u5230\u7684\u6240\u6709 non-local variables</li> <li>\u5c06\u8fd9\u4e9b\u53d8\u91cf\u4f5c\u4e3a\u51fd\u6570\u7684 extra parameters</li> <li>Update all calls to pass the required variables</li> </ul> <p>\u5f53 g calls f\uff0cg \u7684\u6240\u6709\u53d8\u91cf\u90fd\u4f1a\u88ab f \u83b7\u53d6(or by any function nested inside f)\uff0c\u4f20\u9012\u7ed9 f \u4f5c\u4e3a extra argument.</p> <p></p> <p>Cons:</p> <ul> <li>Simplified runtime environment: No need to maintain complex stack frames with static links or displays.</li> <li>Optimization opportunities: Makes data flow explicit through parameters, etc</li> </ul> <p>Pros:</p> <ul> <li>Performance overhead: Passing multiple extra parameters increases call overhead (unnecessary passing when the variables aren't used)</li> <li>Limited applicability: Not always suitable for higher-order functions</li> </ul>"},{"location":"Compiler/Activation%20Record/#6-a-typical-stack-frame-layout-for-tiger","title":"6. A Typical Stack Frame Layout for Tiger","text":"<p>\u5173\u4e8e incoming argument\uff08\u7531caller\u4f20\u9012\uff09 \u548c outgoing argument\uff08\u4f20\u9012\u7ed9\u5c06\u8981\u8c03\u7528\u7684\u51fd\u6570\uff09\u7684\u4e00\u4e2a\u5177\u4f53\u4f8b\u5b50\uff1a</p> <p></p> <ul> <li>Frame point\u4e3a\u7279\u5b9a\u5bc4\u5b58\u5668(\u5982rbp,SP)\uff0c\u5176\u503c\u4e3a\u6808\u4e0a\u7684\u5185\u5b58\u5730\u5740\uff0c\u5730\u5740\u5185\u5b58\u4e2d\u4fdd\u5b58\u503c\u4e3a</li> </ul> <p>stack link (\u67d0\u4e2a\u51fd\u6570\u7684frame point)</p> <ul> <li>Return address: where (within the calling function) control should return\uff08\u901a\u8fc7CALL\u6307\u4ee4\u521b\u5efa\uff09</li> </ul> <p>Limitation\uff1a</p> <p></p>"},{"location":"Compiler/Introduction/","title":"Introduction","text":""},{"location":"Compiler/Introduction/#_1","title":"\u4ec0\u4e48\u662f\u7f16\u7a0b\u8bed\u8a00","text":"<p>A programming language is a notation for describing computations to people AND to machines</p> <p>\u4e0d\u540c\u7684\u7f16\u7a0b\u8303\u5f0f (Paradigms)\uff1a</p> <ul> <li>\u8fc7\u7a0b\u5f0f(Procedural): C, Fortran, Pascal,\u2026</li> <li>\u51fd\u6570\u5f0f(Functional): Lisp/Scheme, Haskell, \u2026</li> <li>\u903b\u8f91\u5f0f(Logic): Prolog, Datalog, \u2026</li> <li>\u9762\u5411\u5bf9\u8c61(Object-Oriented): Smalltalk, Java, Eiffel, \u2026</li> </ul>"},{"location":"Compiler/Introduction/#_2","title":"\u7f16\u8bd1\u5668\u53ca\u5176\u5f62\u5f0f","text":"<p>\u7f16\u8bd1\u5668\u662f\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8bfb\u5165\u6e90\u7a0b\u5e8f\u5e76\u5c06\u5176\u7ffb\u8bd1\u6210\u8bed\u4e49\u7b49\u4ef7\u7684\u76ee\u6807\u7a0b\u5e8f</p> <p></p>"},{"location":"Compiler/Introduction/#_3","title":"\u7f16\u8bd1\u5668\u7684\u9636\u6bb5","text":"<ul> <li>\u8bcd\u6cd5\u5206\u6790: \u5c06\u7a0b\u5e8f\u5b57\u7b26\u6d41\u5206\u89e3\u4e3a\u8bb0\u53f7 (Token)\u5e8f\u5217</li> </ul> <ul> <li>\u8bed\u6cd5\u5206\u6790: \u5c06\u8bb0\u53f7\u5e8f\u5217\u89e3\u6790\u4e3a\u8bed\u6cd5\u7ed3\u6784</li> </ul> <ul> <li>\u8bed\u4e49\u5206\u6790: \u6536\u96c6\u6807\u8bc6\u7b26\u7684\u7c7b\u578b\u7b49\u5c5e\u6027\u4fe1\u606f</li> </ul> <ul> <li>\u4e2d\u95f4\u4ee3\u7801/\u8868\u793a: \u6e90\u8bed\u8a00\u4e0e\u76ee\u6807\u8bed\u8a00\u4e4b\u95f4\u7684\u6865\u6881</li> </ul> <ul> <li>\u673a\u5668\u65e0\u5173\u4ee3\u7801\u4f18\u5316\uff1a\u57fa\u4e8e\u4e2d\u95f4\u8868\u793a\u8fdb\u884c\u5206\u6790\u4e0e\u53d8\u6362</li> </ul> <ul> <li>\u6307\u4ee4\u9009\u62e9\u3001\u5bc4\u5b58\u5668\u5206\u914d\u3001\u6307\u4ee4\u8c03\u5ea6\uff1a\u628a\u4e2d\u95f4\u8868\u793a\u5f62\u5f0f\u7ffb\u8bd1\u5230\u76ee\u6807\u8bed\u8a00</li> </ul>"},{"location":"Compiler/Introduction/#tiger","title":"\u6848\u4f8b: Tiger\u7f16\u8bd1\u5668","text":"<ul> <li>AST(\u62bd\u8c61\u8bed\u6cd5\u6811): \u8bed\u6cd5\u5206\u6790 + \u201cSemantic Actions\u201d\u751f\u6210\u3001</li> <li>IR Tree: \u8bed\u4e49\u5206\u6790\u540e\u6309\u4e00\u5b9a\u89c4\u5219\u751f\u6210(\u6811\u578b\u4e2d\u95f4\u8868\u793a)</li> <li>Canonicalized IR Tree: \u5bf9IR Tree\u505a\u53d8\u6362\u6240\u5f97(\u65b9\u4fbf\u751f\u6210\u6c47\u7f16)</li> <li>Assem: \u6307\u4ee4\u9009\u62e9\u5668\u751f\u6210(\u4e00\u79cd\u7279\u6b8a\u7684\u6c47\u7f16)</li> <li>CFG(Control Flow Graph) \u63a7\u5236\u6d41\u56fe: \u65b9\u4fbf\u8fdb\u884c\u6570\u636e\u6d41\u5206\u6790\uff08\u5982\u6d3b\u8dc3\u53d8\u91cf\u5206\u6790(Liveness Analysis)\uff09</li> <li>Interference Graph: \u4ece\u6d3b\u8dc3\u53d8\u91cf\u5206\u6790\u7684\u7ed3\u679c\u6784\u9020\uff0c\u7528\u4e8e\u6307\u5bfc   \u5bc4\u5b58\u5668\u5206\u914d</li> </ul>"},{"location":"Compiler/Lexical%20Analysis/","title":"Lexical Analysis","text":""},{"location":"Compiler/Lexical%20Analysis/#1","title":"1. \u8bcd\u6cd5\u5206\u6790\u6982\u8ff0","text":"<p>\u7a0b\u5e8f\u4ee5 \u5b57\u7b26\u4e32 \u7684\u5f62\u5f0f\u4f20\u9012\u7ed9\u7f16\u8bd1\u5668\uff0c\u6240\u4ee5\u8bcd\u6cd5\u5206\u6790\u7684\u4efb\u52a1\u662f\u5c06\u8f93\u5165\u5b57\u7b26\u4e32\u8bc6\u522b\u4e3a \u6709\u610f\u4e49\u7684\u5b50\u4e32 </p> <ul> <li>partition input strings into substrings(Lexeme)</li> <li>classify them according to their roles(Tokens)</li> </ul> <p>Token \u662f\u5173\u952e\u5b57\u3001\u64cd\u4f5c\u7b26\u3001\u6807\u8bc6\u7b26\u3001\u5b57\u7b26\u4e32\u7b49\uff0clexeme\u662ftoken\u7684\u5b9e\u4f8b\uff1a</p> <p></p> <p>\u8bcd\u6cd5\u5206\u6790\u4f8b\uff1a\u5b57\u7b26\u6d41 -&gt; Token\u6d41</p>"},{"location":"Compiler/Lexical%20Analysis/#2-","title":"2. \u6b63\u5219\u8868\u8fbe\u5f0f -- \u5f62\u5f0f\u5316\u63cf\u8ff0\u8bcd\u6cd5","text":""},{"location":"Compiler/Lexical%20Analysis/#21","title":"2.1 \u5f62\u5f0f\u8bed\u8a00","text":"<ul> <li>\u5b57\u6bcd\u8868(alphabet)\uff1a\u7b26\u53f7\u7684\u6709\u9650\u96c6\u5408</li> <li>\u4e32 (String, word) : \u5b57\u6bcd\u8868\u4e2d\u7b26\u53f7\u7684 \u6709\u7a77\u5e8f\u5217</li> <li>\u4e32s\u7684\u957f\u5ea6\uff0c\u901a\u5e38\u8bb0\u4f5c|s|\uff0c\u662f\u6307s\u4e2d\u7b26\u53f7\u7684\u4e2a\u6570</li> <li>\u7a7a\u4e32\u662f\u957f\u5ea6\u4e3a0\u7684\u4e32\uff0c\u7528 \u03b5\uff08epsilon\uff09\u8868\u793a</li> </ul> <p>!!! warning \"</p> <p>\\(\\varepsilon\\) \u8868\u793a\u7a7a\u4e32\uff0c{\\(\\varepsilon\\)}\u662f\u4e00\u4e2a\u975e\u7a7a\u96c6\u5408</p> <p>\u91cc\u9762\u7684\u5143\u7d20\u662f\u4e00\u4e2a\u7a7a\u4e32</p> <p>\\(\\emptyset\\)\u662f\u4e00\u4e2a\u7a7a\u96c6</p> <p>\u4e32\u4e0a\u7684\u8fde\u63a5\u548c\u8fd0\u7b97\uff1a</p> <ul> <li>\u8fde\u63a5(concatenation): y\u9644\u52a0\u5230x\u540e\u5f62\u6210\u7684\u4e32\u8bb0\u4f5cxy</li> <li>\u4f8b\u5982\uff0c\u5982\u679c x=dog\u4e14 y=house\uff0c\u90a3\u4e48xy=doghouse</li> <li>\u7a7a\u4e32\u662f\u8fde\u63a5\u8fd0\u7b97\u7684\u5355\u4f4d\u5143, \u5373\u5bf9\u4e8e\u4efb\u4f55\u4e32s\u90fd\u6709\u03b5s = s\u03b5 = s</li> <li>\u5e42\u8fd0\u7b97</li> </ul> <p>\u516c\u5f0f\u5982\u4e0b</p> <p>\u8bed\u8a00 \u662f\u5b57\u6bcd\u8868\u4e0a\u7684\u4e00\u4e2a\u4e32\u96c6\uff0c\u6709\u5982\u4e0b\u8fd0\u7b97\uff0c\u5176\u4e2d\u4f18\u5148\u7ea7 \u5e42&gt;\u8fde\u63a5&gt;\u5e76 \uff1a</p> <p></p>"},{"location":"Compiler/Lexical%20Analysis/#22-re","title":"2.2 \u6b63\u5219\u8868\u8fbe\u5f0fRE","text":"<p>\u4f18\u5148\u7ea7\uff1a* &gt;\u8fde\u63a5&gt;\u9009\u62e9|</p> <p>RE\u7684\u4e00\u4e9b\u4ee3\u6570\u5b9a\u5f8b\uff1a</p> <p></p> <p>example</p>"},{"location":"Compiler/Lexical%20Analysis/#_1","title":"\u6b63\u5219\u5b9a\u4e49","text":"<p>\u5bf9\u4e8e\u6bd4\u8f83\u590d\u6742\u7684\u8bed\u8a00\uff0c\u4e3a\u4e86\u6784\u9020\u7b80\u6d01\u7684\u6b63\u5219\u5f0f\uff0c\u53ef\u5148\u6784\u9020\u7b80\u5355\u7684\u6b63\u5219\u5f0f\uff0c\u518d\u5c06\u8fd9\u4e9b\u6b63\u5219\u5f0f\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u4e0e\u8be5\u8bed\u8a00\u5339\u914d\u7684\u6b63\u5219\u5e8f\u5217</p> <p></p> <p>\u4f8b\uff1a</p> <p></p>"},{"location":"Compiler/Lexical%20Analysis/#_2","title":"\u6b63\u5219\u89c4\u5219\u7684\u201c\u4e8c\u4e49\u6027\u201d","text":"<p>\u6839\u636e\u4e0d\u540c\u539f\u5219\u5224\u65ad\uff1a</p> <ul> <li>\u6700\u957f\u5339\u914d Longest match\uff1a'if8'\u4f1a\u88ab\u8bc6\u522b\u6210identifier</li> <li>\u89c4\u5219\u4f18\u5148 Rule priority\uff1a\u2018if8\u2019 \u4e2d\u7684if match IF</li> </ul>"},{"location":"Compiler/Lexical%20Analysis/#3-fa","title":"3. \u6709\u7a77\u81ea\u52a8\u673a FA","text":"<p>\u5176\u5b9eRE\u548cFA\u90fd\u662f\u8ba1\u7b97\u7406\u8bba\u7684\u5185\u5bb9\uff0c\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd</p>"},{"location":"Compiler/Lexical%20Analysis/#31-finite-automata","title":"3.1 Finite Automata","text":"<ul> <li> <p>\u7ed9\u5b9a\u8f93\u5165\u4e32\\(x\\)\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u5bf9\u5e94\u4e8e\u4e32x\u7684\u4ece\u521d\u59cb\u72b6\u6001\u5230\u67d0\u4e2a\u7ec8\u6b62\u72b6\u6001\u7684\u8f6c\u6362\u5e8f\u5217\uff0c\u5219\u79f0\u4e32\\(x\\)\u88ab\u8be5\\(FA\\)\u63a5\u6536\uff1b</p> </li> <li> <p>\u7531\u4e00\u4e2a\u6709\u7a77\u81ea\u52a8\u673a\\(M\\)\u63a5\u6536\u7684\u6240\u6709\u4e32\u6784\u6210\u7684\u96c6\u5408\uff0c\u79f0\u4e3a\u8be5\\(FA\\)\u63a5\u6536\uff08\u6216\u5b9a\u4e49\uff09\u7684\u8bed\u8a00\uff0c\u8bb0\u4e3a\\(L(M)\\)</p> </li> </ul> <p></p>"},{"location":"Compiler/Lexical%20Analysis/#32-fa","title":"3.2 FA\u7684\u5206\u7c7b","text":""},{"location":"Compiler/Lexical%20Analysis/#321-nfa","title":"3.2.1 NFA \u975e\u786e\u5b9a\u6709\u7a77\u81ea\u52a8\u673a","text":""},{"location":"Compiler/Lexical%20Analysis/#322-dfa","title":"3.2.2 DFA \u786e\u5b9a\u6027\u6709\u7a77\u81ea\u52a8\u673a","text":""},{"location":"Compiler/Lexical%20Analysis/#323","title":"3.2.3 \u4e24\u8005\u5173\u7cfb","text":"<p>DFA\u4e0eNFA\u53ef\u4ee5\u4e92\u76f8\u8f6c\u5316\uff08\u5b9a\u4e49\u540c\u4e00\u8bed\u8a00\uff09\u3002</p>"},{"location":"Compiler/Lexical%20Analysis/#33-fa","title":"3.3 FA\u4e0e\u8bcd\u6cd5\u5206\u6790","text":"<p>\u8bcd\u6cd5\u5206\u6790: \u5982\u4f55\u81ea\u52a8\u5316\u6784\u9020FA, \u6765\u8bc6\u522b\u7528RE\u523b\u753b\u7684Token\uff0c</p> <p>\u56e0\u4e3aNFA\u9700\u5bf9\u591a\u79cd\u8def\u5f84\u8bd5\u63a2+\u5931\u8d25\u56de\u9000\uff0c\u6548\u7387\u5f88\u4f4e\uff0c\u6240\u4ee5\u4e00\u822c\u662f\u6784\u9020DFA\uff1a</p> <p></p>"},{"location":"Compiler/Lexical%20Analysis/#4","title":"4.\u8bcd\u6cd5\u5206\u6790\u5668\u7684\u81ea\u52a8\u751f\u6210","text":"<p>\u7ed9\u5b9aRE\uff0c\u5982\u4f55\u81ea\u52a8\u6784\u9020\u5176DFA\uff1f\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b97\u6cd5\u7528\u4e8e\u81ea\u52a8\u751f\u6210\uff0c\u4f46\u6bd4\u8f83\u590d\u6742\uff0c\u53ef\u4ee5\u4e0d\u5b8c\u5168\u6309\u7167\u8be5\u6d41\u7a0b\u3002</p> <p></p>"},{"location":"Compiler/Lexical%20Analysis/#41-re-nfa","title":"4.1 RE -&gt; NFA","text":"<p>\u91c7\u7528Thompson\u7b97\u6cd5\uff0c\u57fa\u4e8e\u5bf9RE\u7684\u7ed3\u6784\u505a\u5f52\u7eb3\u3002</p>"},{"location":"Compiler/Lexical%20Analysis/#_3","title":"\u76f4\u63a5\u6784\u9020","text":""},{"location":"Compiler/Lexical%20Analysis/#_4","title":"\u9012\u5f52\u6784\u9020","text":"<p>\u4f46\u5982\u679c\u4eba\u5de5\u6784\u9020\u7684\u8bdd\u4f1a\u975e\u5e38\u7b80\u5355\uff1a</p> <p></p>"},{"location":"Compiler/Lexical%20Analysis/#42-nfa-dfa","title":"4.2 NFA -&gt; DFA","text":"<p>\u91c7\u7528 \u5b50\u96c6\u6784\u9020\u6cd5 (subset construction)</p> <ul> <li>DFA\u7684\u6bcf\u4e2a\u72b6\u6001\u662fNFA\u7684\u72b6\u6001\u96c6\u5408\u7684\u4e00\u4e2a\u5b50\u96c6</li> <li>\u8bfb\u4e86\u8f93\u5165 \\(a_i\\) \u540eNFA\u80fd\u5230\u8fbe\u7684\u6240\u6709\u72b6\u6001\uff1a\\(s_1, s_2, \u2026,s_k\\)\uff0c   \u5219DFA\u5230\u8fbe\u4e00\u4e2a\u72b6\u6001\uff0c\u5bf9\u5e94\u4e8eNFA\u7684{\\(s_1, s_2, \u2026,s_k\\)}.</li> </ul> <p></p> <p>\u8fc7\u7a0b\uff1a</p> <p></p> <p>NFA -&gt; DFA\u793a\u4f8b\uff1a</p> <p>\u9996\u5148\u8ba1\u7b97 \u72b6\u60010 \u7684\\(\\varepsilon\\)-closure\uff0c\u8bb0\u4e3a\\(A\\)</p> <p></p> <p>\u63a5\u7740\u8ba1\u7b97 \\(\\varepsilon - closure(move(A,a))\\)\uff0c\u8bb0\u4e3a\\(B\\)</p> <p></p> <p>\u518d\u8ba1\u7b97 \\(\\varepsilon - closure(move(A,b))\\)\uff0c\u8bb0\u4e3a\\(C\\)</p> <p></p> <p>\u63a5\u7740\u8ba1\u7b97 \\(\\varepsilon - closure(move(B,a))\\)\uff0c\u53d1\u73b0\u8be5\u96c6\u5408\u7b49\u4e8e \\(B\\)</p> <p></p> <p>\\(\\varepsilon - closure(move(B,b)) = \\varepsilon-closure(5,9)\\) \u8bb0\u4e3aD</p> <p></p> <p>\u8ba1\u7b97\u5b8cA\u3001B\u7684\u72b6\u6001\u8f6c\u6362\uff0c\u8ba1\u7b97C\u3001D\u7684\uff0cD\u662f\u8be5DFA\u7684final state\uff1a</p> <p></p> <p></p>"},{"location":"Compiler/Lexical%20Analysis/#43-dfa","title":"4.3 DFA\u7b80\u5316","text":"<p>\u4e00\u4e2a\u6b63\u5219\u8bed\u8a00\u53ef\u5bf9\u5e94\u4e8e\u591a\u4e2a\u8bc6\u522b\u6b64\u8bed\u8a00\u7684DFA\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230</p>"},{"location":"Compiler/Lexical%20Analysis/#distinguishable-states","title":"Distinguishable States","text":"<p>\u5982\u679c\u5b58\u5728\u4e32 \\(x\\)\uff0c\u4f7f\u5f97\u4ece \\(s\u3001t\\) \u51fa\u53d1\uff0c\u4e00\u4e2a\u5230\u8fbe\u63a5\u53d7\u72b6\u6001\uff0c\u4e00\u4e2a\u5230\u8fbe\u975e\u63a5\u53d7\u72b6\u6001\uff0c\u90a3\u4e48string \\(x\\) \u5c31\u533a\u5206\u4e86\u72b6\u6001 \\(s\\) \u548c \\(t\\).</p> <p></p>"},{"location":"Compiler/Lexical%20Analysis/#dfahopcroft","title":"DFA\u7b80\u5316\u7b97\u6cd5(Hopcroft \u7b97\u6cd5)","text":"<ul> <li> <p>\u5212\u5206\u90e8\u5206</p> </li> <li> <p>\u521d\u59cb\u5212\u5206: \u975e\u63a5\u53d7\u72b6\u6001\u7ec4\u548c\u63a5\u53d7\u72b6\u6001\u7ec4 \\(P = \\{S-F,F\\}\\)</p> </li> <li> <p>\u53cd\u590d\u5206\u88c2\u5212\u5206</p> <p></p> </li> <li> <p>\u76f4\u5230\u4e0d\u53ef\u518d\u5206\u88c2\uff0c</p> <pre><code>if P_new == P\n    P_final = P;\nelse\n    P = P_new;\n    go to step 2;\n</code></pre> </li> </ul> <p>\u4f8b\uff1a</p> <p></p> <ul> <li>\u6784\u9020\u90e8\u5206</li> </ul> <p>\u5728\\(P_{final}\\)\u7684\u6bcf\u4e2a\u7ec4\u4e2d\u9009\u62e9\u4e00\u4e2a\u72b6\u6001\u4f5c\u4ee3\u8868\uff0c\u4f5c\u4e3a\u6700\u5c0f\u5316DFA\u4e2d\u7684\u72b6\u6001</p> <ul> <li>\u5176\u4e2d\u5305\u542b\u539f\u5f00\u59cb\u72b6\u6001\u7684\u7ec4\u9009\u51fa\u7684\u72b6\u6001\u4e3a\u65b0\u5f00\u59cb\u72b6\u6001</li> <li>\u539f\u63a5\u53d7\u72b6\u6001\u7ec4\u4e2d\u5fc5\u987b\u53ea\u5305\u542b\u63a5\u53d7\u72b6\u6001\uff0c\u9009\u62e9\u51fa\u7684\u72b6\u6001\u4e3a\u65b0\u63a5\u53d7\u72b6\u6001</li> </ul> <p>\u4f8b\uff1a</p> <p></p>"},{"location":"Compiler/Parsing%20-%202/","title":"Buttom-Up Parsing","text":"<p>\u8be5\u90e8\u5206\u4e3b\u8981\u4ecb\u7ecdBottom-Up\u65b9\u6cd5\uff1a</p> <p></p> <p>\u6587\u6cd5\uff1a\\(LR(0),SLR(1),LR(1),LALR(1)\\)</p> <p>\u8868\u8fbe\u529b\u6392\u5e8f\uff1a</p> <p></p>"},{"location":"Compiler/Parsing%20-%202/#1-shift-reduce","title":"1. Shift-Reduce","text":"<p>Bottom-Up Parsing: \u4ece\u4e32w\u89c4\u7ea6\u4e3a\u6587\u6cd5\u5f00\u59cb\u7b26\u53f7S</p> <ul> <li>\u89c4\u7ea6: \u4e0e\u67d0\u4ea7\u751f\u5f0f \u53f3\u90e8 RHS \u76f8\u5339\u914d\u7684\u7279\u5b9a\u5b50\u4e32, \u88ab\u66ff\u6362\u4e3a\u8be5\u4ea7\u751f\u5f0f \u5934\u90e8 LHS \u7684\u975e\u7ec8\u7ed3\u7b26</li> <li>\u4f46\u95ee\u9898\u662f\uff1a\u4ec0\u4e48\u65f6\u5019\u89c4\u7ea6\uff08\u8bfb\u5165\u591a\u5c11token\u540e\u89c4\u7ea6\uff09\uff1f\u89c4\u7ea6\u5230\u54ea\u4e2a\u975e\u7ec8\u7ed3\u7b26\uff1f</li> </ul> <p>LR \u5206\u6790\u7684\u4e00\u822c\u6a21\u5f0f\uff1ashift-reduce</p> <p>\u4f8b\uff1a\u6211\u4eec\u53d1\u73b0\u5149\u6807\u79fb\u52a8Shift\u8fc7\u7a0b\u4e2d\u4ec0\u4e48\u65f6\u5019\u89c4\u7ea6Reduce\u662f\u5f88\u91cd\u8981\u7684\uff08\u505a\u66f4\u91cd\u8981\u7684\u51b3\u7b56\uff09\uff0c\u4e14\u6811\u662f\u4ece\u4e0b\u9762\u5f80\u4e0a\u5efa\u7684</p> <p></p> <p>\u6784\u5efa\u8fd9\u68f5\u6811\u7684\u8fc7\u7a0b\u662f\u6700\u53f3\u63a8\u5bfc\u7684\u9006\u8fc7\u7a0b(Rightmost derivation in reverse)\uff0c\u6700\u53f3\u63a8\u5bfc \u8fc7\u7a0b\u4e3a\uff1a</p> <p>\\(E \\Rightarrow E+(E) \\Rightarrow E+(int) \\Rightarrow E+(E)+(int) \\Rightarrow E+(int)+(int) \\Rightarrow int+(int)+(int)\\)</p> <p>Shift-Reduce\u662f\u57fa\u4e8e\u6808\u7684\uff1a</p> <p></p> <ul> <li>Symbol Stack\uff1a\u5b58 left-substring \\(\\alpha\\) (terminal or nonterminal)</li> <li>Input Stream\uff1a\u5b58\u5269\u4f59\u8f93\u5165 \\(\\beta\\)</li> <li>Shift \u610f\u4e3a push next input(terminal) on to top of stack</li> <li>Reduce \u89c4\u5219\u5982\u4e0b\uff1a</li> <li>\u6808\u9876\u5e94match RHS of rule (\\(X -&gt; AB\\)\uff0c\u6808\u9876\u5b57\u7b26\u5e94match AB)</li> <li>\u5c06\u6808\u9876match\u7684RHS pop\u51fa\u6765(\\(pop~BA\\))</li> <li>\u63a5\u7740push the LHS onto the Stack(\\(push~X\\))</li> </ul>"},{"location":"Compiler/Parsing%20-%202/#2-lr0","title":"2. LR(0)\u5206\u6790","text":"<p>\u5047\u8bbe\u4e0b\u6b21\u7528\u5230\u7684 rule \u4e3a \\(X\\rightarrow \\alpha \\beta\\)\uff0c\u4f7f\u7528\u5b83\u8fdb\u884c\u89c4\u7ea6\u524d\uff0c\u6808\u9876\u53ef\u80fd\u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u4e5f\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a \\(\\alpha\\)\uff0c\u53c8\u53ef\u80fdmatch\u4e86RHS\uff0c\u8fd9\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u5bf9\u5e94\u64cd\u4f5c\u4e5f\u5e94\u4e0d\u540c\u3002</p> <p>\u6240\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u72b6\u6001\uff0c\u7528\u4e8e\u8bb0\u5f55\u5f53\u524d\u8bc6\u522b\u7684\u8fdb\u5ea6\uff0c\u4ee5\u4fbf\u77e5\u9053\u6808\u9876\u5185\u5bb9\u662f\u5426\u53ef\u4ee5\u8fdb\u884c\u89c4\u7ea6\u4e86\u3002</p> <p>\u9879 \u7c7b\u4f3c\u4e8eAutomata\u4e2d\u7684\u72b6\u6001\uff1a</p> <p></p> <p></p> <p>\u72b6\u6001\u8df3\u8f6c\uff1a</p> <p></p> <p>\u72b6\u6001+\u8df3\u8f6c -&gt; \u81ea\u52a8\u673a\uff0c\u8fd9\u79cd\u76f8\u5e94\u7684\u6709\u7a77\u81ea\u52a8\u673a\u5c31\u662fLR(0)\u81ea\u52a8\u673a\uff1a</p> <ul> <li>\u6587\u6cd5\u4ea7\u751f\u5f0f\u6570\u91cf\u662f\u6709\u9650\u7684</li> <li>\u6bcf\u4e2a\u4ea7\u751f\u5f0f\u53f3\u90e8\u7684\u957f\u5ea6\u4e5f\u662f\u6709\u9650\u7684</li> <li>\u6545\u79f0\u4e3a\u6709\u7a77</li> </ul>"},{"location":"Compiler/Parsing%20-%202/#21-lr0-parsing-nfa","title":"2.1 LR(0) Parsing NFA","text":"<p>\u200b   \u8be5 NFA \u4e0d\u662f\u6307\u76f4\u63a5\u7528\u6765\u8bc6\u522b LR(0) \u8bed\u8a00\u7684\u81ea\u52a8\u673a\uff08 NFA \u53ea\u80fd\u8bc6\u522b\u6b63\u5219\u8bed\u8a00\uff0c\u7136\u800c LR(0) \u662f\u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u8a00\uff09\u3002\u8be5NFA\u662f\u7528\u6765\u201c\u8bb0\u5f55\u5f53\u524d\u8bc6\u522b\u8fdb\u5ea6\u201d\u7684\uff08\u5e2e\u52a9\u5224\u65ad\u6808\u9876\u5185\u5bb9\u662f\u5426\u53ef\u5f52\u7ea6\u4e86\uff09\u3002</p> <p>\u8d77\u59cb&amp;\u7ec8\u7ed3\u72b6\u6001</p> <p>\u589e\u52a0\u65b0\u5f00\u59cb\u7b26\u53f7 \\(S'\\) \u5e76\u52a0\u5165\u4ea7\u751f\u5f0f \\(S'\\rightarrow S\\$\\) </p> <p></p> <p>\u72b6\u6001\u8fc1\u79fb\u5173\u7cfb</p> <p></p> <p></p> <p>\u4f8b</p> <p></p>"},{"location":"Compiler/Parsing%20-%202/#22-lr0-parsing-dfa","title":"2.2 LR(0) Parsing DFA","text":""},{"location":"Compiler/Parsing%20-%202/#221-nfa-dfa","title":"2.2.1 NFA -&gt;&gt; DFA","text":"<p>\u5229\u7528\u5b50\u96c6\u6784\u9020\u6cd5\uff1a</p> <p></p>"},{"location":"Compiler/Parsing%20-%202/#222","title":"2.2.2 \u76f4\u63a5\u6784\u9020","text":"<p>\u9996\u5148\u662f\u9879\u96c6\u6784\u9020\uff0cDFA\u8d77\u59cb\u72b6\u6001\u4e3a \\(S'\\rightarrow \u00b7S\\$\\) \uff0c\u6839\u636e\u4e0b\u8ff0\u7b97\u6cd5\u6269\u5145\u9879\u96c6\uff0c\u5373\u5c06\u4ee5 S \u4e3a LHS  \u7684\u9879\u52a0\u8fdb\u53bb\uff1a</p> <p></p> <p>\u63a5\u7740\u7528GOTO\u7b97\u6cd5\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\uff0c\u5176\u4e2d \\(Goto(I,X)\\) \u5b9a\u4e49\u4e3a \\(I\\) \u4e2d\u6240\u6709\u5f62\u5982 \\(A \\rightarrow \\alpha\u00b7X\\beta\\) \u7684\u9879\u6240\u5bf9\u5e94\u7684\u9879 \\(A\\rightarrow \\alpha X\u00b7\\beta\\) \u7684\u96c6\u5408\u7684\u95ed\u5305\uff0c\\(X\\) \u4e3ainput\uff1a</p> <p></p> <p>\u7528Closure\u8865\u5168\u9879\u96c6\uff1a</p> <p></p> <p>\u6536\u655b\u6761\u4ef6\uff1a</p> <p></p> <p>\u4e0d\u8fc7\u8003\u8bd5\u4e00\u822c\u4e0d\u8003LR(0)\uff0c\u56e0\u4e3a\u6bd4\u8f83\u7b80\u5355\u3002</p>"},{"location":"Compiler/Parsing%20-%202/#23-lr0-parsing","title":"2.3 LR(0) Parsing \u5206\u6790\u8868","text":"<p>\u4eceLR(0) Parsing DFA\u5230\u8bed\u6cd5\u5206\u6790\u8868\uff1a</p> <p></p> <ul> <li>\\(s2\\) \u4ee3\u8868 shift \u5e76go to state 2\uff0c\\(T[1,x] = s2\\) \u4ee3\u8868\u5728\u72b6\u60011\u8bfb\u5165x\uff0c\u5c31shift\u5e76\u8df3\u8f6c\u5230\u72b6\u60012\uff0c\u6b64\u65f6\u4e00\u822cdot\u4e0d\u5728end.</li> <li>dot at the end\u65f6\uff0c\u5c31\u8981 reduce \u4e86\uff0c\u4f8b\u5982 \\(T[3,x] = r2\\) \uff0c\u4ee3\u8868\u7528\u751f\u6210\u5f0f2 \\(S\\rightarrow y\\) \u8fdb\u884c\u89c4\u7ea6\u3002</li> <li>accept \u8bf4\u660e\u63a5\u53d7\u8f93\u5165\u4e32\uff0c\u4e00\u822c\u662f\u5728final state\u3002</li> <li>\u5728 Goto \u8868\u4e2d\uff0c\u8f93\u5165\u662f non-terminal\uff0c\\(T[1,S]=g4\\) \u4ee3\u8868\u8f93\u5165S\uff0cgoto \u72b6\u60014\uff0c\u800c\u5728Action\u8868\u4e2d\u8f93\u5165\u662fterminal</li> </ul>"},{"location":"Compiler/Parsing%20-%202/#24-lr0-parsing","title":"2.4 LR(0) Parsing \u8fc7\u7a0b","text":"<p>\u7b97\u6cd5\uff1a</p> <p></p> <p>\u4f8b\uff1a</p> <p>\u8d77\u59cb\u5728\u72b6\u60011\uff1b\u8f93\u5165x\u540e\u5230\u72b6\u60012\uff1b\u518d\u8f93\u5165x\u8fd8\u662f\u72b6\u60012\uff1b\u63a5\u7740\u8f93\u5165y\u8df3\u8f6c\u5230\u72b6\u60013\uff1b\u7531\u4e8e\u4e0b\u4e00\u4e2a\u8f93\u5165\u5c31\u662f $ \uff0c\u6240\u4ee5reduce\uff0c|y|=1\uff0cpop\u72b6\u60013\uff0c\u5c06Goto[2,S]=5\u5165\u6808\uff1b\u5728\u72b6\u60015\u4e0breduce\uff0c|xS| = 2, pop\u72b6\u60015\u30012\uff0c\u5c06Goto[2,S] = 5\u5165\u6808\uff1b</p> <p></p> <p>\u8003\u70b9\uff1aGrammar\u7684DFA\u957f\u4ec0\u4e48\u6837\u3001\u9884\u6d4b\u8868\u957f\u4ec0\u4e48\u6837\uff0c\u7ed9\u4e00\u4e2ainput string\uff0c\u72b6\u6001\u6808\u7684\u53d8\u5316\u3002</p> <p>\u7531\u4e8eLR(0)\u5206\u6790\u5668\u4e0d\u4f1a\u67e5\u770b\u4e0b\u4e00\u4e2a\u8f93\u5165\u7b26\u53f7\uff0c\u6240\u4ee5\u6ca1\u6709\u8db3\u591f\u7684\u4e0a\u4e0b\u6587\u6765\u505a\u51fa\u66f4\u6b63\u786e(\u6216\u8005\u8bf4\u66f4\u201d\u806a\u660e\u201d)\u7684\u51b3\u5b9a\u3002</p>"},{"location":"Compiler/Parsing%20-%202/#3-slr","title":"3. SLR\u5206\u6790","text":"<p>SLR(1) \u4e2d\u7684 S \u8868\u793a Simple\u3002SLR(1) Parsing \u5728 LR(0) \u7684\u57fa\u7840\u4e0a\u901a\u8fc7\u7b80\u5355\u7684\u5224\u65ad\u5c1d\u8bd5\u89e3\u51b3\u51b2\u7a81\u3002</p>"},{"location":"Compiler/Parsing%20-%202/#31-slr1-parsing","title":"3.1 SLR(1) Parsing\u601d\u8def","text":"<p>SLR(1) \u5728\u751f\u6210 LR(0) DFA \u540e\uff0c\u8ba1\u7b97\u6bcf\u4e00\u4e2a non-terminal \u7684 Follow Set\uff0c\u5e76\u6839\u636e\u8fd9\u4e24\u8005\u521b\u5efa SLR(1) \u5206\u6790\u8868\u3002</p> <ul> <li>\u6bcf\u6b65\u89c4\u7ea6\u90fd\u5e94\u6ee1\u8db3 \\(t\\in Follow(E)\\)\uff0c\u53ea\u6709\u5f53\u4e0b\u4e00\u4e2a\u8f93\u5165 token \\(t\\in Follow(E) = \\{\\$\\}\\) \uff0c\u624d\u80fd\u8fdb\u884c\u89c4\u7ea6\uff0c\u6240\u4ee5\u5728\u72b6\u60013\u65f6\u8f93\u5165 \\(x,+\\) \u65e0\u6cd5\u89c4\u7ea6\uff0c\u540c\u7406\u72b6\u60015\uff0c\u8f93\u5165\u662f \\(\\{\\$,+\\}\\) \u65f6\u53ef\u89c4\u7ea6 \u3002</li> </ul> <p></p> <p>\u53ea\u6709\u5f53\u8f93\u5165\u4e3a $ \u65f6\uff0c\u72b6\u60013\u624d\u80fd\u8fdb\u884c\u89c4\u7ea6\uff1b\u540c\u7406\u72b6\u60016. \u72b6\u60015\u8f93\u5165\u53ef\u4ee5\u662f{+\uff0c$}.</p> <p>\u5982\u679c\u8fd9\u6837\u6784\u9020\u51fa\u7684 SLR(1) Parsing Table \u6ca1\u6709\u542b\u51b2\u7a81\u7684\u8868\u9879\uff0c\u90a3\u4e48\u79f0\u8fd9\u4e2a\u6587\u6cd5\u4e3a SLR(1) Grammar\uff0c\u5426\u5219\u4e0d\u662f\u3002</p>"},{"location":"Compiler/Parsing%20-%202/#32","title":"3.2 \u95ee\u9898\u4e0e\u5c40\u9650","text":"<p>SLR(1) \u89e3\u51b3\u4e86LR(0) \u7684shift or reduce \u548c\u7528\u54ea\u4e2aproduction \u89c4\u7ea6\u7684\u95ee\u9898\u3002\u4f46Follow\u96c6\u4ecd\u662f \u201c\u5408\u7406\u4f46\u53ef\u80fd\u4e0d\u591f\u7cbe\u786e\u7684\u8fd1\u4f3c\u201d\u3002</p> <p></p> <p>\u4ec0\u4e48\u662f\u6700\u53f3\u53e5\u578b\uff1f-- \u6700\u53f3\u63a8\u5bfc\u4e2d\u51fa\u73b0\u7684\u53e5\u578b</p>"},{"location":"Compiler/Parsing%20-%202/#4-lr1","title":"4. LR(1) \u5206\u6790","text":"<p>\u5305\u542b\u66f4\u591a\u4fe1\u606f\uff0c\u7cbe\u786e\u6307\u660e\u4f55\u65f6\u5e94\u8be5\u89c4\u7ea6\u3002</p> <p>LR(1)\u9879\u7684\u5f62\u5f0f\uff1a \\(A\\rightarrow \\alpha \u00b7\\beta,a\\)</p> <ul> <li>\\(a\\) \u79f0\u4e3a\u5411\u524d\u770b\u7b26\u53f7(lookahead symbol)\uff0c\u53ef\u4ee5\u662fterminal\u6216$</li> </ul> <p>\u95ed\u5305\u8ba1\u7b97\uff1a</p> <p></p> <p></p> <ul> <li>\\(w\\) \u662fterminal</li> </ul> <p>\u4f8b-\u8ba1\u7b97\u8be5Grammar\u7684DFA\u72b6\u60011\uff1a</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>Goto\u8ba1\u7b97\uff1a\u6bd4\u8f83\u7b80\u5355</p> <p></p> <p>Reduce Action\uff1a</p> <p></p> <p>\u5c40\u9650: LR(1) \u7684parsing table \u4f1a\u975e\u5e38\u5927,\u72b6\u6001\u5f88\u591a.</p>"},{"location":"Compiler/Parsing%20-%202/#5-lalr1","title":"5. LALR(1)","text":"<p>\u5728LR(1) \u4e2d,\u6709\u7684\u72b6\u6001\u53ea\u6709 look ahead symbol\u4e0d\u540c,\u7531\u6b64\u53ef\u4ee5\u8003\u8651\u5408\u5e76,\u4ece\u800c\u51cf\u5c11\u72b6\u6001\u6570:</p> <p></p> <ul> <li> <p>\u5b9a\u4e49 core : core of a set of LR items is the set of first components(\u4e0d\u5e26look ahead symbol)</p> </li> <li> <p>core \u76f8\u540c\u7684\u72b6\u6001\u53ef\u4ee5\u5408\u5e76. \u5408\u5e76\u540e\u7684\u72b6\u6001\u79f0\u4e3aLALR(1) states</p> </li> <li> <p>LALR(1) Parsing DFA \u5c31\u662f\u7531LR(1) DFA\u5408\u5e76\u76f4\u5230\u6240\u6709states\u7684core\u90fd\u4e0d\u540c</p> </li> <li> <p>\u5408\u5e76\u8fc7\u7a0b\u4e2d,\u8fb9\u4e5f\u8981\u76f8\u5e94\u6539\u53d8</p> </li> </ul> <p></p> <p>\u4f8b:</p> <p></p>"},{"location":"Compiler/Parsing%20-%202/#parsing-generator","title":"Parsing Generator","text":"<p>Yacc \u662f\u57fa\u4e8e LALR(1), \u7528BNF\u5f62\u5f0f\u4e66\u5199\u7684\u8bed\u6cd5\u5206\u6790\u5668\u7684\u751f\u6210\u5668, \u4e0eLex\u7684\u8054\u7cfb\u4e3a:</p> <p></p> <ul> <li>\u6d88\u9664\u4e8c\u4e49\u6027</li> <li>\u51b2\u7a81\u89e3\u51b3</li> </ul>"},{"location":"Compiler/Parsing%20-%202/#6","title":"6. \u5c0f\u7ed3","text":"<ul> <li>LR(0) SLR \u90fd\u4e0d\u4f1a\u663e\u5f0f\u5730\u8003\u8651look ahead symbol,\u9879\u96c6\u6bd4\u8f83\u7b80\u5355</li> </ul>"},{"location":"Compiler/Parsing/","title":"Parsing","text":""},{"location":"Compiler/Parsing/#1","title":"1. \u8bed\u6cd5\u5206\u6790\u6982\u8ff0","text":"<p>\u8bed\u6cd5\u5206\u6790\u5668\u7684\u4f5c\u7528\uff1a\u4ece\u8bcd\u6cd5\u5206\u6790\u5668\u83b7\u5f97Token\u5e8f\u5217\uff0c\u786e\u8ba4\u5176\u662f\u5426\u53ef\u4ee5\u7531\u8bed\u8a00\u7684\u6587\u6cd5\u751f\u6210\u3002</p> <ul> <li> <p>\u5bf9\u4e8e\u8bed\u6cd5\u9519\u8bef\u7684\u7a0b\u5e8f\uff0c\u62a5\u544a\u9519\u8bef\u4fe1\u606f</p> </li> <li> <p>\u5bf9\u4e8e\u8bed\u6cd5\u6b63\u786e\u7684\u7a0b\u5e8f\uff0c\u751f\u6210\u8bed\u6cd5\u5206\u6790\u6811 (\u7b80\u79f0\u8bed\u6cd5\u6811)\uff0c\u901a\u5e38\u4ea7\u751f\u62bd\u8c61\u8bed\u6cd5\u6811AST</p> </li> </ul> <p></p> <p>\u5982\u4f55\u5224\u5b9a\u8f93\u5165\u5408\u6cd5\u6027 &amp; \u751f\u6210\u8bed\u6cd5\u6811</p> <ul> <li>\u9996\u5148\u5728\u8bcd\u6cd5\u5206\u6790\u90e8\u5206\u89c4\u5b9a\u5408\u6cd5\u7684\u57fa\u672c\u5355\u5143 Token</li> <li>\u5176\u6b21\u8981\u7406\u89e3\u7b97\u672f\u8868\u8fbe\u5f0f\u7684\u6784\u6210</li> <li>\u5927\u8868\u8fbe\u5f0f\u53ef\u62c6\u4e3a\u5b50\u8868\u8fbe\u5f0f</li> <li>\u76f4\u81f3\u770b\u5230\u7684\u90fd\u662f\u57fa\u672c\u5355\u5143</li> </ul>"},{"location":"Compiler/Parsing/#2","title":"2. \u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u6cd5","text":""},{"location":"Compiler/Parsing/#21-cfg","title":"2.1 CFG\u7b80\u4ecb","text":"<ul> <li> <p>Terminals \u4e3a\u7ec4\u6210\u4e32\u7684\u57fa\u672c\u7b26\u53f7(Token)\uff0c\u5982 <code>num,+,-</code></p> </li> <li> <p>Nonterminal \u662f\u8868\u793a\u4e32\u7684\u96c6\u5408\u7684\u8bed\u6cd5\u53d8\u91cf\uff0c\u5982 <code>expr,stmt</code></p> </li> <li> <p>Productions \u5de6\u8fb9\u4e3a\u975e\u7ec8\u7ed3\u7b26\uff0c\u53f3\u90e8\u4e3a\u4e00\u4e2a\u7b26\u53f7\u4e32\uff0c\u53ef\u7f29\u5199</p> </li> </ul> <p></p> <ul> <li>Start Symbol\uff1a\u4e00\u4e2a\u88ab\u6307\u5b9a\u7684\u975e\u7ec8\u7ed3\u7b26\u53f7\uff0c\u7531\u5176\u5f00\u59cb\u89e3\u6790</li> </ul> <p></p> <p>\u5728\u864e\u4e66\u4e0a\u4ecb\u7ecd\u4e86 \u2018$\u2019 \u7b26\u53f7\uff0c\u7528\u4e8e\u8868\u793a <code>end of file(EOF)</code>\uff1a</p> <p></p>"},{"location":"Compiler/Parsing/#22","title":"2.2 \u63a8\u5bfc\u548c\u89c4\u7ea6","text":"<p>\u7ed9\u5b9a\u6587\u6cd5 \\(G = (T,N,P,S)\\)</p> <p>\u76f4\u63a5\u63a8\u5bfc\uff1a\u628a\u4ea7\u751f\u5f0f\u770b\u6210\u91cd\u5199\u89c4\u5219\uff0c\u628a\u7b26\u53f7\u4e32\u4e2d\u7684\u975e\u7ec8\u7ed3\u7b26\u7528\u5176\u4ea7\u751f\u5f0f\u53f3\u90e8\u7684\u4e32\u6765\u4ee3\u66ff\u3002</p> <ul> <li>if \\(A \\rightarrow \\gamma \\in P\\) \uff0c\u4e14 \\(\\alpha,\\beta\\in(T\\cup N)^*\\)  \uff0c\u79f0\u4e32 \\(\\alpha A\\beta\\) \u76f4\u63a5\u63a8\u5bfc\u51fa \\(\\alpha \\gamma \\beta\\)\uff0c\u5e76\u8bb0\u4f5c \\(\\alpha A\\beta \\Rightarrow \\alpha \\gamma \\beta\\).</li> </ul> <p>\u76f4\u63a5\u89c4\u7ea6\uff1a \u5982\u679c \\(\\alpha A\\beta \\Rightarrow \\alpha \\gamma \\beta\\) \uff0c\u5219 \\(\\alpha \\gamma \\beta\\) \u76f4\u63a5\u89c4\u7ea6\u5230 \\(\\alpha A\\beta\\)</p> <p>\u591a\u6b65\u63a8\u5bfc</p> <p></p> <p>\u6700\u5de6\u63a8\u5bfcLeft-most Derivation \uff1a\u6bcf\u6b65\u4ee3\u6362\u6700\u5de6\u8fb9\u7684\u975e\u7ec8\u7ed3\u7b26\uff0c\u4ece\u4e0b\u5f80\u4e0a\u770b\u5c31\u662f\u6700\u53f3\u89c4\u7ea6</p> <p></p> <p>\u6700\u53f3\u63a8\u5bfc\uff1a\u6bcf\u6b65\u4ee3\u6362\u6700\u53f3\u8fb9\u7684\u975e\u7ec8\u7ed3\u7b26</p> <p></p> <p>\u603b\u7684\u6765\u8bf4\uff0c\u53e5\u5b50\u7684\u63a8\u5bfc\u662f\u4ece\u751f\u6210\u8bed\u8a00\u7684\u89d2\u5ea6\uff0c\u53e5\u5b50\u7684\u5f52\u7ea6\u662f\u4ece\u8bc6\u522b\u8bed\u8a00\u7684\u89d2\u5ea6</p> <p>\u53e5\u578b\u3001\u53e5\u5b50\u548c\u8bed\u8a00\u6982\u5ff5</p> <p></p> <p></p>"},{"location":"Compiler/Parsing/#23-cfgparse-tree","title":"2.3 CFG\u7684Parse Tree","text":""},{"location":"Compiler/Parsing/#231-parse-tree","title":"2.3.1 Parse Tree","text":"<ul> <li>\u6839\u8282\u70b9\u4e3a\u6587\u6cd5\u7684\u521d\u59cb\u7b26\u53f7</li> <li>\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u662f\u4e00\u4e2a\u7ec8\u7ed3\u7b26</li> <li>\u6bcf\u4e2a\u5185\u90e8\u8282\u70b9\u662f\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26</li> <li>\u6bcf\u4e2a\u7236\u8282\u70b9\u53ca\u5176\u5b50\u8282\u70b9\u6784\u6210\u4e00\u6761\u4ea7\u751f\u5f0f</li> </ul>"},{"location":"Compiler/Parsing/#232","title":"2.3.2 \u8bed\u6cd5\u5206\u6790","text":"<p>\u8bed\u6cd5\u5206\u6790\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u7ec8\u7ed3\u7b26\u53f7\u4e32x, \u4eceS\u63a8\u5bfc\u51fax(top-down)\u6216\u8005\u5c06x\u5f52\u7ea6\u4e3aS(bottom-up)\u3002</p> <p>\u8bed\u6cd5\u5206\u6790\u590d\u6742\u5ea6\uff1a</p> <p> </p> <p>\u8bed\u6cd5\u5206\u6790\u7b97\u6cd5\u5206\u7c7b</p> <ul> <li> <p>\u81ea\u9876\u5411\u4e0b Top-down</p> </li> <li> <p>\u4ece\u5f00\u59cb\u7b26\u53f7S\u51fa\u53d1\uff0c\u5c1d\u8bd5\u6839\u636e\u4ea7\u751f\u5f0f\u89c4\u5219\u63a8\u5bfc (derive)\u51fax</p> </li> <li> <p>Parse Tree\u7684\u6784\u9020\u65b9\u6cd5\uff1a\u4ece\u6839\u90e8\u5f00\u59cb</p> </li> <li> <p>\u81ea\u5e95\u5411\u4e0a Bottom-up</p> </li> <li> <p>\u5c1d\u8bd5\u6839\u636e\u4ea7\u751f\u5f0f\u89c4\u5219\u5f52\u7ea6(reduce)\u5230\u6587\u6cd5\u7684\u5f00\u59cb\u7b26\u53f7S</p> </li> <li>Parse Tree\u7684\u6784\u9020\u65b9\u6cd5: \u4ece\u53f6\u5b50\u5f00\u59cb</li> </ul> <p></p>"},{"location":"Compiler/Parsing/#3","title":"3. \u8bbe\u8ba1\u7f16\u7a0b\u8bed\u8a00\u6587\u6cd5","text":""},{"location":"Compiler/Parsing/#31-recfg","title":"3.1 RE\u4e0eCFG\u8bed\u8a00\u5bf9\u6bd4","text":"<p>\u5176\u4e2d\uff0c\u6b63\u5219\u8bed\u8a00\u8868\u8fbe\u80fd\u529b\u6709\u9650\uff0c\u96be\u4ee5\u523b\u753b\u7f16\u7a0b\u8bed\u8a00\u7684\u8bed\u6cd5\u3002</p> <ul> <li>\u5982: \u4e0d\u80fd\u7528\u4e8e\u63cf\u8ff0\u914d\u5bf9\u6216\u5d4c\u5957\u7684\u7ed3\u6784</li> </ul>"},{"location":"Compiler/Parsing/#32-cfg","title":"3.2 CFG\u6539\u9020/\u9650\u5236","text":"<p>\u4e3a\u4e86\u9ad8\u6548\u8bed\u6cd5\u5206\u6790\uff0c\u53ef\u80fd\u5bf9\u6587\u6cd5\u505a\u5904\u7406/\u9650\u5236\uff08\u5982\u4e0a\u9762\u63d0\u5230\u7684\u964d\u4f4e\u590d\u6742\u5ea6\uff09\uff0c\u6709\u5982\u4e0b\u65b9\u6cd5\uff1a</p> <p></p>"},{"location":"Compiler/Parsing/#321","title":"3.2.1 \u6d88\u9664\u4e8c\u4e49\u6027","text":"<p>\u4e8c\u4e49\u6027: \u5982\u679c\u6587\u6cd5\u7684\u67d0\u4e9b\u53e5\u5b50\u5b58\u5728\u4e0d\u6b62\u4e00\u68f5\u5206\u6790\u6811\uff0c\u5219\u8be5\u6587\u6cd5\u662f\u4e8c\u4e49\u7684\u3002</p> <p>\u4e8c\u4e49\u6027\u4f1a\u7ed9\u8bed\u6cd5\u5206\u6790\u5e26\u6765\u4e0d\u786e\u5b9a\u6027\uff0c\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u6587\u6cd5\u901a\u5e38\u90fd\u5e94\u8be5\u662f\u65e0\u4e8c\u4e49\u6027\u7684</p> <p></p> <p>\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u8868\u8fbe\u5f0f\u4f1a\u6709\u591a\u79cd\u201d\u6b63\u786e\u201c\u7684\u89e3\u91ca\u3002</p> <p>\u901a\u8fc7 \u201d\u5206\u5c42\u201c \u6280\u672f\u6765\u6d88\u9664\u4e8c\u4e49\u6027\uff1a</p> <ul> <li>\u89c4\u5b9a\u7b26\u53f7\u7684\u4f18\u5148\u7ea7</li> <li>\u6839\u636e\u7b97\u7b26\u4e0d\u540c\u7684\u4f18\u5148\u7ea7\uff0c\u5f15\u5165\u65b0\u7684\u975e\u7ec8\u7ed3\u7b26</li> <li>\u8d8a\u63a5\u8fd1\u5f00\u59cb\u7b26\u53f7 S \u7684\u6587\u6cd5\u7b26\u53f7\u4f18\u5148\u7ea7\u8d8a\u4f4e</li> <li>\u89c4\u5b9a\u7b26\u53f7\u7684\u7ed3\u5408\u6027</li> <li>\u9012\u5f52\u975e\u7ec8\u7ed3\u7b26\u5728\u7ec8\u7ed3\u7b26\u5de6\u8fb9\uff0c\u8fd0\u7b97\u5c31\u5de6\u7ed3\u5408</li> </ul> <p></p> <p>\u5982\u4f55\u8bc1\u660e\u201c\u4e8c\u4e49\u6027\u201d --- \u4e3e\u53cd\u4f8b\uff0c\u7ed9\u4e00\u4e2a\u8868\u8fbe\uff0c\u5199\u51fa\u5b83\u7684\u4e24\u4e2aparse tree</p> <p></p> <p>\u8fd9\u91cc else E4\u5230\u5e95\u662f if E1\u7684\u8fd8\u662f if E2\u7684\uff0c\u5b58\u5728 ambiguity\u3002</p> <p>\u6d88\u9664\u4e0a\u9762\u6587\u6cd5\u7684\u4e8c\u4e49\u6027\uff1a</p> <p></p>"},{"location":"Compiler/Parsing/#4","title":"4. \u9012\u5f52\u4e0b\u964d\u5206\u6790","text":"<p>\u9012\u5f52\u4e0b\u964d\u5206\u6790(Recursive-Descent Parsing)\u662f\u81ea\u9876\u5411\u4e0b\u5206\u6790\u7684\u901a\u7528\u5f62\u5f0f</p> <p></p> <p></p>"},{"location":"Compiler/Parsing/#41","title":"4.1 \u56de\u6eaf","text":"<p>\u4f46\u590d\u6742\u7684\u56de\u6eaf\u4f1a\u5bfc\u81f4\u4ee3\u4ef7\u592a\u9ad8\uff1a</p> <ul> <li>\u975e\u7ec8\u7ed3\u7b26\u6709\u53ef\u80fd\u6709\u591a\u4e2a\u4ea7\u751f\u5f0f\uff0c\u7531\u4e8e\u4fe1\u606f\u7f3a\u5931\uff0c\u65e0\u6cd5\u51c6\u786e\u9884\u6d4b\u9009\u62e9\u54ea\u4e00\u4e2a</li> <li>\u8003\u8651\u5230\u5f80\u5f80\u9700\u8981\u5bf9\u591a\u4e2a\u975e\u7ec8\u7ed3\u7b26\u8fdb\u884c\u63a8\u5bfc\u5c55\u5f00\uff0c\u56e0\u6b64\u5c1d\u8bd5\u7684\u8def\u5f84\u53ef\u80fd\u5448\u6307\u6570\u7ea7\u7206\u70b8</li> </ul>"},{"location":"Compiler/Parsing/#5-ll1","title":"5. LL(1)\u548c\u9884\u6d4b\u5206\u6790\u6cd5","text":"<p>Predictive Parsing\u9884\u6d4b\u5206\u6790\u6cd5\u7528\u4e8e\u89e3\u51b3\u590d\u6742\u56de\u6eaf\u7684\u95ee\u9898\uff0c\u8be5\u65b9\u6cd5\u63a5\u53d7 LL(k) \u8bed\u6cd5</p>"},{"location":"Compiler/Parsing/#51-ll1","title":"5.1 LL(1)\u6587\u6cd5","text":"<p>LL(k) \u6587\u6cd5\uff1a</p> <p></p>"},{"location":"Compiler/Parsing/#511-firstfollow","title":"5.1.1 First\uff0cFollow\u96c6","text":"<p>First\u548cFollow\u96c6\u6d89\u53ca \u7a7a\u4e32 \uff0c\u6545\u5f15\u5165Nullable\u6982\u5ff5\uff1a</p> <p></p> <p>First\u96c6\u5f52\u7eb3\u5b9a\u4e49</p> <p></p> <p>Follow\u96c6\u5f52\u7eb3\u5b9a\u4e49</p> <p></p> <p></p> <p>\u4f8b\uff1a</p> <p></p> <p>\u63a5\u7740\u89c2\u5bdf\u662f\u5426\u6709\u7b26\u53f7\u4e3aNullable\uff1a</p> <p></p> <p>\u8ba1\u7b97\u5b8cNullable\u540e\u8ba1\u7b97First\uff0c\u9996\u5148\u5c06First\u96c6\u521d\u59cb\u5316\u4e3a\u7a7a\u96c6\uff0c\u63a5\u7740\u586b\u5145\uff1a</p> <p></p> <p></p> <p>\u8ba1\u7b97Follow\uff0c\u4e5f\u662f\u5148\u521d\u59cb\u5316\u4e3a\u7a7a\u4e32\u518d\u586b\u5145\uff1a</p> <p></p>"},{"location":"Compiler/Parsing/#512-ll1","title":"5.1.2 LL(1)\u6587\u6cd5\u5b9a\u4e49\uff1a","text":""},{"location":"Compiler/Parsing/#52-ll1","title":"5.2 LL(1)\u9884\u6d4b\u5206\u6790","text":""},{"location":"Compiler/Parsing/#521","title":"5.2.1 \u6784\u9020\u9884\u6d4b\u5206\u6790\u8868","text":"<p>\u9884\u6d4b\u5206\u6790\u8868\u5b9a\u4e49\uff1a</p> <p></p> <p>\u5982\u4f55\u6784\u9020\u9884\u6d4b\u5206\u6790\u8868-\u4f8b\uff1a</p> <p></p> <p>\u56e0 \\(Z\\rightarrow XYZ\\) \u6ee1\u8db3\u4e0a\u9762\u7684\u4e24\u4e2aif\u6761\u4ef6\uff1a</p> <ul> <li>\\(a \\in First(X)\\)</li> <li>\\(c \\in First(X)\\)</li> <li>\\(XY \\in Nullable\\)\uff0c\u4e14\\(d \\in First(Z)\\)</li> </ul> <p>\u6700\u540e\u5f97\u5230\uff1a</p> <p></p> <ul> <li>\\(d\\in First(d),a\\in First(a),c\\in First(c)\\)</li> <li>\\(Y \\rightarrow \\epsilon\\)  Follow(Y) = {a,c,d}</li> <li>\\(X\\rightarrow Y\\) \uff0cY \u4e3a\u7a7a\u4e32\uff0c\u4e14Follow(X) = {a,c,d}</li> </ul> <p>\u4e0d\u8fc7\uff0cLL(1)\u7684\u9884\u6d4b\u5206\u6790\u8868\u4e2d\uff0c\u6bcf\u4e2a\u5355\u5143\u683c\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u591a\u4f59\u5c31\u4e0d\u7b26\u5408\u6587\u6cd5\uff08\u9009\u62e9\u4e0d\u552f\u4e00\uff0c\u65e0\u6cd5Parsing\uff09\u3002</p>"},{"location":"Compiler/Parsing/#521_1","title":"5.2.1 \u9012\u5f52\u4e0b\u964d\u5b9e\u73b0","text":"<p>LL(1)\u9012\u5f52\u4e0b\u964d\u5b9e\u73b0-\u4f8b1\uff1a</p> <p></p> <p></p> <p></p> <p>\u8be5\u4f8b\u4e2d\u7531\u4e8e\u6bcf\u4e2anon-terminal\u89c4\u5219\u751f\u6210\u7684\u7b2c\u4e00\u4e2asymbols\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981Follow\u3002</p> <p>\u4f8b2\uff1a</p> <p></p> <p>\u7528\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u6587\u6cd5\u6765\u5c55\u73b0\u9884\u6d4b\u5206\u6790\u8868\u7684\u7528\u9014\uff1a $$ S\\rightarrow ES' \\ S'\\rightarrow \\epsilon|+S\\ E\\rightarrow num|(S) $$ Parsing table \u5982\u4e0b\uff1a</p> <p></p> <p>\u6240\u4ee5\u5f53input\u4e3a \\((1+2+(3+4))+5\\) \u65f6\uff0c\u521d\u59cb\u4e3aS\u72b6\u6001\uff0c\u68c0\u6d4b\u5230 '(' \uff0c\u4f7f\u7528rule \\(S\\rightarrow ES'\\) \uff0c\u518d\u7531 \\(E\\rightarrow(S)\\)\u5339\u914d'('; \u5339\u914d\u524d\u4e00\u4e2a\u540e\u8f93\u5165num '1'\uff0c\u6839\u636e\u9884\u6d4b\u8868\u9009\u62e9\u5bf9\u5e94rule\u2026\u2026 \uff1a</p> <p></p>"},{"location":"Compiler/Parsing/#6","title":"6. \u6587\u6cd5\u6539\u9020","text":""},{"location":"Compiler/Parsing/#61","title":"6.1 \u63d0\u5de6\u516c\u56e0\u5b50","text":"<p>\u6709\u5de6\u516c\u56e0\u5b50(left-factored) \u7684\u6587\u6cd5(\u5b58\u5728\u5171\u540c\u524d\u7f00)\u4f1a\u5bfc\u81f4\u56de\u6eaf\uff0c\u589e\u52a0\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u9700\u8981\u63d0\u5de6\u516c\u56e0\u5b50\uff1a</p> <p></p>"},{"location":"Compiler/Parsing/#62","title":"6.2 \u6d88\u9664\u5de6\u9012\u5f52","text":"<p>\u89e3\u51b3\uff1a</p> <p></p>"},{"location":"Compiler/Parsing/#7","title":"7. \u9519\u8bef\u6062\u590d","text":"<p>\u9519\u8bef\u7c7b\u578b\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u8bcd\u6cd5\u9519\u8bef\uff0c\u5982\u6807\u8bc6\u7b26\u3001\u5173\u952e\u5b57\u6216\u7b97\u7b26\u7684\u62fc\u5199\u9519</p> </li> <li> <p>\u8bed\u6cd5\u9519\u8bef\uff0c\u5982\u7b97\u672f\u8868\u8fbe\u5f0f\u7684\u62ec\u53f7\u4e0d\u914d\u5bf9</p> </li> <li> <p>\u8bed\u4e49\u9519\u8bef\uff0c\u5982\u7b97\u7b26\u4f5c\u7528\u4e8e\u4e0d\u76f8\u5bb9\u7684\u8fd0\u7b97\u5bf9\u8c61</p> </li> </ul> <p>\u4ee5\u4e0b\u7a0b\u5e8f\u6ca1\u6709\u8bcd\u6cd5\u9519\u8bef\uff0c\u4f46\u662f\u6709\u591a\u4e2a\u8bed\u6cd5\u9519\u8bef\uff1a</p> <p></p> <p>\u2026\u2026\u4f8b\u5b50\u5f85\u8865\u5145</p>"},{"location":"Compiler/Semantic%20Analysis/","title":"ch5 - Semantic Analysis","text":"<p>\u5e7f\u4e49</p> <ul> <li>Analyze the semantics of programs (usually) through various program representations</li> <li>Control flow graph (CFG)</li> <li>Static Single Assgnment (SSA)</li> <li>Program dependence graph (PDG)</li> <li> <p>\u2026</p> </li> <li> <p>Sample semantic analysis</p> </li> <li>Type checking</li> <li>Dead code elimination</li> <li>Code generation.. etc </li> </ul> <p>\u72ed\u4e49 -- \u7f16\u8bd1\u539f\u7406\u76f8\u5173\u8bfe\u7a0b\u9ed8\u8ba4\u7684\u8bed\u4e49\u5206\u6790\uff0c\u7f16\u8bd1\u5668\u7684\u4e00\u4e2a\u6b65\u9aa4</p> <ul> <li>Determine some static properties via AST\uff08type\u68c0\u67e5\u3001scope\u68c0\u67e5\uff09</li> <li>Translate the AST into some intermediate code</li> </ul>"},{"location":"Compiler/Semantic%20Analysis/#1-symbol-table","title":"1. Symbol table","text":""},{"location":"Compiler/Semantic%20Analysis/#11-symbol-table","title":"1.1 Symbol Table","text":"<p>\u5047\u8bbe\u6700\u5f00\u59cb\u7684\u73af\u5883\u4e3a \\(\\sigma_0\\) \uff0c\u5b9a\u4e49\u7684 function \u7684\u73af\u5883\u4e3a \\(\\sigma_1\\) \uff08update a,b,c \u53d8\u91cf\uff0c\u6240\u4ee5\u8981\u66f4\u65b0\uff09\uff0cline2\u901a\u8fc7\u5728\u73af\u58831\u4e2d\u67e5\u8be2a\uff0cc\u5b9e\u73b0\u3002</p> <p></p> <p>\u4e0b\u8868\u4f5c\u4e86\u4e00\u4e2a\u603b\u7ed3\uff1a</p> <p></p> <p></p>"},{"location":"Compiler/Semantic%20Analysis/#12-efficient-implementation","title":"1.2 Efficient Implementation","text":"<p>\u7b26\u53f7\u8868\u4e00\u822c\u6709\u56db\u4e2a interfaces\uff1a</p> <ul> <li>insert: \u5c06\u540d\u79f0\u7ed1\u5b9a\u5230\u76f8\u5173\u4fe1\u606f(\u5982\u7c7b\u578b), \u5982\u679c\u540d\u79f0\u5df2\u5728\u7b26\u53f7\u8868\u4e2d\u5b9a\u4e49\uff0c\u5219\u65b0\u7684\u7ed1\u5b9a\u4f18\u5148\u4e8e\u65e7\u7684\u7ed1\u5b9a</li> <li>lookup: \u5728\u7b26\u53f7\u8868\u4e2d\u67e5\u627e\u7279\u5b9a\u540d\u79f0\u7ed1\u5b9a\u7684\u4fe1\u606f</li> <li>beginScope: \u8fdb\u5165\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u57df</li> <li>endScope: \u9000\u51fa\u4f5c\u7528\u57df\uff0c\u5c06\u7b26\u53f7\u8868\u6062\u590d\u5230\u8fdb\u5165\u4e4b\u524d\u7684\u72b6\u6001</li> </ul> <p>\u5b9e\u73b0\u975e\u5e38\u91cd\u8981\uff01\u4e24\u79cd\u65b9\u6cd5 -- \u547d\u4ee4\u5f0f &amp; \u51fd\u6570\u5f0f</p> <p></p>"},{"location":"Compiler/Semantic%20Analysis/#121-imperative-style","title":"1.2.1 Imperative Style","text":"<p>\u6709\u8bb8\u591a\u7b56\u7565\u6765\u5b9e\u73b0\u547d\u4ee4\u5f0f\uff1a</p> <ol> <li>A stack of hash tables\uff1a\u6bcf\u4e00\u4e2a scope \u90fd\u6709\u81ea\u5df1\u7684 hash table\uff0c\u67e5\u627e\u65f6\u4ece\u6700\u91cc\u7684\u4f5c\u7528\u57df\u5411\u5916\u67e5\u627e\uff0c\u7b80\u5355\u4f46\u662f\u53ef\u80fd\u4f1a\u9020\u6210 memory-intensive</li> <li>A single hash table + a stack of scope markers:  \u4e00\u4e2a\u7edf\u4e00\u7684\u8868\uff0c\u5e26\u6709\u8ddf\u8e2a\u4f5c\u7528\u57df\u8fb9\u754c\u7684 markers\uff0cMemory efficient but requires cleanup when exiting scopes\u3002</li> <li>Flat namespace with name mangling\uff1a\u76f4\u63a5\u5728\u7b26\u53f7\u540d\u4e2d\u7f16\u7801\u4f5c\u7528\u57df\u4fe1\u606f\uff0cNo explicit scope tracking needed</li> </ol> <p>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u91cd\u70b9\u4ecb\u7ecd\uff08\u6808\u65e2\u5b58symbols\uff0c\u53c8\u5b58\u4f5c\u7528\u57df\u5f00\u59cb\u6807\u8bb0marker\uff09\uff1a</p> <ul> <li>\u552f\u4e00\u7684\u8868\u7528\u4e8estore all active bindings across all scopes\uff1b</li> <li> <p>stack\u7528\u4e8e\u8ddf\u8e2a\u6bcf\u4e2a\u4f5c\u7528\u57df\u4e2d\u6dfb\u52a0\u7684symbols\uff1b</p> </li> <li> <p>\u5f53\u8fdb\u5165\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u57df\u65f6\uff0c\u4e00\u4e2a marker \u88ab\u538b\u5165\u5806\u6808\uff1b</p> </li> <li>\u5f53\u6dfb\u52a0\u4e00\u4e2a\u7b26\u53f7\u65f6\uff0c\u5b83\u65e2\u88ab\u6dfb\u52a0\u5230\u54c8\u5e0c\u8868\u4e2d\uff0c\u53c8\u88ab\u8bb0\u5f55\u5728\u5806\u6808\u4e0a\uff1b</li> <li>\u5f53\u9000\u51fa\u4e00\u4e2a\u4f5c\u7528\u57df\u65f6\uff0c\u81ea\u6700\u540e\u4e00\u4e2a scope marker \u4ee5\u6765\u6dfb\u52a0\u7684\u6240\u6709\u7b26\u53f7\u90fd\u5c06\u4ece\u54c8\u5e0c\u8868\u4e2d\u5220\u9664</li> </ul> <p>\u7528python\u5b9e\u73b0\uff0cbindings\u4e3a\u4e00\u4e2a\u5b57\u5178\uff0c\u8868\u793a\u53d8\u91cf\u4e0e\u5176\u5728\u4f5c\u7528\u57df\u7684\u6240\u6709\u503c\u7684\u5bf9\u5e94\uff1a</p> <p></p> <p></p> <p></p> <p></p> <p>\u4e00\u4e2a\u6f14\u793a\uff1a</p> <p></p> <p>\u4f7f\u7528 end_scope() \u7ed3\u675f\u5d4c\u5957\u4f5c\u7528\u57df\u3002\u6808\u4e2d\u5143\u7d20\u4f1a\u88ab\u5f39\u51fa\u76f4\u5230\u9047\u5230ScopeMarker\u3002\u9996\u5148\u5f39\u51fa 'x'\uff0c\u79fb\u9664\u5176\u503c 100\uff1b\u7136\u540e\u5f39\u51fa 'z'\uff0c\u5b8c\u5168\u79fb\u9664\uff1b\u6700\u540e\u5f39\u51fa ScopeMarker \u672c\u8eab\u3002</p> <p></p> <p>\u6700\u7ec8\u72b6\u6001\uff1a\u5d4c\u5957\u4f5c\u7528\u57df\u5df2\u5173\u95ed\uff0c\u53ea\u5269\u4e0b\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf x = 10 \u548c y = 20\u3002</p>"},{"location":"Compiler/Semantic%20Analysis/#122-functional-style","title":"1.2.2 Functional Style","text":"<p>\u51fd\u6570\u5f0f\u65b9\u6cd5\u5c31\u6bd4\u8f83\u590d\u6742\u4e86\uff0c\u66f4\u591a\u8003\u5bdf\u7684\u662f\u4e00\u79cd\u601d\u60f3\uff1a</p> <p></p> <p>\u901a\u8fc7 binary search trees (BSTs) \u5b9e\u73b0\uff0c\u6bcf\u4e00\u4e2anode\u5305\u542b\u4ece identifier (key) to </p> <p>binding \u7684mapping\uff1a</p> <p></p> <p></p>"},{"location":"Compiler/Semantic%20Analysis/#123-style","title":"1.2.3 \u4e24\u79cdStyle\u5bf9\u6bd4","text":"<p>\u4e24\u8005\u7684\u5bf9\u6bd4\u53ef\u4ee5\u8bb0\u4e00\u4e0b\u3002\u51fd\u6570\u5f0f\u7684\u66f4\u597d\u8c03\u8bd5\uff0c\u56e0\u4e3a\u4fdd\u5b58\u4e86\u72b6\u6001\uff0c\u4e0d\u50cf\u547d\u4ee4\u5f0f\u5728\u9000\u51fa\u4f5c\u7528\u57df\u540e\u5c31\u5168\u90e8\u6e05\u7a7a\u4e86\u3002</p> <p></p>"},{"location":"Compiler/Semantic%20Analysis/#2-type-checking","title":"2. Type Checking","text":""},{"location":"Compiler/Semantic%20Analysis/#21","title":"2.1 \u7c7b\u578b\u53ca\u5176\u4f5c\u7528","text":""},{"location":"Compiler/Semantic%20Analysis/#22-tiger","title":"2.2 Tiger \u7c7b\u578b\u7cfb\u7edf","text":"<p>Type Equivalence\uff1a</p> <ul> <li>Name equivalence (NE)\uff1aT1 and T2 are equivalent iff T1 and T2 are identical type names defined by the exact same type declaration</li> <li>Structure equivalence (SE)\uff1aT1 and T2 are equivalent iff T1 and T2 are composed of the same constructors applied in the same order</li> </ul> <p></p> <p>Tiger \u4f7f\u7528 name equivalence\uff0c\u5982\u4e0b\u56fe\uff0c\u867d\u7136 type a,b\u7684\u7ed3\u6784\u76f8\u540c\uff0c\u4f46\u7531\u4e8e\u540d\u5b57\u4e0d\u540c\uff0c\u4ecd\u7136\u662f\u4e24\u4e2a\u4e0d\u540c\u7684 type\uff0c\u4e0d\u540c type \u7684\u53d8\u91cf\u4e0d\u80fd\u8d4b\u503c\uff0c\u6240\u4ee5 <code>i:=j</code> \u62a5\u9519\u3002</p> <p></p> <p>\u800c\u4e0b\u56fe\u662f\u5408\u6cd5\u7684\uff0c\u4f7f\u7528 type aliases\uff0cb \u6307\u5411 a type\u3002 </p> <p></p> <p>\u4e0a\u9762\u7684\u4f8b\u5b50\u53ea\u8bb2\u4e86\u8d4b\u503c\u65f6\u7684\u7c7b\u578b\u68c0\u67e5\uff0c\u4e0b\u8ff0\u4e3a\u66f4\u5b8c\u6574\u7684 typing rules\uff1a</p> <ul> <li> <p>No implicit conversions</p> </li> <li> <p>All variables must be initialized at declaration</p> </li> <li> <p>Function call: the types of formal parameters must be equivalent to the types of actual arguments.</p> </li> <li> <p>Array subscript must has integer type</p> </li> <li> <p>The expression nil has the special type NIL \uff1f\uff1f\u4ec0\u4e48\u662frecord type</p> </li> <li> <p>NIL belongs to every record type</p> </li> <li> <p>It is equivalent to any record type</p> </li> <li> <p>Recursive types allowed through records and arrays\uff1f\uff1f</p> </li> </ul> <p></p> <ul> <li>Every cycle in a set of mutually recursive type declarations MUST pass through a record or array declaration\uff01 \uff1f\uff1f</li> </ul> <p></p> <p>Tiger \u6709\u4e24\u5957\u547d\u540d\u7a7a\u95f4\uff0c\u7531\u4e8eFunctions and variables \u5728\u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u5982\u679c\u51fd\u6570\u4e2d\u53d8\u91cf\u4e0e\u51fd\u6570\u540d\u76f8\u540c\uff0c\u51fd\u6570\u540d\u4f1a\u88ab\u8986\u76d6\uff0c\u5bfc\u81f4\u65e0\u6cd5\u9012\u5f52\u51fd\u6570\uff1a</p> <p></p>"},{"location":"Compiler/Semantic%20Analysis/#23-tiger","title":"2.3 Tiger \u7c7b\u578b\u68c0\u67e5","text":""},{"location":"Compiler/Semantic%20Analysis/#231-formalization","title":"2.3.1 Formalization","text":"<p>\u8fd9\u90e8\u5206\u65e0\u9700\u638c\u63e1.</p> <p>Typing Context\uff1a</p> <p></p> <p>Typing Rules\uff1a</p> <ul> <li> <p>Typing judgments: statements about the types of expressions (\u0393 \u22a2 e : \u03c4)</p> </li> <li> <p>Typing rule: Each typing rule takes the form of</p> </li> </ul> <p></p> <p></p> <p></p> <ul> <li>Type Derivations\uff1aA type derivation is a proof tree showing how a typing judgment is derived from the rules.</li> </ul> <p></p> <ul> <li>(T-Var) : \u5982\u679c\u53d8\u91cf\u58f0\u660e\u5728\u4e0a\u4e0b\u6587\u4e2d\u5b58\u5728\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u58f0\u660e\u7684\u7c7b\u578b\u3002\u56e0\u4e3a x:int \u5728\u4e0a\u4e0b\u6587 \u0393 \u4e2d\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u4e8b\u5b9e\u4f5c\u4e3a\u63a8\u5bfc\u7684\u8d77\u70b9</li> <li>\u63a5\u4e0b\u6765\u6211\u4eec\u5904\u7406\u6570\u5b57 2\u3002\u6839\u636e (T-Int) \u89c4\u5219\uff0c\u6574\u6570\u5e38\u91cf\u7684\u7c7b\u578b\u4e3a int</li> <li>\u6700\u540e\uff0c\u6211\u4eec\u5e94\u7528 (T-Plus) \u89c4\u5219\u3002</li> </ul> <p></p>"},{"location":"Compiler/Semantic%20Analysis/#232-type-checking","title":"2.3.2 Type Checking","text":"<p>Environments\uff08\u7c7b\u4f3c\u4e24\u5957\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u91cc\u4e5f\u6709\u4e24\u5957\u7c7b\u578b\u68c0\u67e5\u73af\u5883\uff09\uff1a</p> <ul> <li>Type environment\uff1aMaps type symbol to type that it stands for</li> <li>Value environment\uff1aMaps variable symbol to its type\uff1bMaps function symbol to parameter and result types</li> </ul> <p>\u7c7b\u578b\u7cfb\u7edf: \u7528\u63a8\u7406\u89c4\u5219\u6765\u786e\u5b9a\u6709\u54ea\u4e9b\u7c7b\u578b\u3001\u4e0d\u540c\u7b26\u53f7(\u5982\u53d8\u91cf\u3001\u51fd\u6570)\u7684\u7c7b\u578b\u662f\u4ec0\u4e48\u3002</p> <p>Main Idea\uff1aType checking is done compositionally</p> <ul> <li>Break down expressions into their subexpressions</li> <li>Type-check the subexpressions</li> <li>Ensure that the top-level compound expression can then be given a type itself</li> </ul> <p>\u4f8b\uff1a\u5148\u5411\u4e0b\u786e\u5b9asubexpression\u65e0\u8bef\uff0c\u518d\u5c06\u4fe1\u606f\u5411\u4e0a\u4f20\u9012\u6765\u786e\u5b9aexpression\u7684type\uff0c\u5c06\u5176\u52a0\u5165\u73af\u5883</p> <p></p> <p></p> <p></p>"},{"location":"Compiler/ch7-IR/","title":"Translating into Intermediate Representation","text":"<p>\u91cd\u70b9\u662f translation</p>"},{"location":"Compiler/ch7-IR/#1","title":"1. \u4e2d\u95f4\u8868\u793a\u6982\u8ff0","text":"<ul> <li>\u524d\u7aef\uff1a\u4ece\u6e90\u7801\u5230IR\u751f\u6210</li> <li>\u4e2d\u7aef\uff1a\u57fa\u4e8eIR\u7684\u5206\u6790\u4e0e\u53d8\u6362\uff08\u53ef\u80fd\u751f\u6210\u65b0IR\uff09</li> <li>\u540e\u7aef\uff1a(\u673a\u5668\u76f8\u5173\u4f18\u5316)\uff1b\u4eceIR \u5230\u76ee\u6807\u4ee3\u7801</li> </ul>"},{"location":"Compiler/ch7-IR/#11-ir","title":"1.1 \u4e3a\u4ec0\u4e48\u9700\u8981\u4e2d\u95f4\u8868\u793a(IR)","text":"<p>yps\uff1a\u8fd9\u4e2a\u539f\u56e0\u80af\u5b9a\u4f1a\u8003</p> <p></p> <p>\u76f4\u63a5\u7ffb\u8bd1\u6210\u673a\u5668\u7801\u7684\u5371\u5bb3\uff1a</p> <ul> <li>hinders modularity</li> <li>hinders portability</li> </ul>"},{"location":"Compiler/ch7-IR/#12-ir","title":"1.2 IR \u5206\u7c7b\uff08\u4e0d\u8981\u6c42\u638c\u63e1\uff09","text":"<p>\u6839\u636e\u62bd\u8c61\u5c42\u6b21( \u5b9e\u9645\u7f16\u8bd1\u5668\u53ef\u80fd\u91c7\u7528\u591a\u5c42IR )\uff1a</p> <p></p> <ul> <li>\u9ad8\u5c42\u4e2d\u95f4\u8868\u793a High-level IR: \u8d34\u8fd1\u8f93\u5165\u8bed\u8a00\uff0c\u65b9\u4fbf\u7531\u524d\u7aef\u751f\u6210</li> </ul> <p></p> <ul> <li> <p>\u4f4e\u5c42\u4e2d\u95f4\u8868\u793a Low-level IR: \u8d34\u8fd1\u76ee\u6807\u8bed\u8a00\uff0c\u65b9\u9762\u76ee\u6807\u4ee3\u7801\u751f\u6210</p> </li> <li> <p>\u4e2d\u5c42\u4e2d\u95f4\u8868\u793a Middle-Level IR</p> </li> </ul> <p>\u6839\u636e\u7ed3\u6784\u7279\u5f81\uff1a</p> <ul> <li> <p>\u7ed3\u6784\u5316\u8868\u793a Structural</p> </li> <li> <p>Graphically oriented (e.g., tree, DAG,...)</p> </li> <li>Heavily used in source-to-source translators</li> </ul> <p></p> <ul> <li>\u7ebf\u6027\u8868\u793a Linear\uff1a\u5b58\u50a8\u5e03\u5c40\u662f\u7ebf\u6027\u7684</li> </ul> <p></p> <ul> <li>\u6df7\u5408\u8868\u793a Hybrid\uff1aCombination of graphs and linear code</li> </ul> <p></p>"},{"location":"Compiler/ch7-IR/#13-three-address-code","title":"1.3 \u4e09\u5730\u5740\u7801(Three-Address Code)","text":"<p>\u4e00\u822c\u5f62\u5f0f\uff1a\\(x = y ~op ~z\\)</p> <ul> <li> <p>\u6bcf\u4e2a\u6307\u4ee4\u6700\u591a1\u4e2a\u7b97\u7b26\uff0c\u6700\u591a3\u4e2a\u64cd\u4f5c\u6570(\u4e09\u5730\u5740)</p> </li> <li> <p>\u4f8b\uff1a</p> </li> </ul> <p></p> <p></p> <p>\u5b9e\u73b0\uff1a</p> <ul> <li> <p>The entire sequence of three-address instructions is implemented as an array of linked list</p> </li> <li> <p>implement three-address code as quadruples\uff08\u56db\u5143\u7ec4\uff09</p> </li> <li> <p>one field for the operation</p> </li> <li> <p>three fields for the addresses</p> </li> <li> <p>\u5bf9\u4e8e fewer than three addresses \u7684\u6307\u4ee4\uff0c\u4e00\u4e2a\u6216\u591a\u4e2a\u5730\u5740\u5b57\u6bb5\u88ab\u8d4b\u4e88 null \u6216\u201cempty\u201d\u503c\u3002</p> </li> </ul> <p></p> <ul> <li>Other implementation: triples, indirect triples</li> </ul> <p>Static Single Assignment (SSA) \u4e0d\u8003</p> <ul> <li>\u7279\u6b8a\u7684\u4e09\u5730\u5740\u4ee3\u7801\uff0c\u5176\u6240\u6709\u53d8\u91cf\u5728\u4ee3\u7801\u4e2d\u53ea\u88ab\u8d4b\u503c\u4e00\u6b21</li> </ul> <p></p> <ul> <li> <p>\u65b9\u4fbf\u4e86\u7f16\u8bd1\u5668\u4e2d\u7684\u5f88\u591a\u5206\u6790\u548c\u4f18\u5316</p> </li> <li> <p>\u67e5\u8be2def-use \uff08\u5b9a\u4e49\u53d8\u91cf\u4f7f\u7528\u60c5\u51b5\uff09\u4fe1\u606f(\u67d0\u4e9b\u5206\u6790\u7684\u5b50\u8fc7\u7a0b)</p> </li> <li>\u52a0\u901f\u73b0\u6709\u7b97\u6cd5(\u57fa\u4e8eSSA\u7684\u7a00\u758f\u5206\u6790)</li> <li>\u4e25\u683c\u4f9d\u8d56SSA\u7684\u7b97\u6cd5(ssapre, new gvn,\u2026)</li> <li>\u201c\u514d\u8d39\u201d\u63d0\u5347\u7cbe\u5ea6\uff08\u5982\u6d41\u654f\u611f\u6307\u9488\u5206\u6790)</li> </ul>"},{"location":"Compiler/ch7-IR/#2-ir-tree","title":"2. IR Tree","text":"<p>\u864e\u4e66\u53ea\u7528\u4e00\u5c42 IR\uff0c\u5373 IR Tree\uff0c\u4ecb\u4e8e AST \u548c assembly \u4e4b\u95f4</p> <p></p> <ul> <li>\\(e\\) \u8868\u793a expressio</li> <li>\\(s\\) \u8868\u793a statement</li> <li>\\(o\\) \u8868\u793a operator</li> <li>\\(i\\) \u8868\u793a integer</li> <li>\\(f\\) \u8868\u793a function</li> <li>\\(t\\) \u8868\u793a temporary</li> </ul>"},{"location":"Compiler/ch7-IR/#the-expressions","title":"The Expressions","text":"<p>ESEQ(s, e)\uff1aThe statement s is evaluated for side effects, then e is evaluated for a result.</p> <ul> <li>\u5047\u8bbes\u662fstatement a=5, e\u662fexpression a+5</li> <li>Statement (\u5982a=5)\u4e0d\u8fd4\u56de\u503c,\u4f46\u662f\u6709\u526f\u4f5c\u7528</li> <li>\u8868\u8fbe\u5f0fESEQ(a=5, a + 5)\u6700\u7ec8\u7684\u7ed3\u679c\u662f10</li> </ul> <p>\u5173\u4e8e\u526f\u4f5c\u7528(Side effects)</p> <ul> <li>\u526f\u4f5c\u7528\u610f\u5473\u7740\u66f4\u65b0\u5b58\u50a8\u5355\u5143 memory cell \u6216\u4e34\u65f6\u5bc4\u5b58\u5668 temporary register \u7684\u5185\u5bb9</li> </ul>"},{"location":"Compiler/ch7-IR/#the-statements","title":"The Statements","text":""},{"location":"Compiler/ch7-IR/#3-ir-tree","title":"3. IR Tree \u7684\u751f\u6210","text":""},{"location":"Compiler/ch7-IR/#31-translation-of-expressions","title":"3.1 Translation of expressions","text":"<p>Mapping AST Expressions to IR Tree</p> <ul> <li>Ex: AST Expressions with return values (e.g., a + b)</li> <li>Nx: AST Expressions that return no value (e.g., print(x))</li> <li>Cx: AST Expressions with Boolean values (conditional jump)</li> </ul> <p></p> <p></p> <p></p> <p>\u95ee\u9898\uff1a\u8bed\u8a00\u7ed3\u6784\u901a\u5e38\u9700\u8981\u5728\u671f\u671b\u4e0d\u540c\u5f62\u5f0f\u7684\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\uff0c\u6240\u4ee5\u9700\u8981\u8f6c\u6362\u5f62\u5f0f\uff1a</p> <p></p>"},{"location":"Compiler/ch7-IR/#311-simple-variables","title":"3.1.1 Simple Variables","text":"<p>\u5bf9\u4e8e\u5728\u5f53\u524d\u8fc7\u7a0b\u7684\u5806\u6808\u5e27\u4e2d\u58f0\u660e\u7684\u53d8\u91cf v \uff0cframe point \u4e3a fp\uff0c\u83b7\u53d6\u5728frame\u4e2d\u504f\u79fb\u91cf\u4e3a k \u7684 v\uff1a $$ MEM(BINOP(PLUS,TEMP<sub>fp,CONST</sub>k)) $$</p> <ul> <li>\u5728 tiger \u4e2d\uff0c\u6240\u6709\u53d8\u91cfsize\u90fd\u76f8\u540c -- word size</li> </ul> <p></p> <p>\u6bd4\u8f83\u590d\u6742\u7684\u662f nest \u65f6\u8bbf\u95ee\u4e0a\u5c42\u7684 variable v through static links\uff1a</p> <p></p>"},{"location":"Compiler/ch7-IR/#312-array-variables","title":"3.1.2 Array Variables","text":"<p>Tiger \u6570\u7ec4\u8d4b\u503c\uff1a\u4e0d copy \u5185\u5bb9\uff0c\u800c\u662f\u6307\u9488</p> <p></p> <ul> <li>\u4e0d\u8fc7 Pascal \u8bed\u8a00\u662f copy\u5185\u5bb9</li> <li>C \u8bed\u8a00\u4e2d\u4e0a\u8ff0\u8d4b\u503c\u4e0d\u5408\u6cd5</li> </ul>"},{"location":"Compiler/ch7-IR/#313-structured-l-values","title":"3.1.3 Structured L-values","text":"<p>R-value:</p> <ul> <li>does not denote an assignable location</li> <li>\u53ef\u8ba1\u7b97\u4f46\u4e0d\u53ef\u88ab\u8d4b\u503c</li> </ul> <p>L-value\uff1a</p> <ul> <li>Denotes a location that can be assigned to</li> <li>\u53ef\u51fa\u73b0\u5728\u8d4b\u503c\u8bed\u53e5\u53f3\u4fa7\uff08\u8868\u793a location \u4e2d\u7684\u5185\u5bb9\uff09</li> </ul> <p>\u5de6\u503c\u53c8\u5206 scalar \u548c structured\uff1a</p> <ul> <li> <p>Scalar L-value: An integer or pointer value\uff08Tiger\u4e2d\u6240\u6709\u53d8\u91cf\u548c\u5de6\u503c\u90fd\u662f scalar \u7684\uff0c\u5176array\u548crecord\u90fd\u662fpointer\uff09</p> </li> <li> <p>Structured L-value: C or Pascal has structured L-values\uff08\u5c31\u662f\u7ed3\u6784\u4f53\uff09\uff1a</p> </li> </ul> <p></p> <p>\u4e24\u8005\u5728 memory \u4e2d\u7684\u8868\u793a\uff1a</p> <p></p> <p>\u6240\u4ee5\u53d6 Structured L-value \u65f6\u8fd8\u9700\u52a0\u4e0a object \u5728\u7ed3\u6784\u4f53\u5185\u7684\u504f\u79fb\u91cf S\uff1a</p> <p></p>"},{"location":"Compiler/ch7-IR/#314-subscripting-and-field-selection","title":"3.1.4 Subscripting and Field Selection","text":"<ul> <li>MEM(e) \u8868\u793a\u6570\u7ec4\u57fa\u5730\u5740 \u2018a\u2019</li> </ul>"},{"location":"Compiler/ch7-IR/#315-arithmetic","title":"3.1.5 Arithmetic","text":"<ul> <li>Straightforward</li> <li>\u65e0 unary operator</li> <li>\u65e0 \u6d6e\u70b9\u6570</li> </ul>"},{"location":"Compiler/ch7-IR/#316-conditionals","title":"3.1.6 Conditionals","text":"<p>\u5373Cx</p> <p></p> <p>\u5176\u4e2d And \u548c Or \u64cd\u4f5c\u9700\u8981\u5b9e\u73b0\u77ed\u8def\u6c42\u503c\uff1a</p> <p></p> <p></p>"},{"location":"Compiler/ch7-IR/#317-while-loops","title":"3.1.7 While Loops","text":""},{"location":"Compiler/ch7-IR/#for-loops","title":"For Loops","text":""},{"location":"Compiler/ch7-IR/#function-calls","title":"Function Calls","text":"<p>\\(call~f(a_1,...a_n)\\)\u200b \u7ffb\u8bd1\u5f88\u7b80\u5355\uff0c\u4f46\u662f static link \u9700\u8981\u4f5c\u4e3a implicit extra argument</p> <p></p>"},{"location":"Compiler/ch7-IR/#translation-of-declarations","title":"Translation of declarations","text":"<p>\u53d8\u91cf\u58f0\u660e\uff0c\u5728\u6808\u5e27\u4e2d\u7684\u504f\u79fb\u91cf\u4e00\u5b9a\u8981\u6e05\u695a\u3002</p> <p></p> <p>\u7c7b\u578b\u58f0\u660e\u65e0\u9700\u751f\u6210 IR code</p> <p>\u51fd\u6570\u58f0\u660e \uff0c\u4e2d\u95f4\u4ee3\u7801\u5305\u62ec\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>Prologue\uff1a</li> <li>\u58f0\u660e\u51fd\u6570\u5f00\u59cb\u7684\u6307\u4ee4</li> <li>\u51fd\u6570\u540d label \u5b9a\u4e49</li> <li>\u5206\u914d\u6808\u5e27\u7684\u6307\u4ee4</li> <li>store \u6307\u4ee4\u7528\u4e8e\u4fdd\u5b58 callee-save registers and return address</li> <li>store \u6307\u4ee4\u7528\u4e8e\u4fdd\u5b58 arguments and static links</li> <li>Body</li> <li>Epilogue</li> <li>move return result to a special register \u7684\u6307\u4ee4</li> <li>reset the stack pointer \u7684\u6307\u4ee4</li> <li>return \u6307\u4ee4</li> <li>\u58f0\u660e\u51fd\u6570\u7ed3\u675f\u7684\u6307\u4ee4</li> </ul>"},{"location":"Compiler/ch8/","title":"Basic Blocks and Traces","text":""},{"location":"Compiler/ch8/#canonical-form","title":"Canonical Form","text":"<p>\u52a8\u673a\u662f tree \u4e0e Machine Code \u4e4b\u95f4\u7684 mismatch\uff1a</p> <ul> <li>CJUMP\uff1a\u53ef\u8df3\u5230\u4e24\u4e2alabels\uff0c\u4f46\u662f\u5728\u673a\u5668\u7801\u4e2d\uff0c\u5982\u679c\u6761\u4ef6\u4e0d\u7b26\u5408\uff0c\u90a3\u4e48\u5c31\u4e0d\u8df3\u8f6c\uff0c\u6267\u884c\u4e0b\u4e00\u6761\u6307\u4ee4</li> </ul> <p></p> <ul> <li>ESEQ\uff1a\u6267\u884c\u987a\u5e8f\u4e0d\u540c\uff0c\u4f1a\u5bfc\u81f4\u5f97\u5230\u7ed3\u679c\u4e5f\u4e0d\u540c\uff08\u4e0b\u4f8b\u4e2d\uff0c\u7531\u4e8e e2 \u662f TEMP a\uff0c\u800c ESEQ \u4e2d\u7684 MOVE \u4f1a\u6539\u53d8 a \u7684\u503c\uff09</li> </ul> <p></p> <ul> <li>CALL\uff1a\u5d4c\u5957 CALL \u60c5\u51b5\u4e2d\uff0c\u4f1a\u5bfc\u81f4\u5bc4\u5b58\u5668\u4f7f\u7528\u51b2\u7a81\u548c\u8bed\u53e5\u526f\u4f5c\u7528\u7b49\u95ee\u9898</li> </ul> <p></p> <p></p> <p>\u6b63\u5219\u5f62\u5f0f\u7684\u7279\u70b9\uff1a</p> <ul> <li>All statements brought up to top level of tree</li> </ul> <p></p> <ul> <li>A function is just a sequence of all statements</li> </ul> <p>s1, s2,s3,s4,s5...</p> <p>\u6b63\u5219\u5f62\u5f0f\u53ef\u66f4\u76f4\u63a5\u8f6c\u5316\u4e3a\u6c47\u7f16\u7801.</p>"},{"location":"Compiler/ch8/#step-1-canonical-treeslinearization","title":"Step 1: Canonical Trees(Linearization)","text":""},{"location":"Compiler/ch8/#eliminate-eseq","title":"Eliminate ESEQ","text":"<p>basic rule\uff1aLift ESEQ nodes higher and higher in the tree, until they can become SEQ nodes\u3002</p> <p></p> <p>Commutativity (\u91cd\u70b9)\uff1a\u53ea\u6709 s \u548c e \u4e92\u4e0d\u5f71\u54cd\u624d\u80fd commute\uff0c\u5426\u5219\u9700\u8981\u7528\u5230 temporary</p> <p>\u6d88\u9664 \\(BINOP(op, e1, ESEQ(s, e2))\\) \u4e2d\u7684 ESEQ\uff0c\u7531\u4e8e e1 \u5fc5\u987b\u6bd4 s \u5148\u6267\u884c\uff0cs \u53c8\u8981\u6bd4 e2 \u5148\u6267\u884c\uff0c\u6240\u4ee5\u4e0d\u80fd\u7b80\u5355\u53d8\u6362\u4f4d\u7f6e\uff08s \u53ef\u80fd\u6709 side effect \u4f7f\u5f97 e1 \u503c\u53d8\u5316\uff09</p> <p></p> <p>\u5373\uff1a</p> <p></p> <p>\u5224\u65ad s \u548c e \u662f\u5426\u53ef\u4ea4\u6362(commutativity)\uff1a</p> <ul> <li>\u8be5\u95ee\u9898\u662f\u4e0d\u53ef\u5224\u5b9a\u95ee\u9898</li> <li>\u6240\u4ee5\u53ef\u505a\u8fd1\u4f3c\u6765\u6c42\u89e3</li> <li>commute(s, e) = True if they definitely do commute</li> <li>commute(s, e) = False otherwise</li> <li>\u5224\u65ad\u53ef\u4ea4\u6362\u7684 naive \u7b56\u7565\uff1a</li> <li>A constant commutes with any statement</li> <li>An empty statement commutes with any expression</li> <li>\u5176\u5b83\u90fd\u5047\u8bbe\u4e3a\u4e0d\u53ef\u4ea4\u6362</li> <li>\u4e00\u5b9a\u65e0\u6cd5\u4ea4\u6362\u7684\u4e24\u79cd\u60c5\u51b5</li> <li>s \u4f1a\u6539\u53d8 a \u4e2d\u4e34\u65f6\u53d8\u91cf\u7684\u503c</li> <li>s \u4f1a\u6539\u53d8 a \u4e2d\u5185\u5b58\u5730\u5740</li> </ul>"},{"location":"Compiler/ch8/#move-calls-to-top-level","title":"move CALLs to top level","text":"<p>CALL \u7684\u95ee\u9898\uff1a\u59821\u4e2d\u8bf4\u5230\uff0cnest \u65f6\u4f1a\u5bfc\u81f4\u5bc4\u5b58\u5668\u51b2\u7a81\u548c\u8bed\u53e5\u526f\u4f5c\u7528\u95ee\u9898</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1aFunction Result Preservation. \u5373\u65f6\u5c06 \u6bcf\u4e2a return value \u653e\u5230 fresh temporary register\uff1a</p> <p></p> <p>Special Cases\uff1a</p> <ul> <li>\u5f53 CALL \u662f EXP \u7684 direct chidren \u65f6\uff0cCALL \u5df2\u7ecf\u5728 top level\uff0c\u53ef\u4ee5\u4e0d\u53d8</li> <li>\u5f53 CALL \u7684\u8fd4\u56de\u503c\u76f4\u63a5\u88ab\u8d4b\u7ed9\u4e00\u4e2a temp\uff0c\u5c31\u5df2\u7ecf\u7b26\u5408\u6b63\u5219\u5f62\u5f0f\u4e86\uff0c\u65e0\u9700\u518d\u6539</li> </ul>"},{"location":"Compiler/ch8/#eliminate-seqs","title":"eliminate SEQs","text":"<p>\u5728\u5b8c\u6210\u4e0a\u8ff0\u89c4\u5219\u540e\uff0c\u5f97\u5230\uff1a</p> <p></p> <p>\u76f4\u63a5\u63d0\u53d6 s1, s2,s3,s4,s5... \u4fbf\u53ef\uff08\u6ce8\u610f s \u4e0d\u53ef\u5305\u542b SEQ/ESEQ nodes\uff09</p> <p></p>"},{"location":"Compiler/ch8/#step-23-taming-conditional-branches","title":"Step 2&amp;3: Taming Conditional Branches","text":"<p>CJUMP \u7684\u95ee\u9898\uff1a\u5927\u591a\u6570 machine \u90fd\u6ca1\u6709 two-way branch counterpart</p> <p></p> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> <ul> <li>Form a list of canonical trees into basic blocks</li> <li>Order the basic blocks into traces</li> </ul>"},{"location":"Compiler/ch8/#basic-blocks","title":"Basic Blocks","text":"<p>Group statements into sequences with no internal jumps/labels .</p> <p>\u660e\u786e Basic Block \u6982\u5ff5\uff1a\u662f a sequence of statements that</p> <ul> <li>Is always entered at the beginning</li> <li>Is always exited at the end</li> <li>Has not internal jumps or labels</li> </ul> <p>Control flow graph (CFG)\uff1a\u5176\u7ed3\u70b9\u4e3a basic blocks\uff0c\u8fb9\u4e3a blocks \u4e4b\u95f4\u7684 jump \u5173\u7cfb\uff1a</p> <p></p> <p>\u5982\u4f55\u6784\u5efa basic block \u5462\uff1f</p> <ol> <li>Scan the statement list from beginning to end</li> <li>When a LABEL is found, start a new block</li> <li>When a JUMP or CJUMP is found, end the current block</li> <li>If a block doesn't end with JUMP or CJUMP, add a JUMP to the next block</li> <li>If a block doesn't start with a LABEL, add one</li> </ol> <p></p> <p></p>"},{"location":"Compiler/ch8/#traces","title":"Traces","text":"<p>Order basic blocks so every CJUMP is followed by its false label \u4ee5\u6b64\u89e3\u51b3\u524d\u9762\u63d0\u5230\u7684\u95ee\u9898\u3002</p> <p>Trace \u610f\u4e3a : A sequence of statements that could be consecutively executed during program execution.</p>"},{"location":"Compiler/ch8/#basic-block-reordering","title":"Basic Block Reordering","text":"<p>\u4e3a\u4e86\u66f4\u597d\u7684 instruction caching \u6765\u8fdb\u884c\u57fa\u672c\u5757\u91cd\u6392\uff1a</p> <p></p> <p>\u7531\u4e8e \u4ece A \u8df3\u8f6c\u5230 B \u7684\u6982\u7387\u66f4\u9ad8\uff0c\u6240\u4ee5 layout 1 \u66f4\u5229\u4e8e\u6307\u4ee4 hit\u3002</p>"},{"location":"Compiler/ch8/#trace-generation","title":"Trace Generation","text":"<p>\u76ee\u7684\uff1agenerating a covering set of traces</p> <ul> <li>Each trace is loop free</li> <li>Each block must be in exactly one trace</li> </ul> <p>\u8d2a\u5fc3\u7b97\u6cd5\uff1a</p> <p></p> <p>\u9996\u5148\u662f\u5bf9CFG\u7684\u6df1\u5ea6\u904d\u5386\uff1a</p> <ul> <li>\u4ece\u67d0\u4e2abasic block\u5f00\u59cb\uff0c\u5f80\u540e\u7ee7\u8282\u70b9\u904d\u5386\uff0c\u6807\u8bb0\u6bcf\u4e2a\u88ab\u8bbf\u95ee\u7684basic block\u5e76\u5c06\u5176\u9644\u52a0\u5230\u5f53\u524dtrace\u4e2d</li> <li>\u5f53\u5230\u8fbe\u67d0\u4e2abasic block, \u5176\u540e\u7ee7\u8282\u70b9\u5747\u5df2\u6807\u8bb0, \u8fd9\u4e2atrace\u5c31\u7b97\u5b8c\u4e86</li> <li>\u9009\u62e9\u4e00\u4e2a\u672a\u6807\u8bb0\u7684basic block\u4f5c\u4e3a\u4e0b\u4e00\u4e2atrace\u7684\u8d77\u70b9</li> </ul> <p>\u4e0d\u65ad\u8fed\u4ee3\uff0c\u76f4\u5230\u6240\u6709 basic block \u90fd\u88ab\u6807\u8bb0\u3002</p> <p>\u5982\u4e0b\uff1a\\(a\\rightarrow b\\rightarrow c\\rightarrow e\\) \uff0c\u7531 e \u8df3\u8f6c\u56de b\uff0c\u53d1\u73b0 b \u5df2\u88ab\u6807\u8bb0\uff0c\u6545\u7ed3\u675f trace</p> <p>\u2026\u2026</p> <p></p> <p>\u5728\u6839\u636e\u4e0a\u9762\u7684\u7b97\u6cd5\u6784\u5efa\u597d trace \u540e\uff0c\u8bb8\u591a CJUMP \u540e\u9762\u90fd\u4f1a\u8ddf\u7740\u5176 false label \u4e86\uff0c\u4f46\u662f\u8fd8\u9700\u8981\u4fdd\u8bc1\u6240\u6709 CJUMP \u90fd\u6ee1\u8db3\u8be5\u6761\u4ef6\uff1a</p> <ul> <li> <p>CJUMP immediately followed by its false label\uff1a\u4e0d\u7ba1</p> </li> <li> <p>CJUMP followed by its true label \uff1a\u4ea4\u6362 true label \u548c false label \uff0c\u5e76 negate condition</p> </li> </ul> <p></p> <ul> <li>CJUMP(cond, a, b, lt, lf) followed by neither label</li> </ul> <p></p> <p>\u5bf9 Optimal Traces \u7684\u8ba8\u8bba\uff1a</p> <ul> <li>Hot Path Prioritization\uff1a\u5c06\u9891\u7e41\u88ab\u6267\u884c\u7684 blocks \u653e\u5728\u540c\u4e00 trace</li> <li>Locality Enhancement\uff1aKeep related code together in memory</li> <li>Jump Minimization\uff1a\u51cf\u5c11\u65e0\u6761\u4ef6\u8df3\u8f6c\u7684\u6b21\u6570</li> </ul> <p></p> <p>c \u662f\u6700\u597d\u7684\u3002</p>"},{"location":"Compiler/ch9/","title":"Instruction Selection","text":"<p>\u6307\u4ee4\u9009\u62e9\u7528\u4e8e\u5c06 Canonical IR code \u8f6c\u5316\u6210 abstract assembly code</p> <p></p>"},{"location":"Compiler/ch9/#overview-of-instruction-selection","title":"Overview of  Instruction Selection","text":"<p>\u4ec0\u4e48\u662f Abstract assembly</p> <ul> <li>assembly with infinite registers  \u65e0\u9650\u4e2a\u5bc4\u5b58\u5668</li> <li>Invent new temporaries for intermediate results  \u7528\u4e34\u65f6\u53d8\u91cf\u5b58\u50a8\u4e2d\u95f4\u503c</li> <li>Map to actual registers later</li> </ul> <p>\u9700\u8981\u89e3\u51b3\u7684\u5173\u952e\u95ee\u9898\uff1a</p> <ul> <li>How do we represent the capabilities of machine instructions?</li> <li>How do we cover an IR tree with available instructions?</li> <li>How do we find the best (least cost) covering?</li> </ul> <p>\u6307\u4ee4\u9009\u62e9\u7684\u672c\u8d28\uff1a\u201cpattern matching\u201d</p>"},{"location":"Compiler/ch9/#tree-covering","title":"Tree Covering","text":"<p>Jouette Instruction Set</p> <ul> <li>RISC-style, load/store architecture</li> <li>Data or address can reside in registers and Each instruction can access any register</li> <li>r_0 \u5bc4\u5b58\u5668\u603b\u662f\u5b580</li> <li>\u9664 MOVEM \u5916\uff0c\u6240\u6709\u6307\u4ee4\u90fd\u6709 1cycle \u7684\u5ef6\u8fdf</li> <li>\u6bcf\u4e2a cycle \u53ea\u6267\u884c\u4e00\u6761\u6307\u4ee4</li> </ul> <p></p> <p>Tree pattern</p> <ul> <li>\u53ef\u5339\u914d\u4e00\u90e8\u5206 IR Tree \u7684\u4e00\u4e2a\u6a21\u677f\uff0c\u6bcf\u4e2a pattern \u5bf9\u5e94\u4e00\u6761\u673a\u5668\u6307\u4ee4</li> <li>\u4e00\u4e2a Tree pattern \u4e5f\u88ab\u79f0\u4e3a \u201ca tile \u201d</li> </ul> <p>\u5c06IR\u4e0e\u540e\u7aef\u7684\u673a\u5668\u6307\u4ee4\u90fd\u8f6c\u6362\u4e3a\u6811\u7ed3\u6784\u3002\u8fd9\u6837\u5c31\u628a\u6307\u4ee4\u9009\u62e9\u95ee\u9898\u8f6c\u6362\u4e3a\u673a\u5668\u6307\u4ee4\u6811\u8986\u76d6\u5168IR Tree\u7684\u95ee\u9898\u3002</p> <p></p> <ul> <li>\u6709\u4e9b\u6307\u4ee4\u5bf9\u5e94\u4e0d\u6b62\u4e00\u4e2a tree pattern</li> <li>\u5e38\u91cf\uff08CONST\uff09\u8282\u70b9\u548c\u4e34\u65f6\uff08TEMP\uff09\u8282\u70b9\u7684\u5b9e\u9645\u503c\u5e76\u4e0d\u603b\u662f\u4f1a\u663e\u793a\u51fa\u6765</li> </ul> <p>Tiling : \u7528\u4e00\u7ec4\u4e92\u4e0d\u91cd\u53e0\u7684\u6811\u6a21\u5f0f\u6765 cover IR Tree</p> <p>\\(a[i] := x\\)\uff0c\u5047\u8bbe i \u5728\u5bc4\u5b58\u5668\u4e2d\uff0ca \u548c x \u5728\u6808\u5e27\u4e2d\u3002\u5373 \\(M[a + i * 4] := x\\)\uff0c\u6bcf\u4e2a\u5143\u7d20\u5360\u75284\u4e2a\u5b58\u50a8\u5355\u5143:</p> <p></p> <p>Tile 1, 3, and 7 \u5e76\u4e0d\u5bf9\u5e94\u4efb\u4f55\u673a\u5668\u6307\u4ee4\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ea\u662f\uff08\u865a\u62df\uff09\u5bc4\u5b58\u5668\uff08\u4e34\u65f6\u53d8\u91cf\uff09\uff0c\u4f46\u662f\u8fd9\u4e9b tile \u53ef\u4ee5\u5e2e\u52a9\u8986\u76d6 tree.</p> <p>\u4e2d\u95f4\u8868\u793a\uff08IR\uff09\u6811\u5728\u6bcf\u4e2a\u6811\u8282\u70b9\u4e2d\u4ec5\u8868\u793a\u4e00\u79cd\u64cd\u4f5c\uff08\u4f8b\u5982\uff0c\u83b7\u53d6\u3001\u52a0\u6cd5\uff09\uff0c\u4f46\u4e00\u6761\u5b9e\u9645\u7684\u673a\u5668\u6307\u4ee4\u53ef\u4ee5\u6267\u884c\u51e0\u79cd\u57fa\u672c\u64cd\u4f5c\u3002\u5982\uff1amemory load</p> <p></p> <p>\u53e6\u4e00\u79cd\u7b56\u7565\uff1a\u603b\u662f\u53ef\u4ee5\u7528\u5fae\u5c0f\u7684 tile \u6765\u8986\u76d6\u8fd9\u68f5\u6811\uff0c\u6bcf\u4e2a tile \u4ec5\u8986\u76d6\u4e00\u4e2a\u8282\u70b9\u3002</p> <p></p>"},{"location":"Compiler/ch9/#optimal-and-optimum-tilings","title":"Optimal and Optimum Tilings","text":"<p>Criteria: </p> <p></p> <ul> <li>good selection of tiles</li> <li>tile \u8d8a\u5c0f\u5c31\u8d8a\u597d\u8986\u76d6\u6811</li> <li>tile \u8d8a\u5927\u6240\u9700\u6307\u4ee4\u5c31\u8d8a\u5c11</li> </ul> <p>Optimum tiling \u662f\u5168\u5c40\u6700\u597d\uff0cOptimal tiling \u662f\u5c40\u90e8\u6700\u597d\u3002\u5047\u8bbe\u9664 MOVEM \u9700\u8981 m \u4e2a units\uff0c\u5176\u5b83\u6307\u4ee4\u90fd\u53ea\u8981 1 \u4e2a unit\uff1a\u5de6\u8fb9\u662f\u5168\u5c40\u6700\u4f18\uff0c\u53f3\u8fb9\u662f\u5c40\u90e8\u6700\u4f18</p> <p></p> <p>\u5b9e\u9645\u4e0a\uff0c\u6307\u4ee4\u5e76\u975e\u662f\u72ec\u7acb\u5b58\u5728\u4e14\u5177\u6709\u53ef\u5355\u72ec\u5f52\u5c5e\u7684\u6210\u672c\u7684\uff0c\u5982\u76f8\u90bb\u6307\u4ee4\u53ef\u76f8\u4e92\u4f5c\u7528\u3002\u800c\u201cOptimum tiling\u201d \u662f\u4e00\u79cd\u7406\u60f3\u5316\u6a21\u578b\uff0c\u771f\u5b9e\u7684 cost \u5f71\u54cd\u56e0\u7d20\u6709Pipeline interactions\u3001Register allocation effects\u3001 Cache behavior\u3001 Instruction scheduling opportunities\u2026\u2026</p>"},{"location":"Compiler/ch9/#algorithms-for-instruction-selection","title":"Algorithms for Instruction Selection","text":""},{"location":"Compiler/ch9/#maximal-munch","title":"Maximal Munch","text":"<ul> <li>Basic assumption: larger tiles = better</li> <li>\u201clarge\u201d \u610f\u5473\u8986\u76d6\u7ed3\u70b9\u591a</li> <li>Main idea: Start from top of tree\uff0c\u4f7f\u7528\u4e0e\u6811\u5339\u914d\u7684\u6700\u5927 tile \uff08\u5982\u679c\u6709\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u76f8\u7b49 size \u7684 tile\uff0c\u968f\u673a\u9009\u6216\u57fa\u4e8e cost \u9009\uff09\u3002\u9012\u5f52\u5730\u5e73\u94fa\u5269\u4f59\u7684\u5b50\u6811\uff08\u540c\u4e00\u9ad8\u5ea6\uff0c\u5148\u5de6\u6811\u518d\u53f3\u6811\uff0c\u9ad8\u5ea6\u4f18\u5148\uff09</li> </ul> <ul> <li>\u8fdb\u884c\u540e\u5e8f\u904d\u5386\u6811\uff1b\u6309\u7167\u4e0e\u8282\u70b9\u76f8\u5173\u7684\u987a\u5e8f\u5904\u7406\u5b50\u8282\u70b9</li> <li>\u6309\u987a\u5e8f\u53d1\u51fa\u4e0e\u5404\u4e2a tile \u76f8\u5bf9\u5e94\u7684\u4ee3\u7801\u5e8f\u5217</li> <li>\u901a\u8fc7\u4f7f\u7528\u76f8\u540c\u7684\u5bc4\u5b58\u5668\u540d\u79f0\u5c06\u8fb9\u754c\u8fde\u63a5\u5728\u4e00\u8d77</li> </ul> <p>\u5f97\u5230\u6307\u4ee4\u7801\uff08\u540e\u5e8f\u904d\u5386\uff1a\u5148\u5de6\u53f3\u518d\u6839\uff0ctree\u7ed3\u6784\u6309\u7167\u8986\u76d6\u4ee5\u540e\u7684\u6765\uff0c\u6bcf\u4e2a\u8986\u76d6\u770b\u4f5c\u4e00\u4e2anode\uff09\uff1a</p> <p></p> <p>Maximal Munch \u662f greedy \u7684 -- always picks the largest possible pattern at each point</p>"},{"location":"Compiler/ch9/#dynamic-programming","title":"Dynamic Programming","text":"<ul> <li> <p>Goal: find minimum total cost tiling of tree</p> </li> <li> <p>IR tree \u7684\u6bcf\u4e2a node \u90fd\u6709 cost \uff1a\u5bf9\u4e8e\u6bcf\u4e2a cost \u4e3a \\(c_t\\) \u7684 tile t\uff0ctile t \u5339\u914d\u7ed3\u70b9 n\uff0c\u7ed3\u70b9 n \u5339\u914d t \u7684 cost \u4e3a\uff1a</p> </li> </ul> <p>$$   c_t+\\sum_{all<sub>leaves</sub>i<sub>of</sub>t}{c_i}   $$</p> <ul> <li>Goal: find cost of best instruction sequence that can tile subtree rooted at node</li> </ul> <p>\u7b97\u6cd5\uff1abottom-up \u6267\u884c</p> <ul> <li>\u9012\u5f52\u5730\u8ba1\u7b97\u6bcf\u4e2a\u5b50\u6811\u7684 optimal tiling \u7684 cost</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a node\uff0c\u8003\u8651\u6240\u6709\u53ef\u80fd\u5339\u914d\u7684 tile</li> <li>\u6210\u672c\u8ba1\u7b97\uff0c\u9009\u62e9\u6700\u5c0f cost</li> </ul> <p>\u5bf9\u6bcf\u4e2a node\uff0c\u8ba1\u7b97 (a,b) pair:</p> <ul> <li>a is the minimum cost of a node</li> <li>b is the optimal instruction</li> </ul> <p>\u4f8b\uff1aMEM(PLUS(CONST(1), CONST(2)))</p> <p></p> <p></p> <p></p> <p>\u4ee3\u7801\u751f\u6210\uff1a\u4e00\u65e6 root node \u7684 cost \u88ab\u8ba1\u7b97\u51fa\u6765\uff0c\u4ee3\u7801\u751f\u6210\u542f\u52a8</p> <p></p> <p>\u4ece root \u5f00\u59cb\uff0c\u5176\u6709\u4e00\u4e2a leaf CONST 1\uff0c\u6545 Call Emission(CONST 1) \uff0c\u800c CONST 1 \u6ca1\u6709 leaf\uff0c\u6240\u4ee5\u91ca\u653e\u5176\u6307\u4ee4\uff0c\u8fd4\u56de\u51fd\u6570\u5230 Emission(MEM)\uff0c\u7531\u4e8e\u5176 leaf \u7ed3\u70b9\u5df2\u88ab\u5904\u7406\uff0c \u6240\u4ee5\u91ca\u653e\u5176\u6307\u4ee4\u3002</p> <p>Tiling Algorithm \u7684 efficiency \u8ba1\u7b97\uff1a</p> <p></p>"},{"location":"Compiler/ch9/#tree-grammar","title":"Tree Grammar","text":"<p>\u5bf9\u4e8e\u5177\u6709\u590d\u6742\u6307\u4ee4\u96c6\u4ee5\u53ca\u591a\u79cd\u7c7b\u578b\u5bc4\u5b58\u5668\u548c\u5bfb\u5740\u6a21\u5f0f\u7684\u673a\u5668\u6765\u8bf4\uff0c\u5f88\u96be\u4f7f\u7528\u7b80\u5355\u7684 tree pattern \u548c tiling \u7b97\u6cd5\u3002</p> <p>Goal \uff1a\u201cinstruction selector generators!\u201d</p> <ul> <li>Define tiles in a separate specification</li> <li>Use a generic tree pattern matching algorithm to compute tiling Motivation</li> </ul> <p>Solution \uff1a</p> <ul> <li>Use a tree grammar (a special context-free grammar) to describe the tiles</li> <li>Reduce instruction selection to a parsing problem</li> <li>Use a generalization of the dynamic programming algorithm for the \u201cparsing\u201d Instruction Selection via Tree Grammars</li> </ul> <p>\u2026\u2026\u5f85\u7eed</p>"},{"location":"DeepLearning/Attention%20Mechanisms/","title":"Attention Mechanisms","text":"<p>\u5728\u5fc3\u7406\u5b66\u4e0a\uff0c\u52a8\u7269\u9700\u8981\u5728\u590d\u6742\u73af\u5883\u4e0b\u6709\u6548\u5173\u6ce8\u503c\u5f97\u6ce8\u610f\u7684\u70b9\u3002</p> <ul> <li>\u4eba\u7c7b\u6839\u636e \u975e\u81ea\u4e3b\u6027\u63d0\u793a \u548c \u81ea\u4e3b\u6027\u63d0\u793a \u9009\u62e9\u6ce8\u610f\u70b9</li> <li>\u975e\u81ea\u4e3b\u6027\u63d0\u793a \u662f\u57fa\u4e8e\u73af\u5883\u4e2d\u7269\u4f53\u7684\u7a81\u51fa\u6027\u548c\u6613\u89c1\u6027\uff0c\u5f15\u8d77\u4eba\u7684\u6ce8\u610f</li> <li>\u81ea\u4e3b\u6027\u63d0\u793a \u5219\u662f\u53d7\u4e3b\u89c2\u610f\u613f\u63a8\u52a8\u53bb\u6ce8\u610f</li> </ul> <p>\u5377\u79ef\u3001\u5168\u8fde\u63a5\u3001\u6c60\u5316\u5c42\u90fd\u53ea\u8003\u8651\u201c\u975e\u81ea\u4e3b\u6027\u63d0\u793a\u201d\uff0c\u54ea\u4e2a\u663e\u773c\u5c31\u6ce8\u610f\u54ea\u4e2a\u3002</p> <p>\u800c\u6ce8\u610f\u529b\u673a\u5236\u5219\u8003\u8651 \u201c\u81ea\u4e3b\u6027\u63d0\u793a\u201d\uff1a</p> <ul> <li>\u8be5\u63d0\u793a\u88ab\u79f0\u4e3a \u67e5\u8be2query </li> <li>\u6bcf\u4e2a\u8f93\u5165\u662f\u4e00\u4e2a \u503cvalue \u548c\u975e\u81ea\u4e3b\u6027\u63d0\u793a key \u7684\u5bf9\uff0c\u5373key-value pair</li> <li>\u901a\u8fc7\u6ce8\u610f\u529b\u6c60\u5316\u5c42\u6765\u6709\u504f\u5411\u6027\u7684\u9009\u62e9\u67d0\u4e9b\u8f93\u5165</li> </ul> <p></p>"},{"location":"DeepLearning/Attention%20Mechanisms/#1","title":"1. \u6ce8\u610f\u529b\u6c47\u805a","text":"<p>Average pooling \u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u6ca1\u6709\u5c06key\u548cvalue\u8054\u7cfb\u8d77\u6765\u3002</p>"},{"location":"DeepLearning/Attention%20Mechanisms/#31-nonparametric-attention-pooling","title":"3.1 Nonparametric attention pooling","text":"<p>\u7528Nadaraya-Watson\u6838\u56de\u5f52\u5b9e\u73b0\u975e\u53c2\u6570\u7684\u6ce8\u610f\u529b\u6c47\u805a\uff1a</p> <p></p> <ul> <li>\u7ed9\u5b9a\u6570\u636e \\((x_i,y_i)\\) \uff0c\u6839\u636e\u8f93\u5165\u7684\u4f4d\u7f6e\u5bf9\u8f93\u51fa \\(y_i\\) \u8fdb\u884c\u52a0\u6743\u3002 \\(K\\) \u662f\u4e00\u4e2a\u8861\u91cf\u8ddd\u79bb\u7684\u6838\u51fd\u6570\u3002</li> </ul> <p>\u53d7\u6b64\u542f\u53d1\uff0c\u5f97\u5230\u901a\u7528 attention pooling \u516c\u5f0f\uff1a $$ f(x) = \\sum_{i=1}^{n}\\alpha(x,x_i)y_i $$</p> <ul> <li>attention pooling \u662f \\(y_i\\) \u7684\u52a0\u6743\u5e73\u5747</li> <li>\u5c06\u67e5\u8be2 \\(x\\) \u4e0e\u952e \\(x_i\\) \u4e4b\u95f4\u7684\u5173\u7cfb\u5efa\u6a21\u4e3a attention weight \\(\\alpha(x,x_i)\\) \uff0c\u8fd9\u4e2a\u6743\u91cd\u5c06\u88ab\u5206\u914d\u7ed9\u6bcf\u4e00\u4e2a\u5bf9\u5e94\u503c \\(y_i\\)</li> <li>\u5bf9\u4e8e\u4efb\u4f55\u67e5\u8be2\uff0c\u6a21\u578b\u5728\u6240\u6709\u952e\u503c\u5bf9\u6ce8\u610f\u529b\u6743\u91cd\u90fd\u662f\u4e00\u4e2a\u6709\u6548\u7684\u6982\u7387\u5206\u5e03\uff1a \u5b83\u4eec\u662f\u975e\u8d1f\u7684\uff0c\u5e76\u4e14\u603b\u548c\u4e3a1</li> </ul> <p>\u5982\u679c\u4f7f\u7528\u9ad8\u65af\u6838\uff1a</p> <p></p> <p>\u4e00\u4e2a\u952e \\(x_i\\) \u8d8a\u662f\u63a5\u8fd1\u7ed9\u5b9a\u7684\u67e5\u8be2 \\(x\\) \uff0c \u90a3\u4e48\u5206\u914d\u7ed9\u8fd9\u4e2a\u952e\u5bf9\u5e94\u503c \\(y_i\\) \u7684\u6ce8\u610f\u529b\u6743\u91cd\u5c31\u4f1a\u8d8a\u5927\uff0c \u4e5f\u5c31\u201c\u83b7\u5f97\u4e86\u66f4\u591a\u7684\u6ce8\u610f\u529b\u201d\u3002</p>"},{"location":"DeepLearning/Attention%20Mechanisms/#12-parametric-attention-pooling","title":"1.2 Parametric attention pooling","text":"<p>\u5c06\u53ef\u5b66\u4e60\u7684\u53c2\u6570\u96c6\u6210\u5230\u6ce8\u610f\u529b\u6c47\u805a\u4e2d\uff0c\u5728\u67e5\u8be2 \\(x\\) \u548c\u952e \\(x_i\\) \u4e4b\u95f4\u7684\u8ddd\u79bb\u4e58\u4ee5\u53ef\u5b66\u4e60\u53c2\u6570 \\(w\\) \uff0c\u518d\u901a\u8fc7\u8bad\u7ec3\u6a21\u578b\u6765\u5b66\u4e60\u53c2\u6570\u3002</p> <p>\u4e0e\u975e\u53c2\u6570\u7684\u6ce8\u610f\u529b\u6c47\u805a\u6a21\u578b\u76f8\u6bd4\uff0c \u5e26\u53c2\u6570\u7684\u6a21\u578b\u52a0\u5165\u53ef\u5b66\u4e60\u7684\u53c2\u6570\u540e\uff0c \u66f2\u7ebf\u5728\u6ce8\u610f\u529b\u6743\u91cd\u8f83\u5927\u7684\u533a\u57df\u53d8\u5f97\u66f4\u4e0d\u5e73\u6ed1\u3002</p>"},{"location":"DeepLearning/Attention%20Mechanisms/#2","title":"2. \u6ce8\u610f\u529b\u5206\u6570","text":"<p>\u901a\u8fc7 Attention scoring function \u5b9e\u73b0\u5bf9\u67e5\u8be2\u548c\u952e\u4e4b\u95f4\u7684\u5173\u7cfb\u5efa\u6a21(\u8bc4\u4f30query\u548ckey\u7684\u76f8\u4f3c\u5ea6)\uff0c\u5c06\u5176\u7ed3\u679c\u8f93\u5165\u5230 softmax \u4e2d\u5f97\u5230\u6ce8\u610f\u529b\u6743\u91cd. \u6700\u540e\uff0c\u6ce8\u610f\u529b\u6c47\u805a\u7684\u8f93\u51fa\u5c31\u662f\u57fa\u4e8e\u8fd9\u4e9b\u6ce8\u610f\u529b\u6743\u91cd\u7684\u503c\u7684\u52a0\u6743\u548c\u3002</p> <p></p> <p>\\(\\alpha(q,k_i)\\) :  \u5c06 \\(q\\) \u548c \\(k_i\\) \u4e24\u4e2a\u5411\u91cf\u8f93\u5165\u6ce8\u610f\u529b\u8bc4\u5206\u51fd\u6570 \\(a\\) , \u5c06\u5176\u6620\u5c04\u6210\u6807\u91cf, \u518d\u7ecfsoftmax\u8fd0\u7b97\u5f97\u5230\u6ce8\u610f\u529b\u6743\u91cd.</p>"},{"location":"DeepLearning/Attention%20Mechanisms/#21-additive-attention","title":"2.1 Additive Attention","text":"<p>\u5f53\u67e5\u8be2\u548c\u952e\u662f \u4e0d\u540c\u957f\u5ea6\u7684\u77e2\u91cf \u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u52a0\u6027\u6ce8\u610f\u529b\u4f5c\u4e3a\u8bc4\u5206\u51fd\u6570\u3002 \u7ed9\u5b9aquery \\(\\bf{q}\\in \\mathbb{R}^q\\), key \\(\\bf{k} \\in \\mathbb{R}^k\\) :</p> <p></p> <p>\u7b49\u4ef7\u4e8e\u5c06key\u548cquery\u5408\u5e76\u8d77\u6765\u540e\u653e\u5230\u4e00\u4e2a \u9690\u85cf\u5927\u5c0f\u4e3a h, \u8f93\u51fa\u5927\u5c0f\u4e3a1 \u7684\u5355\u9690\u85cf\u5c42MLP.</p>"},{"location":"DeepLearning/Attention%20Mechanisms/#22-scaled-dot-product-attention","title":"2.2 Scaled Dot-Product Attention","text":"<p>\u5f53\u67e5\u8be2\u548c\u952e\u662f \u76f8\u540c\u957f\u5ea6 \u4e3ad\u65f6, \u53ef\u4ee5\u4f7f\u7528\u7f29\u653e\u70b9\u79ef\u6ce8\u610f\u529b. </p> <p></p> <p>\u5047\u8bbe\u67e5\u8be2\u548c\u952e\u7684\u6240\u6709\u5143\u7d20\u90fd\u662f\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\uff0c \u5e76\u4e14\u90fd\u6ee1\u8db3\u96f6\u5747\u503c\u548c\u5355\u4f4d\u65b9\u5dee\uff0c \u90a3\u4e48\u4e24\u4e2a\u5411\u91cf\u7684\u70b9\u79ef\u7684\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3ad\u3002 \u4e3a\u786e\u4fdd\u65e0\u8bba\u5411\u91cf\u957f\u5ea6\u5982\u4f55\uff0c \u70b9\u79ef\u7684\u65b9\u5dee\u5728\u4e0d\u8003\u8651\u5411\u91cf\u957f\u5ea6\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u662f1.</p> <p></p>"},{"location":"DeepLearning/Attention%20Mechanisms/#3-bahdanau","title":"3. Bahdanau \u6ce8\u610f\u529b","text":"<p>\u5728\u539f\u59cb\u6a21\u578b\u4e2d, \u4e0a\u4e0b\u6587\u53d8\u91cf \\(\\bf{c}\\) \u7528\u4e8e\u8868\u793a source sentence \u7684\u4fe1\u606f; \u800c\u5728\u8be5\u67b6\u6784\u4e2d:</p> <ul> <li>\\(\\bf{h_t}\\) \u8868\u793a\u7f16\u7801\u5668\u5728\u65f6\u95f4\u6b65 t \u7684\u9690\u85cf\u5c42\u4fe1\u606f, \u4e14\u65e2\u8868\u793akey\u53c8\u8868\u793avalue;</li> <li>\\(s_{t'-1}\\) \u8868\u793a\u89e3\u7801\u5668\u5728\u65f6\u95f4\u6b65 t'-1 \u7684\u9690\u85cf\u5c42\u4fe1\u606f, \u7528\u4e8e\u8868\u793a query;</li> <li>\u5728\u6bcf\u4e2a decoding time step \\(t'\\), \\(\\bf{c}_{t'}\\) \u90fd\u4f1a\u88ab\u66f4\u65b0. \u5047\u8bbeinput sequence \u957f\u5ea6\u4e3a \\(T\\):</li> </ul> \\[ \\bf{c}_{t'} = \\sum_{t=1}^{T}\\alpha(s_{t'-1},h_t)h_t \\] <ul> <li>\\(\\bf{c}_{t'}\\) \u5c06\u88ab\u8f93\u5165\u89e3\u7801\u5668\u7684\u5faa\u73af\u5c42, \u6765\u751f\u6210\u89e3\u7801\u5668\u65f6\u95f4\u6b65 t' \u7684 state \\(s_{t'}\\)</li> </ul>"},{"location":"DeepLearning/Attention%20Mechanisms/#_1","title":"\u4ee3\u7801","text":"<pre><code>class Seq2SeqAttentionDecoder(AttentionDecoder):\n    def __init__(self, vocab_size, embed_size, num_hiddens, num_layers,\n                 dropout=0, **kwargs):\n        super(Seq2SeqAttentionDecoder, self).__init__(**kwargs)\n        #\u91c7\u7528additive attention\u4e3a\u8bc4\u5206\u51fd\u6570\n        self.attention = d2l.AdditiveAttention(\n            num_hiddens, num_hiddens, num_hiddens, dropout)\n        self.embedding = nn.Embedding(vocab_size, embed_size)\n        self.rnn = nn.GRU(\n            embed_size + num_hiddens, num_hiddens, num_layers,\n            dropout=dropout)\n        self.dense = nn.Linear(num_hiddens, vocab_size)\n\n    def init_state(self, enc_outputs, enc_valid_lens, *args):\n        # outputs\u7684\u5f62\u72b6\u4e3a(batch_size\uff0cnum_steps\uff0cnum_hiddens).\n        # hidden_state\u7684\u5f62\u72b6\u4e3a(num_layers\uff0cbatch_size\uff0cnum_hiddens)\n        outputs, hidden_state = enc_outputs\n        return (outputs.permute(1, 0, 2), hidden_state, enc_valid_lens)\n\n    def forward(self, X, state):\n        # enc_outputs\u7684\u5f62\u72b6\u4e3a(batch_size,num_steps,num_hiddens).\n        # hidden_state\u7684\u5f62\u72b6\u4e3a(num_layers,batch_size,\n        # num_hiddens)\n        enc_outputs, hidden_state, enc_valid_lens = state\n        # \u8f93\u51faX\u7684\u5f62\u72b6\u4e3a(num_steps,batch_size,embed_size)\n        X = self.embedding(X).permute(1, 0, 2)\n        outputs, self._attention_weights = [], []\n        for x in X:\n            # query\u7684\u5f62\u72b6\u4e3a(batch_size,1,num_hiddens)\n            query = torch.unsqueeze(hidden_state[-1], dim=1)\n            # context\u7684\u5f62\u72b6\u4e3a(batch_size,1,num_hiddens)\n            # enc_valid_lens\u662f\u5927\u5c0f\u4e3abatch_size\u7684\u5411\u91cf,\u6bcf\u4e2a\u503c\u8868\u793a\u8be5\u6837\u672c\u53e5\u5b50\u6709\u6548\u957f\u5ea6,\u7b97\u6709\u6548\u957f\u5ea6\u5185\u7684\u6ce8\u610f\u529b\u6743\u91cd,\u5927\u4e8e\u957f\u5ea6\u7684\u90e8\u5206\u53ef\u4ee5\u4e0d\u8981\u7ba1\n            context = self.attention(\n                query, enc_outputs, enc_outputs, enc_valid_lens)\n            # \u5728\u7279\u5f81\u7ef4\u5ea6\u4e0a\u8fde\u7ed3\n            x = torch.cat((context, torch.unsqueeze(x, dim=1)), dim=-1)\n            # \u5c06x\u53d8\u5f62\u4e3a(1,batch_size,embed_size+num_hiddens)\n            out, hidden_state = self.rnn(x.permute(1, 0, 2), hidden_state)\n            outputs.append(out)\n            self._attention_weights.append(self.attention.attention_weights)\n        # \u5168\u8fde\u63a5\u5c42\u53d8\u6362\u540e\uff0coutputs\u7684\u5f62\u72b6\u4e3a\n        # (num_steps,batch_size,vocab_size)\n        outputs = self.dense(torch.cat(outputs, dim=0))\n        return outputs.permute(1, 0, 2), [enc_outputs, hidden_state,\n                                          enc_valid_lens]\n\n    @property\n    def attention_weights(self):\n        return self._attention_weights\n</code></pre>"},{"location":"DeepLearning/Attention%20Mechanisms/#4-self-attention-and-position-encoding","title":"4. Self-Attention and Position Encoding","text":""},{"location":"DeepLearning/Attention%20Mechanisms/#41-self-attention","title":"4.1 Self-Attention","text":"<p>\u7ed9\u5b9a\u8f93\u5165 tokens\u5e8f\u5217 \\(x_1,...,x_n \\in \\mathbb{R}^d\\) \uff08\u4e3a\u4ec0\u4e48token\u662f\u957f\u4e3ad\u7684\u5411\u91cf\uff0c\u56e0\u4e3awords\u901a\u8fc7embedding\u53d8\u6210\u8bcd\u5411\u91cf\uff09\uff0c\u8be5\u5e8f\u5217\u7684\u81ea\u6ce8\u610f\u529b\u8f93\u51fa\u4e3a\u4e00\u4e2a\u957f\u5ea6\u76f8\u540c\u7684\u5e8f\u5217 \\(y_1,...,y_n\\) \uff0c \u5176\u4e2d\uff1a</p> \\[ y_i = f(x_i,(x_1,x_1),...,(x_n,x_n)) \\in \\mathbb{R}^d \\] <p>\u5c06 \\(x_i\\) \u5f53\u4f5ckey\uff0cvalue\uff0cquery\u6765\u5bf9\u5e8f\u5217\u62bd\u53d6\u7279\u5f81\u6765\u5f97\u5230\u8f93\u51fa\u5e8f\u5217\u3002</p>"},{"location":"DeepLearning/Attention%20Mechanisms/#cnnrnn","title":"\u4e0eCNN\uff0cRNN\u5bf9\u6bd4","text":"<ul> <li>GPU\u53ef\u4ee5\u4f5c\u5e76\u884c\u8fd0\u7b97\uff0c\u6240\u4ee5\u6709\u5e76\u884c\u5ea6\u6765\u8861\u91cf</li> <li>\u6700\u957f\u8def\u5f84\u6307\uff0c\\(x_1\\) \u5230 \\(x_n\\) \u9700\u8981\u7ecf\u8fc7\u591a\u5c11</li> </ul>"},{"location":"DeepLearning/Convolution/","title":"\u5377\u79ef\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"DeepLearning/Convolution/#1","title":"1. \u591a\u5c42\u611f\u77e5\u673a\u7684\u9650\u5236","text":"<ul> <li>\u8f93\u5165\u662f\u4e00\u7ef4\u5411\u91cf \\(x \\in \\mathbb{R}^{1*d}\\)\u7684\u60c5\u51b5\u4e0b\uff0c\u6743\u91cd \\(W\\in \\mathbb{R}^{h*d}\\) (h\u4e3a\u5411\u91cf \\(h\\) \u7684\u5927\u5c0f)\u53ea\u9700\u8981\u4e3a\u4e8c\u7ef4\u5f20\u91cf:</li> </ul> <p>\u200b \\(h_j = \\sum_{j}{W_{i,j}{x_j}} + b_j\\)</p> <ul> <li>\u5728\u8f93\u5165\u662f\u4e8c\u7ef4\u56fe\u50cf \\(X\\) \u7684\u60c5\u51b5\u4e0b\uff0c\u9690\u85cf\u5c42\u8868\u793a \\(H\\) \u5728\u6570\u5b66\u4e0a\u662f\u4e00\u4e2a\u77e9\u9635\uff0c\u5728\u4ee3\u7801\u4e2d\u8868\u793a\u4e3a\u4e8c\u7ef4\u5f20\u91cf\u3002\u4f7f\u7528 \\([X]_{i,j}\\) \u548c \\([H]_{i,j}\\) \u5206\u522b\u8868\u793a\u8f93\u5165\u56fe\u50cf\u548c\u9690\u85cf\u8868\u793a\u4e2d\u4f4d\u7f6e \\((i,j)\\) \u5904\u7684\u50cf\u7d20\u3002\u6b64\u65f6\u8981\u6c42\u6743\u91cd \\(W\\) \u4e3a\u4e00\u4e2a\u56db\u7ef4\u5f20\u91cf\uff1a</li> </ul> <p></p> <p>\u4e3a\u4e86\u8282\u7701\u53c2\u6570\uff08\u907f\u514d\u53c2\u6570\u968f\u7740\u8f93\u5165\u53d8\u5927\u800c\u53d8\u5f97\u65e0\u9650\u591a\uff09\uff0c\u6211\u4eec\u5047\u8bbe\u6709\u4e00\u4e2a\u201d\u68c0\u6d4b\u5668\u201c\u626b\u63cf\u56fe\u50cf\uff0c\u5c06\u56fe\u50cf\u5206\u5272\u6210\u591a\u4e2a\u533a\u57df(blocks)\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u533a\u57df\u5305\u542b\u76ee\u6807\u7684\u53ef\u80fd\u6027\u6253\u5206\u3002\u800c\u7d22\u5f15a\u548cb\u901a\u8fc7\u5728\u6b63\u504f\u79fb\u548c\u8d1f\u504f\u79fb\u4e4b\u95f4\u79fb\u52a8\u8986\u76d6\u4e86\u6574\u4e2a\u56fe\u50cf\uff0c\u5bf9\u4e8e\u9690\u85cf\u8868\u793a\u4e2d\u4efb\u610f\u7ed9\u5b9a\u4f4d\u7f6e \\(( i , j )\\) \u5904\u7684\u50cf\u7d20\u503c \\([H]_{i,j}\\) , \u901a\u8fc7\u5bf9 \\(X\\) \u4e2d\u4ee5 \\((i,j)\\) \u4e3a\u4e2d\u5fc3\u7684\u50cf\u7d20\u8fdb\u884c\u52a0\u6743\u6c42\u548c\u5f97\u5230\uff0c\u6743\u91cd\u4e3a \\(v_{i,j,a,b}\\) , \u5b9e\u73b0\u4e86 \u201d\u68c0\u6d4b\u5668\u201c \u529f\u80fd\u3002</p> <p>\u5176\u4e2d\uff0c\u4ece \\(W\\) \u5230 \\(V\\) \u7684\u8f6c\u5316\u81f3\u5c11\u5f62\u5f0f\u4e0a\u7684\u8f6c\u5316\uff0c\u8fd9\u4e24\u4e2a\u56db\u9636\u5f20\u91cf\u7684\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\uff1a</p> <p>$$   [V]{i,j,a,b} = [W]   $$</p>"},{"location":"DeepLearning/Convolution/#11-translation-invariance","title":"1.1 \u5e73\u79fb\u4e0d\u53d8\u6027 Translation Invariance","text":"<p>\u200b   \u68c0\u6d4b\u5bf9\u8c61\u5728\u8f93\u5165 \\(X\\) \u4e2d\u7684\u5e73\u79fb\uff0c\u5e94\u8be5\u4ec5\u5bfc\u81f4\u9690\u85cf\u8868\u793a \\(H\\) \u4e2d\u7684\u5e73\u79fb\u3002\u4e5f\u5c31\u662f\u8bf4\u4e0d\u7ba1\u51fa\u73b0\u5728\u56fe\u50cf\u4e2d\u7684\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u795e\u7ecf\u7f51\u7edc\u7684\u5e95\u5c42\u5e94\u8be5\u5bf9\u76f8\u540c\u7684\u56fe\u50cf\u533a\u57df\u505a\u51fa\u7c7b\u4f3c\u7684\u54cd\u5e94\u3002</p> <p>\u200b   \u4f46\u5982\u516c\u5f0f \\(h_{i,j} = \\sum_{a,b}{v_{i,j,a,b}{x_{i+a,j+b}}}\\) \u6240\u793a\uff0c\\(i\uff0cj\\)\u7684\u53d8\u5316\u4f1a\u5bfc\u81f4 \u6743\u91cd \\(v\\) \u53d1\u751f\u53d8\u5316\uff0c\u4f7f\u5f97\u5230\u7684 \\(h\\) \u4e5f\u53d1\u751f\u53d8\u5316\uff0c\u8fdd\u53cd\u4e86\u5e73\u79fb\u4e0d\u53d8\u6027\u3002</p> <p>\u200b   \u6240\u4ee5\uff0c\\(v\\) \u4e0d\u5e94\u8be5\u4f9d\u8d56\u4e8e \\((i,j)\\)\uff0c\u5b9a\u4e49\uff1a\\(v_{i,j,a,b} = v_{a,b}\\)\uff0c\u5f97\u5230\uff1a</p> <p>$$ h_{i,j} = \\sum_{a,b}{v_{a,b}}{x_{i+a,j+b}} $$ \u200b   </p> <p>\u8fd9\u5c31\u662f2\u7ef4\u4ea4\u53c9\u76f8\u5173\uff0c\u589e\u52a0\u4e86\u91cd\u590d\u6027\uff0c\u51cf\u5c11\u53c2\u6570\u6570\u91cf\uff0c\u964d\u4f4e\u4e86\u6a21\u578b\u590d\u6742\u5ea6</p>"},{"location":"DeepLearning/Convolution/#12","title":"1.2 \u5c40\u90e8\u6027","text":"<p>\u200b   \u795e\u7ecf\u7f51\u7edc\u7684\u5e95\u5c42\u5e94\u8be5\u53ea\u63a2\u7d22\u8f93\u5165\u56fe\u50cf\u4e2d\u7684\u5c40\u90e8\u533a\u57df\uff0c\u800c\u4e0d\u8003\u8651\u56fe\u50cf\u8fdc\u5904\u533a\u57df\u7684\u5185\u5bb9\u3002\u4e3a\u4e86\u6536\u96c6\u7528\u6765\u8bad\u7ec3\u53c2\u6570 \\([H]_{i,j}\\) \u7684\u76f8\u5173\u4fe1\u606f\uff0c</p> <p>\u5728 \\(|a|&gt; \\Delta\\) \u548c \\(|b| &gt; \\Delta\\) \u7684\u8303\u56f4\u4e4b\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e \\([V]_{a,b} = 0\\)\uff0c\u6545\u5c06\u516c\u5f0f\u91cd\u5199\u4e3a\uff1a</p> <p>$$ [H]{a,j} = u + \\sum[V]}^{\\Delta}\\sum_{b = -\\Delta}^{\\Delta{a,b}[X] $$ \u200b   </p> <p>\u200b   \\(V\\) \u88ab\u79f0\u4e3a\u5377\u79ef\u6838\uff08convolution kernel\uff09\u6216\u8005\u6ee4\u6ce2\u5668\uff08filter\uff09\uff0c\u4ea6\u6216\u7b80\u5355\u5730\u79f0\u4e4b\u4e3a\u8be5\u5377\u79ef\u5c42\u7684\u6743\u91cd.</p>"},{"location":"DeepLearning/Convolution/#2","title":"2 \u5377\u79ef\u5c42","text":"<p>\u6838\u77e9\u9635\u548c\u504f\u79fb\u662f\u53ef\u5b66\u4e60\u7684\u53c2\u6570\uff0c\u6838\u77e9\u9635\u7684\u5927\u5c0f\u662f\u8d85\u53c2\u6570</p>"},{"location":"DeepLearning/Convolution/#21","title":"2.1 \u4e8c\u7ef4\u4ea4\u53c9\u76f8\u5173","text":""},{"location":"DeepLearning/Convolution/#22","title":"2.2 \u4e00\u7ef4\u548c\u4e09\u7ef4\u4ea4\u53c9\u76f8\u5173","text":"<ul> <li>\u4e00\u7ef4\u53ef\u4ee5\u505a\u6587\u672c\u3001\u8bed\u8a00\u548c\u65f6\u5e8f\u5e8f\u5217</li> <li>\u4e09\u7ef4\u53ef\u4ee5\u505a\u89c6\u9891\u3001\u533b\u5b66\u56fe\u50cf\u548c\u6c14\u8c61\u5730\u56fe</li> </ul>"},{"location":"DeepLearning/Convolution/#23","title":"2.3 \u4ee3\u7801\u5b9e\u73b0","text":"<p>\u89c1 \u674e\u6c90\u5b66ai\u5bf9\u5e94\u7ae0\u8282</p>"},{"location":"DeepLearning/Convolution/#3-paddingstride","title":"3. \u586b\u5145(Padding)\u4e0e\u6b65\u5e45(Stride)","text":""},{"location":"DeepLearning/Convolution/#31-padding","title":"3.1 Padding","text":"<p>\u200b   \u5728\u5e94\u7528\u591a\u5c42\u5377\u79ef\u65f6\uff0c\u6211\u4eec\u5e38\u5e38\u4e22\u5931\u8fb9\u7f18\u50cf\u7d20\u3002 \u7531\u4e8e\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u5c0f\u5377\u79ef\u6838\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4efb\u4f55\u5355\u4e2a\u5377\u79ef\uff0c\u6211\u4eec\u53ef\u80fd\u53ea\u4f1a\u4e22\u5931\u51e0\u4e2a\u50cf\u7d20\u3002 \u4f46\u968f\u7740\u6211\u4eec\u5e94\u7528\u8bb8\u591a\u8fde\u7eed\u5377\u79ef\u5c42\uff0c\u7d2f\u79ef\u4e22\u5931\u7684\u50cf\u7d20\u6570\u5c31\u591a\u4e86\u3002 \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u7b80\u5355\u65b9\u6cd5\u5373\u4e3a\u586b\u5145\uff08padding\uff09\uff1a\u5728\u8f93\u5165\u56fe\u50cf\u7684\u8fb9\u754c\u586b\u5145\u5143\u7d20\uff08\u901a\u5e38\u586b\u5145\u5143\u7d20\u662f0\uff09\u3002</p> <p></p> <p>\u5982\u679c\u6dfb\u52a0 \\(P_h\\) \u884c\u586b\u5145\uff08\u4e00\u534a\u9876\u90e8\u4e00\u534a\u5e95\u90e8\uff09\uff0c\\(P_w\\)\u5217\u586b\u5145\uff08\u4e00\u534a\u5de6\u4fa7\u4e00\u534a\u53f3\u4fa7\uff09\uff0c\u90a3\u4e48\u8f93\u51fa\u5927\u5c0f\u4e3a\uff1a</p> \\[ (n_h - k_h+p_h+1)\\times(n_w-k_w+p_w+1) \\] <p>\u6240\u4ee5\uff0c\u4e3a\u4e86\u4f7f\u5f97\u8f93\u51fa\u4e0d\u4e22\u5931\u8fb9\u7f18\u50cf\u7d20\uff0c\u6211\u4eec\u8bbe\u7f6e \\(p_h = k_h-1\\) \u548c \\(p_w = k_w-1\\)\uff0c\u4f7f\u8f93\u5165\u548c\u8f93\u51fa\u5177\u6709\u76f8\u540c\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u3002</p> <ul> <li>\u5047\u8bbe \\(k_h\\)\u662f\u5947\u6570\uff0c\u6211\u4eec\u5c06\u5728\u9ad8\u5ea6\u7684\u4e24\u4fa7\u586b\u5145 \\(p_h/2\\) \u884c</li> <li>\u5982\u679c \\(k_h\\) \u662f\u5076\u6570\uff0c\u5219\u4e00\u79cd\u53ef\u80fd\u6027\u662f\u5728\u8f93\u5165\u9876\u90e8\u586b\u5145 \\(\u2308p_h/2\u2309\\) \u884c\uff0c\u5728\u5e95\u90e8\u586b\u5145 \\(\u230ap_h/2\u230b\\) \u884c\u3002\u540c\u7406\uff0c\u6211\u4eec\u586b\u5145\u5bbd\u5ea6\u7684\u4e24\u4fa7\u3002</li> </ul>"},{"location":"DeepLearning/Convolution/#32-stride","title":"3.2 Stride","text":"<p>\u6b65\u5e45\u7528\u4e8e\u51cf\u5c11\u8f93\u51fa\u5927\u5c0f\u3002</p> <p></p> <p></p> <p>\u200b   \u4e0a\u9762\u4e24\u79cd\u60c5\u51b5\u662f\u4e3a\u4e86\u5411\u4e0a\u53d6\u6574\u3002</p>"},{"location":"DeepLearning/Convolution/#33","title":"3.3 \u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>import torch\nfrom torch import nn\n\n\n# \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8ba1\u7b97\u5377\u79ef\u5c42\u7684\u51fd\u6570\u3002\n# \u6b64\u51fd\u6570\u521d\u59cb\u5316\u5377\u79ef\u5c42\u6743\u91cd\uff0c\u5e76\u5bf9\u8f93\u5165\u548c\u8f93\u51fa\u63d0\u9ad8\u548c\u7f29\u51cf\u76f8\u5e94\u7684\u7ef4\u6570\ndef comp_conv2d(conv2d, X):\n    # \u8fd9\u91cc\u7684\uff081\uff0c1\uff09\u8868\u793a\u6279\u91cf\u5927\u5c0f\u548c\u901a\u9053\u6570\u90fd\u662f1\n    X = X.reshape((1, 1) + X.shape)\n    Y = conv2d(X)\n    # \u7701\u7565\u524d\u4e24\u4e2a\u7ef4\u5ea6\uff1a\u6279\u91cf\u5927\u5c0f\u548c\u901a\u9053\n    return Y.reshape(Y.shape[2:])\n\n# \u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u6bcf\u8fb9\u90fd\u586b\u5145\u4e861\u884c\u62161\u5217\uff0c\u56e0\u6b64\u603b\u5171\u6dfb\u52a0\u4e862\u884c\u62162\u5217\nconv2d = nn.Conv2d(1, 1, kernel_size=3, padding=1)\nX = torch.rand(size=(8, 8))\ncomp_conv2d(conv2d, X).shape\n</code></pre> <p>\u7ed3\u679c\u4e3a\uff1a<code>torch.Size([8, 8])</code>\uff0c\u56e0\u4e3a8-3+1+2 = 8</p> <p>\u5f53\u5377\u79ef\u6838\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u4e0d\u540c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u586b\u5145\u4e0d\u540c\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff0c\u4f7f\u8f93\u51fa\u548c\u8f93\u5165\u5177\u6709\u76f8\u540c\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff1a</p> <pre><code>conv2d = nn.Conv2d(1, 1, kernel_size=(5, 3), padding=(2, 1))\ncomp_conv2d(conv2d, X).shape\n</code></pre> <p>\u7ed3\u679c\u540c\u4e0a\uff0c\u56e0\u4e3a8-5+1+2x2 = 8\uff0c8-3+1+1x2 = 8.</p> <p>\u6211\u4eec\u5c06\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u7684\u6b65\u5e45\u8bbe\u7f6e\u4e3a2\uff0c\u4ece\u800c\u5c06\u8f93\u5165\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u51cf\u534a\uff1a</p> <pre><code>conv2d = nn.Conv2d(1, 1, kernel_size=3, padding=1, stride=2)\ncomp_conv2d(conv2d, X).shape\n</code></pre> <p>\u7ed3\u679c\u4e3a <code>torch.Size([4, 4])</code>\uff0c(8-3+1+1*2)/2 = 4.</p> <p>\u63a5\u4e0b\u6765\u662f\u4e00\u4e2a\u7a0d\u5fae\u590d\u6742\u7684\u4f8b\u5b50\uff1a</p> <pre><code>conv2d = nn.Conv2d(1, 1, kernel_size=(3, 5), padding=(0, 1), stride=(3, 4))\ncomp_conv2d(conv2d, X).shape\n</code></pre> <p>\u7b54\u6848\u4e3a <code>torch.Size([2, 2])</code>\uff0c(8-3+1+0*2)/3 = 2, (8-5+1+1x2)/4 = 2\uff08\u5411\u4e0a\u53d6\u6574\uff09</p>"},{"location":"DeepLearning/Convolution/#4","title":"4. \u591a\u8f93\u5165\u591a\u8f93\u51fa\u901a\u9053","text":""},{"location":"DeepLearning/Convolution/#41","title":"4.1 \u591a\u8f93\u5165\u901a\u9053","text":"<p>\u200b   \u5f53\u8f93\u5165\u5305\u542b\u591a\u4e2a\u901a\u9053\u65f6\uff0c\u9700\u8981\u6784\u9020\u4e00\u4e2a\u4e0e\u8f93\u5165\u6570\u636e\u5177\u6709\u76f8\u540c\u8f93\u5165\u901a\u9053\u6570\u7684\u5377\u79ef\u6838\uff0c\u4ee5\u4fbf\u4e0e\u8f93\u5165\u6570\u636e\u8fdb\u884c\u4e92\u76f8\u5173\u8fd0\u7b97\u3002</p> <p>\u200b   \u5047\u8bbe\u901a\u9053\u6570\u4e3a \\(c_i\\)\uff0c\u90a3\u4e48\u5377\u79ef\u6838\u7684\u5927\u5c0f\u4e3a \\(c_i \\times k_h\\times k_w\\)</p> <p></p>"},{"location":"DeepLearning/Convolution/#42","title":"4.2 \u591a\u8f93\u51fa\u901a\u9053","text":"<p>\u200b   \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4e0d\u8bba\u6709\u591a\u5c11\u8f93\u5165\u901a\u9053\uff0c\u6211\u4eec\u8fd8\u53ea\u6709\u4e00\u4e2a\u8f93\u51fa\u901a\u9053\u3002\u5728\u6700\u6d41\u884c\u7684\u795e\u7ecf\u7f51\u7edc\u67b6\u6784\u4e2d\uff0c\u968f\u7740\u795e\u7ecf\u7f51\u7edc\u5c42\u6570\u7684\u52a0\u6df1\uff0c\u6211\u4eec\u5e38\u4f1a\u589e\u52a0\u8f93\u51fa\u901a\u9053\u7684\u7ef4\u6570\uff0c\u901a\u8fc7\u51cf\u5c11\u7a7a\u95f4\u5206\u8fa8\u7387\u4ee5\u83b7\u5f97\u66f4\u5927\u7684\u901a\u9053\u6df1\u5ea6\u3002\u76f4\u89c2\u5730\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u901a\u9053\u770b\u4f5c\u5bf9\u4e0d\u540c\u7279\u5f81\u7684\u54cd\u5e94\u3002</p> <p>\u200b   \u7528 \\(c_i\\) \u548c \\(c_o\\) \u5206\u522b\u8868\u793a\u8f93\u5165\u548c\u8f93\u51fa\u901a\u9053\u7684\u6570\u76ee\uff0c\u4e3a\u4e86\u83b7\u5f97\u591a\u4e2a\u901a\u9053\u7684\u8f93\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u8f93\u51fa\u901a\u9053\u521b\u5efa\u4e00\u4e2a\u5f62\u72b6\u4e3a \\(c_i \\times k_h\\times k_w\\) \u7684\u5377\u79ef\u6838\u5f20\u91cf\uff0c\u6700\u7ec8\uff1a</p> <p></p>"},{"location":"DeepLearning/Convolution/#43-1-times-1","title":"4.3 1 \\(\\times\\) 1\u5377\u79ef\u5c42","text":"<p>\u200b   \u4e0d\u8bc6\u522b\u7a7a\u95f4\u6a21\u5f0f\uff0c\u53ea\u662f\u878d\u5408\u901a\u9053\uff1a</p> <p></p>"},{"location":"DeepLearning/Convolution/#44","title":"4.4 \u4ee3\u7801\u5b9e\u73b0","text":"<p>\u5b9e\u73b0\u591a\u8f93\u5165\u901a\u9053\u4e92\u76f8\u5173\u8fd0\u7b97\uff0c\u5373\u5bf9\u6bcf\u4e2a\u901a\u9053\u6267\u884c\u4e92\u76f8\u5173\u64cd\u4f5c\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u76f8\u52a0\u3002</p> <pre><code>import torch\nfrom d2l import torch as d2l\n\ndef corr2d_multi_in(X, K):\n    # \u5148\u904d\u5386\u201cX\u201d\u548c\u201cK\u201d\u7684\u7b2c0\u4e2a\u7ef4\u5ea6\uff08\u901a\u9053\u7ef4\u5ea6\uff09\uff0c\u518d\u628a\u5b83\u4eec\u52a0\u5728\u4e00\u8d77\n    return sum(d2l.corr2d(x, k) for x, k in zip(X, K))\n\nX = torch.tensor([[[0.0, 1.0, 2.0], [3.0, 4.0, 5.0], [6.0, 7.0, 8.0]],\n               [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]]])\nK = torch.tensor([[[0.0, 1.0], [2.0, 3.0]], [[1.0, 2.0], [3.0, 4.0]]])\n\ncorr2d_multi_in(X, K)\n#output\uff1a\n#tensor([[ 56.,  72.],\n#        [104., 120.]])\n</code></pre> <p>\u5b9e\u73b0\u8ba1\u7b97\u591a\u4e2a\u901a\u9053\u7684\u8f93\u51fa\u7684\u4e92\u76f8\u5173\u51fd\u6570\uff1a</p> <pre><code>def corr2d_multi_in_out(X, K):\n    # \u8fed\u4ee3\u201cK\u201d\u7684\u7b2c0\u4e2a\u7ef4\u5ea6\uff0c\u6bcf\u6b21\u90fd\u5bf9\u8f93\u5165\u201cX\u201d\u6267\u884c\u4e92\u76f8\u5173\u8fd0\u7b97\u3002\n    # \u6700\u540e\u5c06\u6240\u6709\u7ed3\u679c\u90fd\u53e0\u52a0\u5728\u4e00\u8d77\n    return torch.stack([corr2d_multi_in(X, k) for k in K], 0)\n\nK = torch.stack((K, K + 1, K + 2), 0)\nK.shape\n#K\u4ece3\u4e2a\u7ef4\u5ea6\u53d8\u62104\u4e2a\u7ef4\u5ea6\uff1a\u8f93\u51fa\u662f3\uff0c\u8f93\u5165\u662f2\uff0c\u5bbd\u9ad8\u4e3a2*2\n#torch.Size([3, 2, 2, 2])\ncorr2d_multi_in_out(X, K)\n\n#tensor([[[ 56.,  72.],\n#         [104., 120.]],\n\n#        [[ 76., 100.],\n#         [148., 172.]],\n\n#        [[ 96., 128.],\n#         [192., 224.]]])\n</code></pre> <p>\u4f7f\u7528\u5168\u8fde\u63a5\u5c42\u5b9e\u73b0\\(1\\times1\\)\u5377\u79ef:</p> <pre><code>def corr2d_multi_in_out_1x1(X, K):\n    c_i, h, w = X.shape\n    c_o = K.shape[0]\n    #\u53d8\u6210c_i\u4e2a\u5927\u5c0f\u4e3ah*w\u7684\u5411\u91cf\n    X = X.reshape((c_i, h * w))\n    K = K.reshape((c_o, c_i))\n    # \u5168\u8fde\u63a5\u5c42\u4e2d\u7684\u77e9\u9635\u4e58\u6cd5\n    Y = torch.matmul(K, X)\n    return Y.reshape((c_o, h, w))\n\n#\u9a8c\u8bc1\nX = torch.normal(0, 1, (3, 3, 3))\nK = torch.normal(0, 1, (2, 3, 1, 1))\n\nY1 = corr2d_multi_in_out_1x1(X, K)\nY2 = corr2d_multi_in_out(X, K)\nassert float(torch.abs(Y1 - Y2).sum()) &lt; 1e-6\n</code></pre>"},{"location":"DeepLearning/Convolution/#5","title":"5. \u6c60\u5316\u5c42","text":"<p>pooling\u5177\u6709\u53cc\u91cd\u76ee\u7684\uff1a\u964d\u4f4e\u5377\u79ef\u5c42\u5bf9\u4f4d\u7f6e\u7684\u654f\u611f\u6027\uff0c\u540c\u65f6\u964d\u4f4e\u5bf9\u7a7a\u95f4\u964d\u91c7\u6837\u8868\u793a\u7684\u654f\u611f\u6027</p>"},{"location":"DeepLearning/Convolution/#51","title":"5.1 \u6700\u5927\u6c47\u805a\u5c42\u548c\u5e73\u5747\u6c47\u805a\u5c42","text":"<p>\u6c60\u8fd0\u7b97\u662f\u786e\u5b9a\u6027\u7684\uff0c\u6211\u4eec\u901a\u5e38\u8ba1\u7b97\u6c47\u805a\u7a97\u53e3\u4e2d\u6240\u6709\u5143\u7d20\u7684\u6700\u5927\u503c\u6216\u5e73\u5747\u503c.</p> <ul> <li>maximum pooling\uff1a\u83b7\u53d6\u6bcf\u4e2a\u7a97\u53e3\u4e2d\u6700\u5f3a\u6a21\u5f0f\u4fe1\u53f7</li> </ul> <p></p> <ul> <li>average pooling\uff1a\u83b7\u53d6\u6bcf\u4e2a\u7a97\u53e3\u4e2d\u5e73\u5747\u6a21\u5f0f\u4fe1\u53f7</li> </ul>"},{"location":"DeepLearning/Convolution/#52","title":"5.2 \u586b\u5145\u4e0e\u6b65\u5e45","text":"<p>\u4e0e\u5377\u79ef\u5c42\u4e00\u6837\uff0c\u6c47\u805a\u5c42\u4e5f\u53ef\u4ee5\u6539\u53d8\u8f93\u51fa\u5f62\u72b6\u3002\u548c\u4ee5\u524d\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u586b\u5145\u548c\u6b65\u5e45\u4ee5\u83b7\u5f97\u6240\u9700\u7684\u8f93\u51fa\u5f62\u72b6\u3002</p> <p>\u4f46\u662f\u6c60\u5316\u5c42\u6ca1\u6709\u53ef\u5b66\u4e60\u7684\u53c2\u6570\uff0ckernel\u662f\u56fa\u5b9a\u7684\uff1b\u4e14\u4e0d\u53ef\u878d\u5408\u901a\u9053\uff0c\u8f93\u5165\u901a\u9053\u6570 = \u8f93\u51fa\u901a\u9053\u6570</p>"},{"location":"DeepLearning/Convolution/#53","title":"5.3 \u4ee3\u7801\u5b9e\u73b0","text":"<p>\u7565</p>"},{"location":"DeepLearning/Convolution/#6-lenet","title":"6. LeNet","text":""},{"location":"DeepLearning/Convolution/#61","title":"6.1 \u4ecb\u7ecd","text":"<p>\u603b\u4f53\u7531\u4e24\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>\u5377\u79ef\u7f16\u7801\u5668\uff1a\u7531\u4e24\u4e2a\u5377\u79ef\u5c42\u7ec4\u6210\uff0c\u5b66\u4e60\u56fe\u7247\u7a7a\u95f4\u4fe1\u606f</li> <li>\u5168\u8fde\u63a5\u5c42\u5bc6\u96c6\u5757\uff1a\u7531\u4e09\u4e2a\u5168\u8fde\u63a5\u5c42\u7ec4\u6210\uff0c\u8f6c\u5316\u5230\u7c7b\u522b\u7a7a\u95f4</li> </ul> <p></p> <ul> <li> <p>\u7b2c\u4e00\u4e2a\u5377\u79ef\u5c42 5*5\uff0c\u8f93\u51fa\u901a\u9053\u4e3a6(\u77e9\u9635\u5927\u5c0f\u4e0d\u53d8)\uff1b</p> </li> <li> <p>\u63a5\u7740\u7b2c\u4e00\u4e2a\u6c60\u5316\u5c422*2\uff0c\u8f93\u51fa\u901a\u9053\u4e3a6</p> </li> <li> <p>\u7b2c\u4e8c\u4e2a\u5377\u79ef\u5c425*5\uff0c\u8f93\u51fa\u901a\u905316(\u77e9\u9635\u5927\u5c0f\u53d8\u5316)</p> </li> <li> <p>\u7b2c\u4e8c\u4e2a\u6c60\u5316\u5c422*2\uff0c\u8f93\u51fa\u901a\u905316</p> </li> <li> <p>\u63a5\u7740\u63a5\u4e24\u4e2a\u5168\u8fde\u63a5\u5c42</p> </li> <li>\u6700\u540e\u8f93\u51fa\u5c42(\u4e5f\u53ef\u89c6\u4f5c\u5168\u8fde\u63a5\u5c42)</li> </ul> <p></p>"},{"location":"DeepLearning/Convolution/#62","title":"6.2 \u4ee3\u7801\u5b9e\u73b0","text":"<p>\u53ea\u9700\u8981\u5b9e\u4f8b\u5316\u4e00\u4e2a<code>Sequential</code>\u5757\u5e76\u5c06\u9700\u8981\u7684\u5c42\u8fde\u63a5\u5728\u4e00\u8d77\uff1a</p> <pre><code>import torch\nfrom torch import nn\nfrom d2l import torch as d2l\n\nnet = nn.Sequential(\n    #\u8bbe\u7f6epadding\u4f7f\u5f97\u8f93\u5165\u8f93\u51fa\u77e9\u9635\u5927\u5c0f\u4e00\u81f4\n    nn.Conv2d(1, 6, kernel_size=5, padding=2), nn.Sigmoid(),\n    nn.AvgPool2d(kernel_size=2, stride=2),\n    nn.Conv2d(6, 16, kernel_size=5), nn.Sigmoid(),\n    nn.AvgPool2d(kernel_size=2, stride=2),\n    nn.Flatten(),\n    nn.Linear(16 * 5 * 5, 120), nn.Sigmoid(),\n    nn.Linear(120, 84), nn.Sigmoid(),\n    nn.Linear(84, 10))\n</code></pre> <p>\u6a21\u578b\u8bad\u7ec3\uff0c\u4fee\u6539\u4ee3\u7801\uff0c\u4f7f\u5176\u80fd\u5728GPU\u4e0a\u8ba1\u7b97\uff1a</p> <pre><code>def evaluate_accuracy_gpu(net, data_iter, device=None): #@save\n    \"\"\"\u4f7f\u7528GPU\u8ba1\u7b97\u6a21\u578b\u5728\u6570\u636e\u96c6\u4e0a\u7684\u7cbe\u5ea6\"\"\"\n    if isinstance(net, nn.Module):\n        net.eval()  # \u8bbe\u7f6e\u4e3a\u8bc4\u4f30\u6a21\u5f0f\n        if not device:\n            device = next(iter(net.parameters())).device\n    # \u6b63\u786e\u9884\u6d4b\u7684\u6570\u91cf\uff0c\u603b\u9884\u6d4b\u7684\u6570\u91cf\n    metric = d2l.Accumulator(2)\n    with torch.no_grad():\n        for X, y in data_iter:\n            if isinstance(X, list):\n                # BERT\u5fae\u8c03\u6240\u9700\u7684\uff08\u4e4b\u540e\u5c06\u4ecb\u7ecd\uff09\n                X = [x.to(device) for x in X]\n            else:\n                X = X.to(device)\n            y = y.to(device)\n            metric.add(d2l.accuracy(net(X), y), y.numel())\n    return metric[0] / metric[1]\n\n#@save\ndef train_ch6(net, train_iter, test_iter, num_epochs, lr, device):\n    \"\"\"\u7528GPU\u8bad\u7ec3\u6a21\u578b(\u5728\u7b2c\u516d\u7ae0\u5b9a\u4e49)\"\"\"\n    def init_weights(m):\n        if type(m) == nn.Linear or type(m) == nn.Conv2d:\n            nn.init.xavier_uniform_(m.weight)\n    #\u7528xavier\u521d\u59cb\u5316\u6743\u91cd\n    net.apply(init_weights)\n    print('training on', device)\n    net.to(device)\n    optimizer = torch.optim.SGD(net.parameters(), lr=lr)\n    loss = nn.CrossEntropyLoss()\n    #\u8bbe\u7f6e\u52a8\u753b\u6548\u679c(\u6253\u5370\u4fe1\u606f)\n    animator = d2l.Animator(xlabel='epoch', xlim=[1, num_epochs],\n                            legend=['train loss', 'train acc', 'test acc'])\n    timer, num_batches = d2l.Timer(), len(train_iter)\n    for epoch in range(num_epochs):\n        # \u8bad\u7ec3\u635f\u5931\u4e4b\u548c\uff0c\u8bad\u7ec3\u51c6\u786e\u7387\u4e4b\u548c\uff0c\u6837\u672c\u6570\n        metric = d2l.Accumulator(3)\n        net.train()\n        for i, (X, y) in enumerate(train_iter):\n            timer.start()\n            optimizer.zero_grad()\n            X, y = X.to(device), y.to(device)\n            y_hat = net(X)\n            l = loss(y_hat, y)\n            l.backward()\n            optimizer.step()\n            with torch.no_grad():\n                metric.add(l * X.shape[0], d2l.accuracy(y_hat, y), X.shape[0])\n            timer.stop()\n            train_l = metric[0] / metric[2]\n            train_acc = metric[1] / metric[2]\n            if (i + 1) % (num_batches // 5) == 0 or i == num_batches - 1:\n                animator.add(epoch + (i + 1) / num_batches,\n                             (train_l, train_acc, None))\n        #\u6253\u5370\u4fe1\u606f\n        test_acc = evaluate_accuracy_gpu(net, test_iter)\n        animator.add(epoch + 1, (None, None, test_acc))\n    print(f'loss {train_l:.3f}, train acc {train_acc:.3f}, '\n          f'test acc {test_acc:.3f}')\n    print(f'{metric[2] * num_epochs / timer.sum():.1f} examples/sec '\n          f'on {str(device)}')\n</code></pre>"},{"location":"DeepLearning/Modern%20CNN/","title":"\u73b0\u4ee3\u795e\u7ecf\u7f51\u7edc\u67b6\u6784","text":"<p>\u200b   \u672c\u7ae0\u4ecb\u7ecd\u7684\u795e\u7ecf\u7f51\u7edc\u662f\u5c06\u4eba\u7c7b\u76f4\u89c9\u548c\u76f8\u5173\u6570\u5b66\u89c1\u89e3\u7ed3\u5408\u540e\uff0c\u7ecf\u8fc7\u5927\u91cf\u7814\u7a76\u8bd5\u9519\u540e\u7684\u7ed3\u6676\u3002 \u5c06\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u4ecb\u7ecd\u8fd9\u4e9b\u6a21\u578b\uff0c\u5728\u8ffd\u5bfb\u5386\u53f2\u7684\u8109\u7edc\u7684\u540c\u65f6\uff0c\u5e2e\u52a9\u57f9\u517b\u5bf9\u8be5\u9886\u57df\u53d1\u5c55\u7684\u76f4\u89c9\u3002\u8fd9\u5c06\u6709\u52a9\u4e8e\u7814\u7a76\u5f00\u53d1\u81ea\u5df1\u7684\u67b6\u6784\u3002</p> <p>\u200b   \u4f8b\u5982\uff0c\u672c\u7ae0\u4ecb\u7ecd\u7684\u6279\u91cf\u89c4\u8303\u5316\uff08batch normalization\uff09\u548c\u6b8b\u5dee\u7f51\u7edc\uff08ResNet\uff09\u4e3a\u8bbe\u8ba1\u548c\u8bad\u7ec3\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u63d0\u4f9b\u4e86\u91cd\u8981\u601d\u60f3\u6307\u5bfc\u3002</p>"},{"location":"DeepLearning/Modern%20CNN/#1-alexnet","title":"1. AlexNet","text":"<p>\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u66f4\u6df1\u66f4\u5927\u7684LeNet\uff0c\u505a\u7684\u6539\u8fdb\u6709\uff1a</p> <ul> <li>\u4e22\u5f03\u6cd5</li> <li>ReLu</li> <li>MaxPooling</li> </ul> <p>\u901a\u8fc7CNN\u5b66\u4e60\u56fe\u50cf\u7279\u5f81\uff08\u6df1\u5ea6\u5b66\u4e60\u795e\u7ecf\u7f51\u7edc\uff09\uff0c\u518d\u7531softmax\u56de\u5f52\u5206\u7c7b\u3002</p> <p></p> <p>\u200b   \u7531\u4e8e\u5f53\u65f6GPU\u8fd0\u7b97\u6027\u80fd\u4e0d\u591f\uff0c\u6240\u4ee5\u7b2c\u4e00\u5c42\u5377\u79ef\u5c42\u6b65\u5e45\u4e3a4\u3002\u8f93\u51fa\u901a\u9053\u6570\u5927\u5927\u591a\u4e8eLeNet\u3002\u66f4\u591a\u7ec6\u8282\uff1a</p> <ul> <li>\u6fc0\u6d3b\u51fd\u6570\u4e3aReLu</li> <li>\u9690\u85cf\u5168\u8fde\u63a5\u5c42\u540e\u52a0\u5165\u4e22\u5f03\u5c42</li> <li>\u6570\u636e\u589e\u5f3a</li> </ul> <p>\u590d\u6742\u5ea6\uff1a</p> <p></p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a</p> <pre><code>import torch\nfrom torch import nn\nfrom d2l import torch as d2l\n\nnet = nn.Sequential(\n    # \u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2a11*11\u7684\u66f4\u5927\u7a97\u53e3\u6765\u6355\u6349\u5bf9\u8c61\u3002\n    # \u540c\u65f6\uff0c\u6b65\u5e45\u4e3a4\uff0c\u4ee5\u51cf\u5c11\u8f93\u51fa\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u3002\n    # \u53e6\u5916\uff0c\u8f93\u51fa\u901a\u9053\u7684\u6570\u76ee\u8fdc\u5927\u4e8eLeNet\n    nn.Conv2d(1, 96, kernel_size=11, stride=4, padding=1), nn.ReLU(),\n    nn.MaxPool2d(kernel_size=3, stride=2),\n    # \u51cf\u5c0f\u5377\u79ef\u7a97\u53e3\uff0c\u4f7f\u7528\u586b\u5145\u4e3a2\u6765\u4f7f\u5f97\u8f93\u5165\u4e0e\u8f93\u51fa\u7684\u9ad8\u548c\u5bbd\u4e00\u81f4\uff0c\u4e14\u589e\u5927\u8f93\u51fa\u901a\u9053\u6570\n    nn.Conv2d(96, 256, kernel_size=5, padding=2), nn.ReLU(),\n    nn.MaxPool2d(kernel_size=3, stride=2),\n    # \u4f7f\u7528\u4e09\u4e2a\u8fde\u7eed\u7684\u5377\u79ef\u5c42\u548c\u8f83\u5c0f\u7684\u5377\u79ef\u7a97\u53e3\u3002\n    # \u9664\u4e86\u6700\u540e\u7684\u5377\u79ef\u5c42\uff0c\u8f93\u51fa\u901a\u9053\u7684\u6570\u91cf\u8fdb\u4e00\u6b65\u589e\u52a0\u3002\n    # \u5728\u524d\u4e24\u4e2a\u5377\u79ef\u5c42\u4e4b\u540e\uff0c\u6c47\u805a\u5c42\u4e0d\u7528\u4e8e\u51cf\u5c11\u8f93\u5165\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\n    nn.Conv2d(256, 384, kernel_size=3, padding=1), nn.ReLU(),\n    nn.Conv2d(384, 384, kernel_size=3, padding=1), nn.ReLU(),\n    nn.Conv2d(384, 256, kernel_size=3, padding=1), nn.ReLU(),\n    nn.MaxPool2d(kernel_size=3, stride=2),\n    nn.Flatten(),\n    # \u8fd9\u91cc\uff0c\u5168\u8fde\u63a5\u5c42\u7684\u8f93\u51fa\u6570\u91cf\u662fLeNet\u4e2d\u7684\u597d\u51e0\u500d\u3002\u4f7f\u7528dropout\u5c42\u6765\u51cf\u8f7b\u8fc7\u62df\u5408\n    nn.Linear(6400, 4096), nn.ReLU(),\n    nn.Dropout(p=0.5),\n    nn.Linear(4096, 4096), nn.ReLU(),\n    nn.Dropout(p=0.5),\n    # \u6700\u540e\u662f\u8f93\u51fa\u5c42\u3002\u7531\u4e8e\u8fd9\u91cc\u4f7f\u7528Fashion-MNIST\uff0c\u6240\u4ee5\u7528\u7c7b\u522b\u6570\u4e3a10\uff0c\u800c\u975e\u8bba\u6587\u4e2d\u76841000\n    nn.Linear(4096, 10))\n</code></pre> <p>\u6784\u9020\u4e00\u4e2a\u9ad8\u5bbd\u90fd\u4e3a224\u7684\u5355\u901a\u9053\u6570\u636e\u4e3a\u8f93\u5165\uff0c\u5f97\u5230\u6bcf\u5c42\u8f93\u51fashape\uff1a</p> <p></p>"},{"location":"DeepLearning/Modern%20CNN/#2-vgg","title":"2. VGG","text":""},{"location":"DeepLearning/Modern%20CNN/#21-vgg","title":"2.1 VGG\u5757","text":"<ul> <li>\u4f7f\u7528 \\(3\\times 3\\) \u5377\u79ef\uff0cpadding = 1\uff0cn\u4e2a\u5377\u79ef\u5c42\uff08n\u662f\u8d85\u53c2\u6570\uff09\uff0cm\u901a\u9053</li> <li>\u52a0\u4e0a\u4e00\u4e2a \\(2\\times 2\\) \u6700\u5927\u6c60\u5316\u5c42\uff0cstride = 2</li> </ul> <p>why \\(3\\times 3\\) : \u7814\u7a76\u53d1\u73b0\u6df1\u4f46\u7a84\u6548\u679c\u4f1a\u66f4\u597d\u3002</p>"},{"location":"DeepLearning/Modern%20CNN/#22-vgg","title":"2.2 VGG\u67b6\u6784","text":"<p>\u591a\u4e2aVGG\u5757\u8fde\u63a5\u540e\u540e\u63a5\u5168\u8fde\u63a5\u5c42\u5f97\u5230VGG\u67b6\u6784\uff0c\u4e0d\u540c\u6b21\u6570\u7684\u91cd\u590d\u5757\u5f97\u5230\u4e0d\u540c\u7684\u67b6\u6784\u3002</p> <p></p>"},{"location":"DeepLearning/Modern%20CNN/#23","title":"2.3 \u5b9e\u73b0","text":"<p>\u5b9a\u4e49VGG\u5757\uff1a</p> <pre><code>import torch\nfrom torch import nn\nfrom d2l import torch as d2l\n\n#\u5377\u79ef\u5c42\u7684\u6570\u91cfnum_convs\u3001\u8f93\u5165\u901a\u9053\u7684\u6570\u91cfin_channels \u548c\u8f93\u51fa\u901a\u9053\u7684\u6570\u91cfout_channels.\ndef vgg_block(num_convs, in_channels, out_channels):\n    layers = []\n    for _ in range(num_convs):\n        layers.append(nn.Conv2d(in_channels, out_channels,\n                                kernel_size=3, padding=1))\n        layers.append(nn.ReLU())\n        #\u66f4\u65b0\n        in_channels = out_channels\n    layers.append(nn.MaxPool2d(kernel_size=2,stride=2))\n    return nn.Sequential(*layers)\n</code></pre> <p>\u5b9e\u73b0VGG-11\uff1a</p> <pre><code>conv_arch = ((1, 64), (1, 128), (2, 256), (2, 512), (2, 512))\n\ndef vgg(conv_arch):\n    conv_blks = []\n    in_channels = 1\n    # \u5377\u79ef\u5c42\u90e8\u5206\n    for (num_convs, out_channels) in conv_arch:\n        conv_blks.append(vgg_block(num_convs, in_channels, out_channels))\n        in_channels = out_channels\n\n    return nn.Sequential(\n        *conv_blks, nn.Flatten(),\n        # \u5168\u8fde\u63a5\u5c42\u90e8\u5206\n        nn.Linear(out_channels * 7 * 7, 4096), nn.ReLU(), nn.Dropout(0.5),\n        nn.Linear(4096, 4096), nn.ReLU(), nn.Dropout(0.5),\n        nn.Linear(4096, 10))\n\nnet = vgg(conv_arch)\n</code></pre> <p>\u540c\u6837\u662f\u9ad8\u5bbd\u90fd\u4e3a244\u7684\u5355\u901a\u9053\u6570\u636e\u4e3a\u8f93\u5165\uff0c\u89c2\u5bdf\u6bcf\u5c42\u8f93\u51fashape\u4e3a\uff1a</p> <p></p> <p>\u5176\u8bad\u7ec3\u901f\u5ea6\u6bd4AlexNet\u6162\uff0c\u4f46\u7cbe\u5ea6\u9ad8\u4e8eAlexNet\u3002</p>"},{"location":"DeepLearning/Modern%20CNN/#3-nin","title":"3. NiN","text":"<p>\u5168\u8fde\u63a5\u5c42\u7684\u95ee\u9898\uff1a</p> <ul> <li> <p>\u5e26\u6765\u8fc7\u62df\u5408</p> </li> <li> <p>\u6240\u9700\u53c2\u6570\u8fc7\u591a</p> </li> </ul> <p></p>"},{"location":"DeepLearning/Modern%20CNN/#31-nin","title":"3.1 NiN\u5757","text":"<p>\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u5377\u79ef\u5c42\u540e\u8ddf\u4e24\u4e2a \\(1\\times 1\\) \u5377\u79ef\u5c42\uff0c\u8fd9\u4e24\u4e2a \\(1\\times 1\\) \u5377\u79ef\u5c42\u6b65\u5e45\u4e3a1\uff0c\u65e0\u586b\u5145\uff0c\u8f93\u51fa\u5f62\u72b6\u548c\u5377\u79ef\u5c42\u8f93\u51fa\u4e00\u6837\uff0c\u8d77\u5230\u5168\u8fde\u63a5\u5c42\u7684\u4f5c\u7528\uff0c\u5bf9\u56fe\u7247\u7684\u6bcf\u4e2a\u50cf\u7d20\u589e\u52a0\u4e86\u975e\u7ebf\u6027\u6027</p> <p></p>"},{"location":"DeepLearning/Modern%20CNN/#32-nin","title":"3.2 NiN\u67b6\u6784","text":"<p>\u6700\u540e\u7684\u4e00\u4e2a\u5c42\u4f7f\u7528\u5168\u5c40\u5e73\u5747\u6c60\u5316\u5c42\u66ff\u4ee3VGG\u548cAlexNet\u4e2d\u7684\u5168\u8fde\u63a5\u5c42\uff0c\u66f4\u5c11\u7684\u53c2\u6570\u4e2a\u6570\uff0c\u4e0d\u5bb9\u6613\u8fc7\u62df\u5408\u3002</p>"},{"location":"DeepLearning/Modern%20CNN/#33","title":"3.3 \u5b9e\u73b0","text":"<p>nin\u5757\uff1a</p> <pre><code>import torch\nfrom torch import nn\nfrom d2l import torch as d2l\n\n\ndef nin_block(in_channels, out_channels, kernel_size, strides, padding):\n    return nn.Sequential(\n        #\u81ea\u5b9a\u4e49\u5377\u79ef\u5c42\n        nn.Conv2d(in_channels, out_channels, kernel_size, strides, padding),\n        nn.ReLU(),\n        #1x1\u5377\u79ef\u5c42+\u6fc0\u6d3b\u5c42\uff0c\u901a\u9053\u6570\u4e0d\u6539\u53d8\n        nn.Conv2d(out_channels, out_channels, kernel_size=1), nn.ReLU(),\n        nn.Conv2d(out_channels, out_channels, kernel_size=1), nn.ReLU())\n</code></pre> <p>nin\u6a21\u578b\uff1a</p> <pre><code>net = nn.Sequential(\n    nin_block(1, 96, kernel_size=11, strides=4, padding=0),\n    nn.MaxPool2d(3, stride=2),\n    nin_block(96, 256, kernel_size=5, strides=1, padding=2),\n    nn.MaxPool2d(3, stride=2),\n    nin_block(256, 384, kernel_size=3, strides=1, padding=1),\n    nn.MaxPool2d(3, stride=2),\n    nn.Dropout(0.5),\n    # \u6807\u7b7e\u7c7b\u522b\u6570\u662f10\uff0c\u8f93\u51fa\u7b49\u4e8e\u6807\u7b7e\u7c7b\u522b\u6570\n    nin_block(384, 10, kernel_size=3, strides=1, padding=1),\n    #\u53d610\u4e2a\u901a\u9053\u4e2d\u6bcf\u4e2a\u77e9\u9635\u7684\u5e73\u5747\uff0csize\u53d8\u4e3a[1,10,1,1]\n    nn.AdaptiveAvgPool2d((1, 1)),\n    # \u5c06\u56db\u7ef4\u7684\u8f93\u51fa\u8f6c\u6210\u4e8c\u7ef4\u7684\u8f93\u51fa\uff0c\u5176\u5f62\u72b6\u4e3a(\u6279\u91cf\u5927\u5c0f,10)\n    nn.Flatten())\n</code></pre> <p>\u540c\u6837\u521b\u5efa\u4e00\u4e2a224 x 224\u7684\u6570\u636e\u6837\u672c\u6765\u67e5\u770b\u6bcf\u4e2a\u5757\u7684\u8f93\u51fa\u5f62\u72b6\uff1a</p> <p></p>"},{"location":"DeepLearning/Modern%20CNN/#4-googlenet","title":"4. GoogLeNet","text":"<p>GoogLeNet\u5438\u6536\u4e86NiN\u4e2d\u4e32\u8054\u7f51\u7edc\u7684\u601d\u60f3\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u4e86\u6539\u8fdb\u3002\u63d0\u51fa\u8be5\u7f51\u7edc\u7684\u8bba\u6587\u89e3\u51b3\u4e86\u4ec0\u4e48\u6837\u5927\u5c0f\u7684\u5377\u79ef\u6838\u6700\u5408\u9002\u7684\u95ee\u9898\u3002</p>"},{"location":"DeepLearning/Modern%20CNN/#41-inception","title":"4.1 Inception\u5757","text":"<p>\u5728GoogLeNet\u4e2d\uff0c\u57fa\u672c\u7684\u5377\u79ef\u5757\u88ab\u79f0\u4e3aInception\u5757 \uff1a</p> <p></p> <ul> <li> <p>Inception\u5757\u7531\u56db\u6761\u5e76\u884c\u8def\u5f84\u7ec4\u6210\uff0c\u90fd\u4f7f\u7528\u5408\u9002\u7684\u586b\u5145\u6765\u4f7f\u8f93\u5165\u4e0e\u8f93\u51fa\u7684\u9ad8\u548c\u5bbd\u4e00\u81f4\u3002</p> </li> <li> <p>\u56db\u4e2a\u8def\u5f84\u4ece\u4e0d\u540c\u5c42\u9762\u62bd\u53d6\u4fe1\u606f\uff0c\u6700\u540e\u6211\u4eec\u5c06\u6bcf\u6761\u7ebf\u8def\u7684\u8f93\u51fa\u5728\u901a\u9053\u7ef4\u5ea6\u4e0a\u8fde\u7ed3\uff0c\u5e76\u6784\u6210Inception\u5757\u7684\u8f93\u51fa\u3002\uff08\u767d\u8272\u5c42\u7528\u4e8e\u53d8\u6362\u901a\u9053\u6570\uff0c\u84dd\u8272\u5c42\u7528\u4e8e\u63d0\u53d6\u4fe1\u606f\uff09</p> </li> <li> <p>\u5728Inception\u5757\u4e2d\uff0c\u901a\u5e38\u8c03\u6574\u7684\u8d85\u53c2\u6570\u662f\u6bcf\u6761\u7ebf\u8def\u7684\u8f93\u51fa\u901a\u9053\u6570\u3002</p> </li> <li> <p>\u4e0e\u53553 x 3\u62165 x 5\u5377\u79ef\u5c42\u6bd4\uff0cInception\u5757\u6709\u66f4\u5c11\u7684\u53c2\u6570\u4e2a\u6570\u548c\u8ba1\u7b97\u590d\u6742\u5ea6</p> </li> </ul> <p></p> <p>Inception\u4e4b\u540e\u6709\u5404\u79cd\u53d8\u79cd\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u7684\u662f\u521d\u59cb\u7248\u672c\u3002</p>"},{"location":"DeepLearning/Modern%20CNN/#42-googlenet","title":"4.2 GoogLeNet","text":"<ul> <li>GoogLeNet\u4e00\u5171\u4f7f\u75289\u4e2aInception\u5757\u548c\u5168\u5c40\u5e73\u5747\u6c47\u805a\u5c42\u7684\u5806\u53e0\u6765\u751f\u6210\u5176\u4f30\u8ba1\u503c\uff0c\u662f\u7b2c\u4e00\u4e2a\u8fbe\u5230\u4e0a\u767e\u5c42\u7684\u7f51\u7edc\u3002</li> <li>Inception\u5757\u4e4b\u95f4\u7684\u6700\u5927\u6c47\u805a\u5c42\u53ef\u964d\u4f4e\u7ef4\u5ea6</li> </ul> <p>\u6bb51 &amp; 2\uff1a</p> <p></p> <p>GoogLeNet \u964d\u5bbd\u66f4\u4e3a\u7f13\u548c\u3002</p> <p>\u6bb53\uff1a</p> <p></p> <p>\u6bb54&amp;5\uff1a</p> <p></p>"},{"location":"DeepLearning/Modern%20CNN/#43-inception-v3","title":"4.3 Inception V3","text":""},{"location":"DeepLearning/Modern%20CNN/#44","title":"4.4 \u5b9e\u73b0","text":"<p>\u5b9e\u73b0\u89c1\u7f51\u7ad9\uff0c\u6ca1\u6709\u4ec0\u4e48\u597d\u8bb2\u7684\uff0c\u5c31\u6839\u636e\u6a21\u578b\u6765\u3002</p>"},{"location":"DeepLearning/Modern%20CNN/#5","title":"5. \u6279\u91cf\u5f52\u4e00\u5316","text":"<p>\u6570\u636e\u4ece\u6700\u5e95\u5c42\u5f80\u4e0a\u4f20\u9012\uff08\u6b63\u5411\uff09\uff0c\u800c\u68af\u5ea6\u4ece\u6700\u9876\u5c42\u5f80\u4e0b\u7b97\uff08\u53cd\u5411\u4f20\u8f93\uff09\uff0c\u6743\u91cd\u4ece\u9876\u81f3\u4e0b\u66f4\u65b0\uff0c\u68af\u5ea6\u5f80\u4e0b\u4f20\u8f93\u65f6\u8d8a\u6765\u8d8a\u5c0f\uff0c\u6240\u4ee5\u4e0b\u9762\u6536\u655b\u66f4\u6162\u3002\u800c\u5f53\u5e95\u90e8\u5c42\u53d8\u5316\uff0c\u6240\u6709\u5c42\u90fd\u8981\u8ddf\u7740\u53d8\u5316\uff0c\u5bfc\u81f4\u6536\u655b\u53d8\u6162</p> <p>\u4e3a\u907f\u514d\u5728\u5b66\u4e60\u5e95\u90e8\u5c42\u65f6\u907f\u514d\u9876\u90e8\u5c42\u53d8\u5316\uff0c\u6211\u4eec\u8fd0\u7528 \u6279\u91cf\u5f52\u4e00\u5316 \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u5c06\u8f93\u5165\u7684\u5c0f\u6279\u91cf\u6837\u672c\u91cc\u7684\u5747\u503c\u548c\u65b9\u5dee\u6c42\u51fa\u6765\uff08\u5728\u65b9\u5dee\u4f30\u8ba1\u503c\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5c0f\u7684\u5e38\u91cf \\(\\epsilon &gt; 0\\)\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u5c1d\u8bd5\u9664\u4ee5\u96f6\uff09\uff1a</p> <p></p> <p>\u5e94\u7528\u6807\u51c6\u5316\uff0c\u4f7f\u5f97\u751f\u6210\u7684\u5c0f\u6279\u91cf\u8f93\u51fa\u7684\u5e73\u5747\u503c\u4e3a0\u548c\u5355\u4f4d\u65b9\u5dee\u4e3a1\uff1a</p> <p></p> <p>\\(\\gamma,\\beta\\)\u662f\u9700\u8981\u548c\u5176\u5b83\u6a21\u578b\u53c2\u6570\u4e00\u8d77\u5b66\u4e60\u7684\u53c2\u6570\uff0c\u5206\u522b\u53eb\u505a\u62c9\u4f38\u53c2\u6570scale\u548c\u504f\u79fb\u53c2\u6570shift\u3002</p> <p>\u8fd9\u52a0\u5feb\u4e86\u6536\u655b\u901f\u5ea6\uff0c\u4f46\u4e00\u822c\u4e0d\u6539\u53d8\u6a21\u578b\u7cbe\u5ea6\u3002</p>"},{"location":"DeepLearning/Modern%20CNN/#51","title":"5.1 \u6279\u91cf\u5f52\u4e00\u5316\u5c42","text":"<p>\u6279\u91cf\u5f52\u4e00\u5316\u662f\u8d77\u4e00\u4e2a\u7ebf\u6027\u4f5c\u7528\u3002</p> <ul> <li>\u8be5\u5c42\u4e2d\u53ef\u5b66\u4e60\u7684\u53c2\u6570\u4e3a \\(\\gamma\\) \u548c \\(\\beta\\)</li> <li>\u5b83\u76f4\u63a5\u4f5c\u7528\u5728\u5168\u8fde\u63a5\u5c42\u548c\u5377\u79ef\u5c42\u8f93\u51fa\u4e0a\uff0c\u6fc0\u6d3b\u51fd\u6570\u8fde\u5728\u5b83\u540e\u9762</li> <li>\u4f5c\u7528\u5728\u5168\u8fde\u63a5\u5c42\u548c\u5377\u79ef\u5c42\u8f93\u5165\u4e0a</li> <li>\u5bf9\u4e8e\u5168\u8fde\u63a5\u5c42\uff0c\u4f5c\u7528\u5728\u7279\u5f81\u7ef4\uff1b\u628a\u6bcf\u4e00\u4e2a\u7279\u5f81\u5bf9\u5e94\u7684\u5217\u8bbe\u5747\u503c\u548c\u65b9\u5dee</li> <li>\u5bf9\u4e8e\u5377\u79ef\u5c42\uff0c\u4f5c\u7528\u5728\u901a\u9053\u7ef4\uff1b\u5047\u8bbe\u4e00\u4e2a\u50cf\u7d20\u901a\u9053\u4e3a100\u7ef4\uff0c\u90a3\u4e48\u8fd9100\u7ef4\u7684\u5411\u91cf\u5c31\u662f\u8fd9\u4e2a\u50cf\u7d20\u7684\u7279\u5f81\uff0c\u6bcf\u4e2a\u50cf\u7d20\u770b\u4f5c\u4e00\u4e2a\u6837\u672c\u3002</li> </ul> <p>\u6279\u91cf\u5f52\u4e00\u5316\u662f\u5728\u505a\u4ec0\u4e48\uff1f</p> <ul> <li>\u901a\u8fc7\u5728\u6bcf\u4e2a\u5c0f\u6279\u91cf\u91cc\u52a0\u5165\u566a\u97f3\u6765\u63a7\u5236\u6a21\u578b\u590d\u6742\u5ea6\uff0c\\(\\sigma_B\\) \u548c \\(\\mu_B\\) \u662f\u968f\u673a\u9009\u53d6\u7684\u5c0f\u6279\u91cf\u6837\u672c\u7684\u65b9\u5dee\u548c\u5747\u503c\uff0c\u53ef\u770b\u4f5c\u566a\u97f3\uff1a</li> </ul> <p></p>"},{"location":"DeepLearning/Modern%20CNN/#52","title":"5.2 \u5b9e\u73b0","text":"<p>\u6570\u636e\u8ba1\u7b97\uff1a</p> <pre><code>import torch\nfrom torch import nn\nfrom d2l import torch as d2l\n\ndef batch_norm(X, gamma, beta, moving_mean, moving_var, eps, momentum):\n    # \u901a\u8fc7is_grad_enabled\u6765\u5224\u65ad\u5f53\u524d\u6a21\u5f0f\u662f\u8bad\u7ec3\u6a21\u5f0f\u8fd8\u662f\u9884\u6d4b\u6a21\u5f0f\n    if not torch.is_grad_enabled():\n        # \u5982\u679c\u662f\u5728\u9884\u6d4b\u6a21\u5f0f\u4e0b\uff0c\u76f4\u63a5\u4f7f\u7528\u4f20\u5165\u7684\u79fb\u52a8\u5e73\u5747\u6240\u5f97\u7684\u5747\u503c\u548c\u65b9\u5dee\n        X_hat = (X - moving_mean) / torch.sqrt(moving_var + eps)\n    else:\n        #2\u7ef4\u662f\u5168\u8fde\u63a5\u5c42 4\u7ef4\u662f\u5377\u79ef\u5c42\n        assert len(X.shape) in (2, 4)\n        if len(X.shape) == 2:\n            # \u4f7f\u7528\u5168\u8fde\u63a5\u5c42\u7684\u60c5\u51b5\uff0c\u8ba1\u7b97\u7279\u5f81\u7ef4\u4e0a\u7684\u5747\u503c\u548c\u65b9\u5dee\n            mean = X.mean(dim=0)\n            var = ((X - mean) ** 2).mean(dim=0)\n        else:\n            # \u4f7f\u7528\u4e8c\u7ef4\u5377\u79ef\u5c42\u7684\u60c5\u51b5\uff0c\u8ba1\u7b97\u901a\u9053\u7ef4\u4e0a\uff08axis=1\uff09\u7684\u5747\u503c\u548c\u65b9\u5dee\u3002\n            # \u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4fdd\u6301X\u7684\u5f62\u72b6\u4ee5\u4fbf\u540e\u9762\u53ef\u4ee5\u505a\u5e7f\u64ad\u8fd0\u7b97\n            mean = X.mean(dim=(0, 2, 3), keepdim=True)\n            var = ((X - mean) ** 2).mean(dim=(0, 2, 3), keepdim=True)\n        # \u8bad\u7ec3\u6a21\u5f0f\u4e0b\uff0c\u7528\u5f53\u524d\u7684\u5747\u503c\u548c\u65b9\u5dee\u505a\u6807\u51c6\u5316\n        X_hat = (X - mean) / torch.sqrt(var + eps)\n        # \u66f4\u65b0\u79fb\u52a8\u5e73\u5747\u7684\u5747\u503c\u548c\u65b9\u5dee momentum\u4e00\u822c\u4e3a0.9\n        moving_mean = momentum * moving_mean + (1.0 - momentum) * mean\n        moving_var = momentum * moving_var + (1.0 - momentum) * var\n    Y = gamma * X_hat + beta  # \u7f29\u653e\u548c\u79fb\u4f4d\n    return Y, moving_mean.data, moving_var.data\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2a\u6b63\u786e\u7684 <code>BatchNorm</code> \u56fe\u5c42\uff1a</p> <pre><code>class BatchNorm(nn.Module):\n    # num_features\uff1a\u5b8c\u5168\u8fde\u63a5\u5c42\u7684\u8f93\u51fa\u6570\u91cf\u6216\u5377\u79ef\u5c42\u7684\u8f93\u51fa\u901a\u9053\u6570\u3002\n    # num_dims\uff1a2\u8868\u793a\u5b8c\u5168\u8fde\u63a5\u5c42\uff0c4\u8868\u793a\u5377\u79ef\u5c42\n    def __init__(self, num_features, num_dims):\n        super().__init__()\n        if num_dims == 2:\n            shape = (1, num_features)\n        else:\n            shape = (1, num_features, 1, 1)\n        # \u53c2\u4e0e\u6c42\u68af\u5ea6\u548c\u8fed\u4ee3\u7684\u62c9\u4f38\u548c\u504f\u79fb\u53c2\u6570\uff0c\u5206\u522b\u521d\u59cb\u5316\u62101\u548c0\n        self.gamma = nn.Parameter(torch.ones(shape))\n        self.beta = nn.Parameter(torch.zeros(shape))\n        # \u975e\u6a21\u578b\u53c2\u6570\u7684\u53d8\u91cf\u521d\u59cb\u5316\u4e3a0\u548c1\n        self.moving_mean = torch.zeros(shape)\n        self.moving_var = torch.ones(shape)\n\n    def forward(self, X):\n        # \u5982\u679cX\u4e0d\u5728\u5185\u5b58\u4e0a\uff0c\u5c06moving_mean\u548cmoving_var\n        # \u590d\u5236\u5230X\u6240\u5728\u663e\u5b58\u4e0a\n        if self.moving_mean.device != X.device:\n            self.moving_mean = self.moving_mean.to(X.device)\n            self.moving_var = self.moving_var.to(X.device)\n        # \u4fdd\u5b58\u66f4\u65b0\u8fc7\u7684moving_mean\u548cmoving_var\n        Y, self.moving_mean, self.moving_var = batch_norm(\n            X, self.gamma, self.beta, self.moving_mean,\n            self.moving_var, eps=1e-5, momentum=0.9)\n        return Y\n</code></pre> <p>\u9664\u4e86\u4f7f\u7528\u6211\u4eec\u521a\u521a\u5b9a\u4e49\u7684<code>BatchNorm</code>\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u4e2d\u5b9a\u4e49\u7684<code>BatchNorm</code>\uff1a</p> <pre><code>net = nn.Sequential(\n    nn.Conv2d(1, 6, kernel_size=5), nn.BatchNorm2d(6), nn.Sigmoid(),\n    nn.AvgPool2d(kernel_size=2, stride=2),\n    nn.Conv2d(6, 16, kernel_size=5), nn.BatchNorm2d(16), nn.Sigmoid(),\n    nn.AvgPool2d(kernel_size=2, stride=2), nn.Flatten(),\n    nn.Linear(256, 120), nn.BatchNorm1d(120), nn.Sigmoid(),\n    nn.Linear(120, 84), nn.BatchNorm1d(84), nn.Sigmoid(),\n    nn.Linear(84, 10))\n</code></pre> <p>\u901a\u5e38\u9ad8\u7ea7API\u53d8\u4f53\u8fd0\u884c\u901f\u5ea6\u5feb\u5f97\u591a\uff0c\u56e0\u4e3a\u5b83\u7684\u4ee3\u7801\u5df2\u7f16\u8bd1\u4e3aC++\u6216CUDA\uff0c\u800c\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u4ee3\u7801\u7531Python\u5b9e\u73b0\u3002</p>"},{"location":"DeepLearning/Modern%20CNN/#6-resnet","title":"6. ResNet","text":"<p>\u200b   \u5047\u8bbe \\(f^*\\) \u662f\u6700\u4f73\u8bad\u7ec3\u51fd\u6570\uff0c\\(F\\) \u662f\u4e00\u7c7b\u7279\u5b9a\u7684\u795e\u7ecf\u7f51\u7edc\u67b6\u6784\u3002\u5982\u679c \\(f^* \\in F\\)\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u5f97\u5230\u6700\u4f73\u9009\u62e9\u3002\u4f46\u5927\u591a\u6570\u65f6\u5019 \\(f^*\\) \u4e0d\u5728\u67b6\u6784\u4e2d\uff0c\u8fd9\u65f6\u6211\u4eec\u901a\u8fc7\u6784\u9020\u4e00\u4e2a\u66f4\u5f3a\u5927\u7684 \\(F\\) \u67b6\u6784\uff0c\u4f7f\u5176\u66f4\u63a5\u8fd1\u6700\u4f18\u89e3 \\(f^*\\)\u3002</p> <ul> <li>\u5728\u9762\u5bf9\u975e\u5d4c\u5957\u51fd\u6570 non-nested function \u65f6\uff0c\u67b6\u6784\u66f4\u590d\u6742\u53cd\u800c\u53ef\u80fd\u8fdc\u79bb\u6700\u4f18\u89e3\u3002\u4f8b\u5982 \\(F_6\\) \u8f83 \\(F_3\\) \u66f4\u52a0\u590d\u6742\uff0c\u5374\u79bb\u6700\u4f18\u89e3\u66f4\u8fdc\u3002</li> <li>nested-function\u5219\u6ca1\u6709\u8fd9\u79cd\u70e6\u607c\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u6a21\u578b\u90fd\u5305\u542b\u4e86\u524d\u9762\u7684\u6a21\u578b\u3002</li> </ul> <p></p>"},{"location":"DeepLearning/Modern%20CNN/#61","title":"6.1 \u6b8b\u5dee\u5757","text":"<p>\u200b   \u7531\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6784\u9020 nested-function\u3002</p> <p></p> <p>\u200b   \u5f53 \\(f(x)\\) \u65e0\u6548\u65f6\uff0c\u8f93\u51fa\u5c31\u662f\u8f93\u5165 x\uff08\u4e5f\u5c31\u662f\u66f4\u5c0f\u67b6\u6784\u7684\u8f93\u51fa\uff09\u3002\u8fd9\u4f7f\u5f97\u5f88\u6df1\u7684\u7f51\u7edc\u66f4\u52a0\u5bb9\u6613\u8bad\u7ec3\u3002</p> <p>\u200b   \u5728ResNet\u4e2d\uff0c\u6b8b\u5dee\u5757\u7ed3\u6784\u4e3a\uff1a</p> <p></p> <p>\u200b   \u5f53<code>use_1x1conv=False</code>\u65f6\uff0c\u5e94\u7528ReLU\u975e\u7ebf\u6027\u51fd\u6570\u4e4b\u524d\uff0c\u5c06\u8f93\u5165\u6dfb\u52a0\u5230\u8f93\u51fa\u3002 \u53e6\u4e00\u79cd\u662f\u5f53<code>use_1x1conv=True</code>\u65f6\uff0c\u6dfb\u52a0\u901a\u8fc71\u00d71\u5377\u79ef\u8c03\u6574\u901a\u9053\u548c\u5206\u8fa8\u7387\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>import torch\nfrom torch import nn\nfrom torch.nn import functional as F\nfrom d2l import torch as d2l\n\n\nclass Residual(nn.Module):  #@save\n    def __init__(self, input_channels, num_channels,\n                 use_1x1conv=False, strides=1):\n        super().__init__()\n        #\u5b9a\u4e49\u7b2c\u4e00\u4e2a3 x 3\u5377\u79ef\u5c42\n        self.conv1 = nn.Conv2d(input_channels, num_channels,\n                               kernel_size=3, padding=1, stride=strides)\n        #\u7b2c\u4e8c\u4e2a\n        self.conv2 = nn.Conv2d(num_channels, num_channels,\n                               kernel_size=3, padding=1)\n        if use_1x1conv:\n            self.conv3 = nn.Conv2d(input_channels, num_channels,\n                                   kernel_size=1, stride=strides)\n        else:\n            self.conv3 = None\n        #batch_norm\u5c42\n        self.bn1 = nn.BatchNorm2d(num_channels)\n        self.bn2 = nn.BatchNorm2d(num_channels)\n\n    def forward(self, X):\n        Y = F.relu(self.bn1(self.conv1(X)))\n        Y = self.bn2(self.conv2(Y))\n        if self.conv3:\n            X = self.conv3(X)\n        Y += X  #f(x) + x\n        return F.relu(Y)\n</code></pre>"},{"location":"DeepLearning/Modern%20CNN/#62-resnet","title":"6.2 ResNet\u6a21\u578b","text":"<p>\u200b   ResNet\u7684\u524d\u4e24\u5c42\u8ddf\u4e4b\u524d\u4ecb\u7ecd\u7684GoogLeNet\u4e2d\u7684\u4e00\u6837\uff1a \u5728\u8f93\u51fa\u901a\u9053\u6570\u4e3a64\u3001\u6b65\u5e45\u4e3a2\u76847\u00d77\u5377\u79ef\u5c42\u540e\uff0c\u63a5\u6b65\u5e45\u4e3a2\u76843\u00d73\u7684\u6700\u5927\u6c47\u805a\u5c42\u3002 \u4e0d\u540c\u4e4b\u5904\u5728\u4e8eResNet\u6bcf\u4e2a\u5377\u79ef\u5c42\u540e\u589e\u52a0\u4e86\u6279\u91cf\u89c4\u8303\u5316\u5c42\u3002</p> <p>\u200b   GoogLeNet\u5728\u540e\u9762\u63a5\u4e864\u4e2a\u7531Inception\u5757\u7ec4\u6210\u7684\u6a21\u5757\u3002 ResNet\u5219\u4f7f\u75284\u4e2a\u7531\u6b8b\u5dee\u5757\u7ec4\u6210\u7684\u6a21\u5757\uff0c\u6bcf\u4e2a\u6a21\u5757\u4f7f\u7528\u82e5\u5e72\u4e2a\u540c\u6837\u8f93\u51fa\u901a\u9053\u6570\u7684\u6b8b\u5dee\u5757\u3002 </p>"},{"location":"DeepLearning/Modern%20CNN/#63","title":"6.3 \u5b9e\u73b0","text":"<pre><code>#\u521d\u59cb\u5757\nb1 = nn.Sequential(nn.Conv2d(1, 64, kernel_size=7, stride=2, padding=3),\n                   nn.BatchNorm2d(64), nn.ReLU(),\n                   nn.MaxPool2d(kernel_size=3, stride=2, padding=1))\n\ndef resnet_block(input_channels, num_channels, num_residuals,\n                 first_block=False):\n    blk = []\n    for i in range(num_residuals):\n        if i == 0 and not first_block:\n            #\u6bcf\u90e8\u5206\u6b8b\u5dee\u5757\u7684\u7b2c\u4e00\u5757stride=2 \u9ad8\u5bbd\u51cf\u534a\uff1b\u7b2c\u4e00\u90e8\u5206\u6b8b\u5dee\u5757\u9664\u5916\n            blk.append(Residual(input_channels, num_channels,\n                                use_1x1conv=True, strides=2))\n        else:\n            blk.append(Residual(num_channels, num_channels))\n    return blk\n\n#\u63a5\u5165\u6b8b\u5dee\u5757\uff0c\u6bcf\u90e8\u5206num_residuals = 2\nb2 = nn.Sequential(*resnet_block(64, 64, 2, first_block=True))\nb3 = nn.Sequential(*resnet_block(64, 128, 2))\nb4 = nn.Sequential(*resnet_block(128, 256, 2))\nb5 = nn.Sequential(*resnet_block(256, 512, 2))\n\nnet = nn.Sequential(b1, b2, b3, b4, b5,\n                    nn.AdaptiveAvgPool2d((1,1)),\n                    nn.Flatten(), nn.Linear(512, 10))\n</code></pre>"},{"location":"DeepLearning/Modern%20CNN/#64-resnet","title":"6.4 ResNet \u68af\u5ea6\u8ba1\u7b97","text":"<p>\u200b   \u4e3a\u4ec0\u4e48 ResNet \u53ef\u4ee5\u8bbe\u8ba1\u5f97\u5f88\u6df1\u5374\u4e0d\u4f1a\u53d1\u751f\u68af\u5ea6\u6d88\u5931\uff0c\u539f\u56e0\u5982\u4e0b\uff1a $$ y = f(x)\\ w = w - \\eta \\frac{\\partial y}{\\partial w}\\ \u5047\u8bbey\u662f\u5e95\u5c42\u7684\u4e00\u4e2a\u8f93\u51fa\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u5f97\\frac{\\partial y}{\\partial w}\u4e0d\u4f1a\u5f88\u5c0f\\ y\\prime = g(f(x))\u662fy\u7ecf\u8fc7\u6b8b\u5dee\u5757\u4e4b\u540e\u7684\u8f93\u51fa\\ \\frac{\\partial y\\prime}{\\partial w} = \\frac{\\partial y\\prime}{\\partial y} \\frac{\\partial y}{\\partial w} = \\frac{\\partial g(y)}{\\partial y}\\frac{\\partial y}{\\partial w} \\ \u5047\u5982\\frac{\\partial g(y)}{\\partial y}\u5f88\u5c0f\uff0c\u5c31\u4f1a\u4f7f\u5f97\\frac{\\partial y\\prime}{\\partial w}\u53d8\u5c0f\\ y\\prime \\prime = f(x) + g(f(x)) = y + y\\prime\\ \\frac{\\partial y\\prime \\prime}{\\partial w} = \\frac{\\partial y}{\\partial w} + \\frac{\\partial y\\prime}{\\partial w}\\ \u5373\u4f7f \\frac{\\partial y\\prime}{\\partial w}\u5c0f\u4e5f\u6ca1\u4e8b\uff0c\\frac{\\partial y}{\\partial w}\u4f1a\u628a\u7ed3\u679c\u62c9\u56de\u6765 $$ \u6ce8\uff1a\u6b64\u5904 \\(y\\prime\\) \uff0c\\(y\\prime \\prime\\) \u548c \\(y\\) \u4e4b\u95f4\u6ca1\u6709\u6c42\u5bfc\u5173\u7cfb\uff0c\u8868\u793a\u4ece\u4e0b\u5f80\u4e0a\u6b8b\u5dee\u5757\u4e4b\u95f4\u7684\u8f93\u51fa\u3002\u56e0\u4e3aResNet\u6709\u8df3\u8f6c\uff0c\u6240\u4ee5\u76f4\u63a5\u53ef\u4ee5\u83b7\u53d6\u5e95\u5c42\u7684\u68af\u5ea6\u5e76\u4fdd\u8bc1\u5176\u4e0d\u4f1a\u592a\u5c0f\u3002</p>"},{"location":"DeepLearning/Modern%20RNN/","title":"\u73b0\u4ee3\u5faa\u73af\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"DeepLearning/Modern%20RNN/#1-gru","title":"1. \u95e8\u63a7\u5faa\u73af\u5355\u5143GRU","text":"<p>\u200b   \u5728\u5173\u6ce8\u4e00\u4e2a\u5e8f\u5217\u65f6\uff0c\u4e0d\u662f\u6bcf\u4e2a\u89c2\u5bdf\u503c\u90fd\u662f\u540c\u7b49\u91cd\u8981\uff0c\u4e3a\u4e86\u8bb0\u4f4f\u91cd\u8981\u7684\u89c2\u5bdf\u503c\uff0c\u6211\u4eec\u5f15\u5165 \u66f4\u65b0\u95e8 \uff08\u53ef\u4ee5\u5173\u6ce8\u91cd\u8981\u4fe1\u606f\uff09\u548c \u91cd\u7f6e\u95e8\uff08\u53ef\u4ee5\u9057\u5fd8\u4e0d\u91cd\u8981\u7684\u4fe1\u606f\uff09\u3002</p>"},{"location":"DeepLearning/Modern%20RNN/#11","title":"1.1 \u95e8","text":"<p>\\(R_t\\) \u8868\u793aReset gate\uff0c\\(Z_t\\) \u8868\u793aupdate gate \uff0c\u6fc0\u6d3b\u51fd\u6570\u4e3asigmoid\uff0c\u4ee5\u4fdd\u8bc1\u4e24\u4e2a\u95e8\u77e9\u9635\u7684\u5143\u7d20\u503c\u5728(0,1)\u4e4b\u95f4\u3002</p> <p>\u76f8\u8f83\u4e4b\u524d\u7684RNN\u7f51\u7edc\u53c8\u591a\u4e86\u4e00\u4e9b\u6743\u91cd\u53c2\u6570\u3002</p> <p></p>"},{"location":"DeepLearning/Modern%20RNN/#12","title":"1.2 \u5019\u9009\u9690\u72b6\u6001","text":"<p>\\(\\bigodot\\) \u8868\u793a\u5143\u7d20\u70b9\u4e58\uff0c \\(R_t\\) \u4e2d\u5143\u7d20\u4e3a1\u7684\u8bdd\uff0c\u5219 \\(H_{t-1}\\) \u76f8\u5e94\u4f4d\u7f6e\u5143\u7d20\u901a\u8fc7\uff0c\u6062\u590d\u4e4b\u524d\u4ecb\u7ecd\u7684\u666e\u901a\u795e\u7ecf\u7f51\u7edc\uff1b\u4e3a0\u5219\u88ab\u9057\u5fd8\uff0c\u4ee5\u51cf\u5c11\u4ee5\u5f80\u72b6\u6001 \\(H_{t-1}\\) \u7684\u5f71\u54cd\uff0c\u66f4\u591a\u4f9d\u8d56\u8f93\u5165 \\(X_t\\)\u3002\u6fc0\u6d3b\u51fd\u6570\u4e3atanh\uff0c\u4fdd\u8bc1candidate hidden state\u4e2d\u7684\u503c\u4fdd\u6301\u5728\u533a\u95f4(-1,1)\u4e4b\u95f4\u3002</p> <p>\u7531\u4e8e \\(R_t\\) \u7684\u6fc0\u6d3b\u51fd\u6570\u662fsigmoid\uff0c\u5176\u5143\u7d20\u503c\u4ecb\u4e8e(0,1)\u3002</p> <p></p>"},{"location":"DeepLearning/Modern%20RNN/#13","title":"1.3 \u9690\u72b6\u6001","text":"<p>\u7ed3\u5408 \\(Z_t\\) \u7684\u6548\u679c\uff0c\u770b\u65b0\u7684\u9690\u72b6\u6001 \\(H_T \\in \\mathbb{R}^{n\\times h}\\) \u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u6765\u81ea\u65e7\u7684\u72b6\u6001 \\(H_{t-1}\\) \u548c\u65b0\u7684\u5019\u9009\u72b6\u6001\u3002\u5f53\u66f4\u65b0\u95e8\u63a5\u8fd11\u65f6\uff0c\u6a21\u578b\u5c31\u503e\u5411\u4e8e\u53ea\u4fdd\u7559\u65e7\u72b6\u6001\uff0c \u4ece\u800c\u6709\u6548\u5730\u8df3\u8fc7\u4e86\u4f9d\u8d56\u94fe\u6761\u4e2d\u7684\u65f6\u95f4\u6b65t\uff1b\u800c\u5f53\u66f4\u65b0\u95e8\u63a5\u8fd10\u65f6\uff0c\u65b0\u7684\u9690\u72b6\u6001\u5c31\u4f1a\u63a5\u8fd1\u5019\u9009\u9690\u72b6\u6001\u3002</p> <p>\u8fd9\u4e9b\u8bbe\u8ba1\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5904\u7406\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898\uff0c \u5e76\u66f4\u597d\u5730\u6355\u83b7\u65f6\u95f4\u6b65\u8ddd\u79bb\u5f88\u957f\u7684\u5e8f\u5217\u7684\u4f9d\u8d56\u5173\u7cfb\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u6574\u4e2a\u5b50\u5e8f\u5217\u7684\u6240\u6709\u65f6\u95f4\u6b65\u7684\u66f4\u65b0\u95e8\u90fd\u63a5\u8fd1\u4e8e1\uff0c \u5219\u65e0\u8bba\u5e8f\u5217\u7684\u957f\u5ea6\u5982\u4f55\uff0c\u5728\u5e8f\u5217\u8d77\u59cb\u65f6\u95f4\u6b65\u7684\u65e7\u9690\u72b6\u6001\u90fd\u5c06\u5f88\u5bb9\u6613\u4fdd\u7559\u5e76\u4f20\u9012\u5230\u5e8f\u5217\u7ed3\u675f\u3002</p> <p></p> <p>\u5f53 \\(R_t\\) \u548c \\(Z_t\\) \u662f\u51680\u65f6\uff0c\u76f8\u5f53\u4e8e\u56de\u5230\u4e4b\u524d\u7684\u5faa\u73af\u795e\u7ecf\u7f51\u7edc</p> <p>\u603b\u4e4b\uff0c\u95e8\u63a7\u5faa\u73af\u5355\u5143\u5177\u6709\u4ee5\u4e0b\u4e24\u4e2a\u663e\u8457\u7279\u5f81\uff1a</p> <ul> <li>\u91cd\u7f6e\u95e8\u6709\u52a9\u4e8e\u6355\u83b7\u5e8f\u5217\u4e2d\u7684\u77ed\u671f\u4f9d\u8d56\u5173\u7cfb\uff1b</li> <li>\u66f4\u65b0\u95e8\u6709\u52a9\u4e8e\u6355\u83b7\u5e8f\u5217\u4e2d\u7684\u957f\u671f\u4f9d\u8d56\u5173\u7cfb\u3002</li> </ul>"},{"location":"DeepLearning/Modern%20RNN/#14","title":"1.4 \u5b9e\u73b0","text":"<pre><code>import torch\nfrom torch import nn\nfrom d2l import torch as d2l\n\nbatch_size, num_steps = 32, 35\ntrain_iter, vocab = d2l.load_data_time_machine(batch_size, num_steps)\n#\u53c2\u6570\u521d\u59cb\u5316\ndef get_params(vocab_size, num_hiddens, device):\n    num_inputs = num_outputs = vocab_size\n\n    def normal(shape):\n        return torch.randn(size=shape, device=device)*0.01\n\n    def three():\n        return (normal((num_inputs, num_hiddens)),\n                normal((num_hiddens, num_hiddens)),\n                torch.zeros(num_hiddens, device=device))\n\n    W_xz, W_hz, b_z = three()  # \u66f4\u65b0\u95e8\u53c2\u6570\n    W_xr, W_hr, b_r = three()  # \u91cd\u7f6e\u95e8\u53c2\u6570\n    W_xh, W_hh, b_h = three()  # \u5019\u9009\u9690\u72b6\u6001\u53c2\u6570\n    # \u8f93\u51fa\u5c42\u53c2\u6570\n    W_hq = normal((num_hiddens, num_outputs))\n    b_q = torch.zeros(num_outputs, device=device)\n    # \u9644\u52a0\u68af\u5ea6\n    params = [W_xz, W_hz, b_z, W_xr, W_hr, b_r, W_xh, W_hh, b_h, W_hq, b_q]\n    for param in params:\n        param.requires_grad_(True)\n    return params\n#\u5b9a\u4e49\u6a21\u578b\ndef init_gru_state(batch_size, num_hiddens, device):\n    #\u8fd4\u56de\u4e00\u4e2a\u5f62\u72b6\u4e3a\uff08\u6279\u91cf\u5927\u5c0f\uff0c\u9690\u85cf\u5355\u5143\u4e2a\u6570\uff09\u7684\u5f20\u91cf\uff0c\u5f20\u91cf\u7684\u503c\u5168\u90e8\u4e3a\u96f6\u3002\n    return (torch.zeros((batch_size, num_hiddens), device=device), )\n\ndef gru(inputs, state, params):\n    W_xz, W_hz, b_z, W_xr, W_hr, b_r, W_xh, W_hh, b_h, W_hq, b_q = params\n    H, = state\n    outputs = []\n    for X in inputs:\n        #\u66f4\u65b0\u95e8\n        Z = torch.sigmoid((X @ W_xz) + (H @ W_hz) + b_z)\n        #\u9057\u5fd8\u95e8\n        R = torch.sigmoid((X @ W_xr) + (H @ W_hr) + b_r)\n        #\u5019\u9009\u9690\u72b6\u6001\n        H_tilda = torch.tanh((X @ W_xh) + ((R * H) @ W_hh) + b_h)\n        #\u65b0\u7684\u9690\u72b6\u6001\n        H = Z * H + (1 - Z) * H_tilda\n        #\u8f93\u51fa\n        Y = H @ W_hq + b_q\n        outputs.append(Y)\n    return torch.cat(outputs, dim=0), (H,)\n\nvocab_size, num_hiddens, device = len(vocab), 256, d2l.try_gpu()\nnum_epochs, lr = 500, 1\nmodel = d2l.RNNModelScratch(len(vocab), num_hiddens, device, get_params, init_gru_state, gru)\n</code></pre>"},{"location":"DeepLearning/Modern%20RNN/#2-lstm","title":"2. \u957f\u77ed\u671f\u8bb0\u5fc6\u7f51\u7edcLSTM","text":"<p>\u6bd4GRU\u66f4\u52a0\u590d\u6742\u3002</p>"},{"location":"DeepLearning/Modern%20RNN/#21","title":"2.1 \u95e8\u63a7\u8bb0\u5fc6\u5143","text":""},{"location":"DeepLearning/Modern%20RNN/#_2","title":"\u8f93\u5165\u95e8\u3001\u5fd8\u8bb0\u95e8\u548c\u8f93\u51fa\u95e8","text":"<ul> <li>\u8f93\u51fa\u95e8\uff08output gate\uff09\uff1a\u4ece\u5355\u5143\u4e2d\u8f93\u51fa\u6761\u76ee</li> <li>\u8f93\u5165\u95e8\uff08input gate\uff09\uff1a\u51b3\u5b9a\u4f55\u65f6\u5c06\u6570\u636e\u8bfb\u5165\u5355\u5143</li> <li>\u9057\u5fd8\u95e8\uff08forget gate\uff09\uff1a\u91cd\u7f6e\u5355\u5143\u7684\u5185\u5bb9</li> </ul> <p>\u65f6\u95f4\u6b65t\u7684\u95e8\u5b9a\u4e49\u5982\u4e0b\uff1a\u5927\u5c0f\u90fd\u662f \\(n\\times h\\) \uff0c\u4f7f\u7528sigmoid\u6fc0\u6d3b\u51fd\u6570</p> <p></p>"},{"location":"DeepLearning/Modern%20RNN/#_3","title":"\u5019\u9009\u8bb0\u5fc6\u5143","text":""},{"location":"DeepLearning/Modern%20RNN/#_4","title":"\u8bb0\u5fc6\u5355\u5143","text":"<p>\u7528\u4e8e\u63a7\u5236\u63a7\u5236\u8f93\u5165\u548c\u9057\u5fd8\uff0c\u4e0d\u50cfGRU\u90a3\u6837\u53ea\u80fd\u9009\u4e00\u4e2a\uff0c\u7531\u4e8e \\(F_t,I_t\\) \u662f\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u4e24\u4e2a\u90fd\u53ef\u4ee5\u9009\u3002\u5176\u4e2d\u8f93\u5165\u95e8\u63a7\u5236\u91c7\u7528\u591a\u5c11\u65b0\u6570\u636e\uff0c\u9057\u5fd8\u95e8\u63a7\u5236\u4fdd\u7559\u591a\u5c11\u8fc7\u53bb\u7684\u8bb0\u5fc6\u3002</p> <p></p> <p>\u7f13\u89e3\u68af\u5ea6\u6d88\u5931\u95ee\u9898\uff0c \u5e76\u66f4\u597d\u5730\u6355\u83b7\u5e8f\u5217\u4e2d\u7684\u957f\u8ddd\u79bb\u4f9d\u8d56\u5173\u7cfb</p>"},{"location":"DeepLearning/Modern%20RNN/#_5","title":"\u9690\u72b6\u6001","text":"<p>\u53ea\u8981\u8f93\u51fa\u95e8\u63a5\u8fd11\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u6709\u6548\u5730\u5c06\u6240\u6709\u8bb0\u5fc6\u4fe1\u606f\u4f20\u9012\u7ed9\u9884\u6d4b\u90e8\u5206\uff0c \u800c\u5bf9\u4e8e\u8f93\u51fa\u95e8\u63a5\u8fd10\uff0c\u6211\u4eec\u53ea\u4fdd\u7559\u8bb0\u5fc6\u5143\u5185\u7684\u6240\u6709\u4fe1\u606f\uff0c\u800c\u4e0d\u9700\u8981\u66f4\u65b0\u9690\u72b6\u6001\u3002</p> <p></p>"},{"location":"DeepLearning/Modern%20RNN/#22","title":"2.2 \u5b9e\u73b0","text":"<p>\u7c7b\u4f3cGRU\uff0c\u53ea\u662f\u516c\u5f0f\u4e0d\u540c</p>"},{"location":"DeepLearning/Modern%20RNN/#3","title":"3. \u6df1\u5ea6\u5faa\u73af\u795e\u7ecf\u7f51\u7edc","text":"<p>\u201c\u66f4\u6df1\u201d \u3002\u4e2d\u95f4\u9690\u85cf\u5c42\u7684\u503c\u65e2\u5f80\u4e0a\u53c8\u5f80\u53f3\u4f20\u9012\uff1a</p> <p></p> <p>\u5b9e\u73b0\uff1a</p> <pre><code>#\u8bbe\u7f6e\u9690\u85cf\u5c42\u6570\u4e3a2\nvocab_size, num_hiddens, num_layers = len(vocab), 256, 2\nnum_inputs = vocab_size\ndevice = d2l.try_gpu()\nlstm_layer = nn.LSTM(num_inputs, num_hiddens, num_layers)\nmodel = d2l.RNNModel(lstm_layer, len(vocab))\nmodel = model.to(device)\n</code></pre>"},{"location":"DeepLearning/Modern%20RNN/#4","title":"4. \u53cc\u5411\u5faa\u73af\u795e\u7ecf\u7f51\u7edc","text":"<p>\u6587\u672c\u9884\u6d4b\u9700\u8981\u6839\u636e\u4e0a\u4e0b\u6587\u6765\u63a8\u6d4b\uff0c\u65e0\u6cd5\u5229\u7528\u4e0b\u6587\u4f20\u8fbe\u7684\u4fe1\u606f\u7684\u6a21\u578b\u663e\u7136\u662f\u4e0d\u591f\u5b8c\u5584\u7684\u3002</p>"},{"location":"DeepLearning/Modern%20RNN/#rnn","title":"\u53cc\u5411RNN","text":"<p>\u4e00\u6761path\u4ece\u524d\u5f80\u540e\u770b\uff0c\u53e6\u4e00\u6761\u4ece\u540e\u5f80\u524d\u770b\uff0c\u5408\u5e76\u8f93\u51fa\u3002</p> <p>\u4f46\u662f\u53cc\u5411RNN\u975e\u5e38\u4e0d\u9002\u5408\u505a\u63a8\u7406\uff0c\u56e0\u4e3a\u63a8\u7406\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u201c\u540e\u6587\u201d\u3002\u6240\u4ee5\u4e00\u822c\u7528\u6765\u505a\u7279\u5f81\u63d0\u53d6\u3001\u7ffb\u8bd1\u5de5\u4f5c\u3002</p>"},{"location":"DeepLearning/Modern%20RNN/#_6","title":"\u5b9e\u73b0","text":"<pre><code># \u901a\u8fc7\u8bbe\u7f6e\u201cbidirective=True\u201d\u6765\u5b9a\u4e49\u53cc\u5411LSTM\u6a21\u578b\nvocab_size, num_hiddens, num_layers = len(vocab), 256, 2\nnum_inputs = vocab_size\nlstm_layer = nn.LSTM(num_inputs, num_hiddens, num_layers, bidirectional=True)\nmodel = d2l.RNNModel(lstm_layer, len(vocab))\nmodel = model.to(device)\n</code></pre>"},{"location":"DeepLearning/Modern%20RNN/#5","title":"5. \u7f16\u7801\u5668\u4e0e\u89e3\u7801\u5668","text":"<p>CNN \u4e2d\uff0c\u5377\u79ef\u5c42\u7528\u4e8e\u505a\u7279\u5f81\u63d0\u53d6\uff0c\u5168\u8fde\u63a5\u5c42\u7528\u4e8e\u505aSoftmax\u56de\u5f52\u3002\u53ef\u4ee5\u5c06\u5377\u79ef\u5c42\u770b\u4f5c\u7f16\u7801\u5668 -- \u5c06\u8f93\u5165\u7f16\u7a0b\u6210\u4e2d\u95f4\u8868\u8fbe\u5f62\u5f0f\uff0c\u5168\u8fde\u63a5\u5c42\u770b\u4f5c\u89e3\u7801\u5668 -- \u5c06\u4e2d\u95f4\u8868\u793a\u89e3\u7801\u6210\u8f93\u51fa\u3002</p> <p>RNN\u540c\u6837\u4e5f\u53ef\u4ee5\u62bd\u8c61\u8fd9\u4e00\u7ed3\u6784\uff1a\u7f16\u7801\u5668\u5c06\u6587\u672c\u8868\u793a\u6210\u5411\u91cf\uff0c\u89e3\u7801\u5668\u5c06\u5411\u91cf\u89e3\u7801\u6210\u8f93\u51fa\u3002</p> <p>encoder-decoder\u67b6\u6784\uff1a</p> <ul> <li>\u7f16\u7801\u5668\u5904\u7406\u8f93\u5165</li> <li>\u89e3\u7801\u5668\u751f\u6210\u8f93\u51fa</li> </ul> <p>\u4ee3\u7801\u5b9a\u4e49\u63a5\u53e3\uff1a</p> <pre><code>from torch import nn\n\n\n#@save\nclass Encoder(nn.Module):\n    \"\"\"\u7f16\u7801\u5668-\u89e3\u7801\u5668\u67b6\u6784\u7684\u57fa\u672c\u7f16\u7801\u5668\u63a5\u53e3\"\"\"\n    def __init__(self, **kwargs):\n        super(Encoder, self).__init__(**kwargs)\n\n    def forward(self, X, *args):\n        raise NotImplementedError\n\n#@save\nclass Decoder(nn.Module):\n    \"\"\"\u7f16\u7801\u5668-\u89e3\u7801\u5668\u67b6\u6784\u7684\u57fa\u672c\u89e3\u7801\u5668\u63a5\u53e3\"\"\"\n    def __init__(self, **kwargs):\n        super(Decoder, self).__init__(**kwargs)\n\n    def init_state(self, enc_outputs, *args):\n        raise NotImplementedError\n\n    def forward(self, X, state):\n        raise NotImplementedError\n\n#@save\nclass EncoderDecoder(nn.Module):\n    \"\"\"\u7f16\u7801\u5668-\u89e3\u7801\u5668\u67b6\u6784\u7684\u57fa\u7c7b\"\"\"\n    def __init__(self, encoder, decoder, **kwargs):\n        super(EncoderDecoder, self).__init__(**kwargs)\n        self.encoder = encoder\n        self.decoder = decoder\n\n    def forward(self, enc_X, dec_X, *args):\n        enc_outputs = self.encoder(enc_X, *args)\n        dec_state = self.decoder.init_state(enc_outputs, *args)\n        return self.decoder(dec_X, dec_state)\n</code></pre>"},{"location":"DeepLearning/Modern%20RNN/#6-seq2seq","title":"6. Seq2Seq","text":"<p>\u673a\u5668\u7ffb\u8bd1\u5c31\u662f\u4e00\u4e2aseq2seq\u6a21\u578b\u3002</p>"},{"location":"DeepLearning/Modern%20RNN/#_7","title":"\u63a8\u7406\u6a21\u578b","text":"<ul> <li>Encoder\u662f\u4e00\u4e2aRNN\uff0c\u7528\u4e8e\u8bfb\u53d6\u8f93\u5165\uff0c\u53ef\u4ee5\u7528\u53cc\u5411RNN</li> <li>Decoder\u4f7f\u7528\u53e6\u5916\u4e00\u4e2aRNN\u6765\u8f93\u51fa</li> </ul> <p>\u4f20\u53c2\u7ec6\u8282\uff1a</p> <p></p> <ul> <li>\u5c06encoder\u6700\u540e\u65f6\u95f4\u6b65\u7684\u9690\u72b6\u6001\u7528\u4f5cdecoder\u7684\u521d\u59cb\u9690\u72b6\u6001\uff0c\u6240\u4ee5encoder\u4e0d\u9700\u8981\u5168\u8fde\u63a5\u5c42\u6765\u8f93\u51fa\u3002</li> </ul>"},{"location":"DeepLearning/Modern%20RNN/#_8","title":"\u8bad\u7ec3\u6a21\u578b","text":"<p>\u8bad\u7ec3\u65f6\u89e3\u7801\u5668\u8f93\u5165\u4e0d\u4ec5\u662fEncoder\u7684\u9690\u72b6\u6001\uff0c\u540c\u65f6\u8fd8\u8981\u4f7f\u7528\u76ee\u6807\u53e5\u5b50\u4f5c\u4e3a\u8f93\u5165</p>"},{"location":"DeepLearning/Modern%20RNN/#-bleu","title":"\u8bc4\u5224\u751f\u6210\u5e8f\u5217\u597d\u574f -- BLEU","text":"<p>uni-gram\u662f\u4e00\u4e2atoken\uff0c2-gram\u662f\u4e24\u4e2a\u8fde\u7eedtoken\uff0cn-gram\u5c31\u662fn\u4e2a\u8fde\u7eedtoken\u3002\\(P_n\\) \u4e2d\uff0c\u5206\u5b50\u662f\u9884\u6d4b\u5e8f\u5217\u4e2d\u4e0e\u6807\u7b7e\u5e8f\u5217\u5339\u914d\u7684n-gram\u6570\u91cf\uff0c\u5206\u6bcd\u662f\u9884\u6d4b\u5e8f\u5217\u4e2d\u603b\u5171\u7684n-gram\u6570\u91cf\u3002</p> <p>BLEU \u8d8a\u5927\u6548\u679c\u8d8a\u597d\uff1a</p> <p></p>"},{"location":"DeepLearning/Modern%20RNN/#_9","title":"\u5b9e\u73b0","text":"<p>\u2026\u2026</p>"},{"location":"DeepLearning/Modern%20RNN/#7","title":"7.\u675f\u641c\u7d22","text":"<p>\u5728seq2seq\u4e2d\u6211\u4eec\u4f7f\u7528\u4e86\u8d2a\u5fc3\u641c\u7d22\u6765\u9884\u6d4b\u5e8f\u5217 -- \u5c06\u5f53\u524d\u65f6\u523b\u9884\u6d4b\u6982\u7387\u6700\u5927\u7684\u8bcd\u8f93\u51fa\u3002</p> <ul> <li>\u8d2a\u5fc3\u89e3\u6709\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u89e3\uff08\u867d\u7136\u6548\u7387\u5f88\u9ad8\uff09\u3002</li> <li>\u7a77\u4e3e\u641c\u7d22\u8ba1\u7b97\u91cf\u53c8\u592a\u5927\u3002</li> </ul> <p>\u6240\u4ee5\uff0c \u5229\u7528 bin search \uff1a</p> <p>\u8bbe\u7f6e\u8d85\u53c2\u6570 beam size k\uff0c\u5728\u65f6\u95f4\u6b651\uff0c\u6211\u4eec\u9009\u62e9\u5177\u6709\u6700\u9ad8\u6761\u4ef6\u6982\u7387\u7684k\u4e2a\u8bcd\u5143\u3002 \u8fd9k\u4e2a\u8bcd\u5143\u5c06\u5206\u522b\u662fk\u4e2a\u5019\u9009\u8f93\u51fa\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u8bcd\u5143\u3002\u5728\u968f\u540e\u7684\u6bcf\u4e2a\u65f6\u95f4\u6b65\uff0c\u57fa\u4e8e\u4e0a\u4e00\u65f6\u95f4\u6b65\u7684k\u4e2a\u5019\u9009\u8f93\u51fa\u5e8f\u5217\uff0c\u4ece \\(k|\\Upsilon|\\) \u4e2a\u53ef\u80fd\u7684\u9009\u62e9\u4e2d \u6311\u51fa\u5177\u6709\u6700\u9ad8\u6761\u4ef6\u6982\u7387\u7684k\u4e2a\u5019\u9009\u8f93\u51fa\u5e8f\u5217.</p> <p></p> <p></p> <p>\u5728\u6700\u7ec8\u5019\u9009\u8f93\u51fa\u5e8f\u5217\u96c6\u5408\u4e2d\u9009\u62e9\u5176\u4e2d\u6761\u4ef6\u6982\u7387\u4e58\u79ef\u6700\u9ad8\u7684\u5e8f\u5217\u4f5c\u4e3a\u8f93\u51fa\u5e8f\u5217\uff08\u901a\u5e38 \\(\\alpha = 0.75\\)\uff09\uff1a</p> <p></p> <p>\u8be5\u9009\u62e9\u516c\u5f0f\u4f7f\u5f97\u7ed3\u679c\u4e0d\u504f\u5411\u77ed\u53e5\u5b50\u3002</p>"},{"location":"DeepLearning/Recurrent%20neural%20network/","title":"Recurrent neural network","text":"<p>\u200b   CNN\u7528\u4e8e\u89e3\u51b3\u7a7a\u95f4\u6027\u6570\u636e\uff08\u56fe\u7247\uff09\uff0c\u800cRNN\u7528\u4e8e\u89e3\u51b3\u65f6\u95f4\u6027\u6570\u636e\uff08\u6587\u672c\u3001\u89c6\u9891\uff09\u3002</p>"},{"location":"DeepLearning/Recurrent%20neural%20network/#1","title":"1. \u5e8f\u5217\u6a21\u578b","text":"<p>\u200b   \u5f88\u591a\u6570\u636e\u662f\u6709\u65f6\u5e8f\u53d8\u5316\u7684\uff0c\u4f8b\u5982\u7535\u5f71\u7684\u8bc4\u4ef7\u968f\u65f6\u95f4\u53d8\u5316\u800c\u53d8\u5316\u3002</p> <p>\u200b   \u5728\u65f6\u95f4t\u89c2\u5bdf\u5230 \\(x_t\\)\uff0c\u90a3\u4e48\u5f97\u5230 \\(T\\) \u4e2a\u4e0d\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\uff1a $$ (x_1,...x_T)\\textasciitilde p(x) $$ \u200b   \u4f7f\u7528\u6761\u4ef6\u6982\u7387\u5c55\u5f00\uff1a\u4e0a\u9762\u662f\u6b63\u5e8f\uff0c\u4e0b\u65b9\u4e3a\u53cd\u5e8f\uff08\u4f46\u4e00\u822c\u672a\u6765\u4e8b\u4ef6\u662f\u57fa\u4e8e\u524d\u9762\u53d1\u751f\u4e8b\u4ef6\u63a8\u6d4b\uff0c\u6240\u4ee5\u6839\u636e\u672a\u6765\u4e8b\u4ef6\u63a8\u524d\u9762\u4e8b\u4ef6\u6709\u70b9\u4e0d\u7b26\u5408\u7269\u7406\u89c4\u5f8b\uff09</p> <p></p>"},{"location":"DeepLearning/Recurrent%20neural%20network/#11","title":"1.1 \u81ea\u56de\u5f52\u6a21\u578b","text":"<p>\u200b   \u5bf9\u89c1\u8fc7\u7684\u6570\u636e\u5efa\u6a21\uff0c\u4e5f\u79f0\u81ea\u56de\u5f52\u6a21\u578b(\u81ea\u5df1\u9884\u6d4b\u81ea\u5df1)\uff0c\u5982\u4e0b\u9762\u516c\u5f0f\u4e2d\u7684\\(f\\) $$ p(x_t|x_1,...x_{t-1}) = p(x_t|f(x_1,...x_{t-1})) $$</p>"},{"location":"DeepLearning/Recurrent%20neural%20network/#a","title":"A. \u9a6c\u5c14\u79d1\u592b\u5047\u8bbe","text":"<p>\u5047\u8bbe\u5f53\u524d\u6570\u636e\u53ea\u8ddf \\(\\tau\\) \u4e2a\u8fc7\u53bb\u6570\u636e\u70b9\u76f8\u5173</p> <p></p> <p>\u53ef\u5c06\u8fc7\u53bb\u6570\u636e\u70b9\u770b\u4f5c\u4e00\u4e2a \\(\\tau\\) \u957f\u7684\u5411\u91cf\uff0c\u7528\u5176\u9884\u6d4b\u4e00\u4e2a\u6807\u91cf\uff0c\u53ef\u4ee5\u7528MLP\u505a\u5230\u3002</p>"},{"location":"DeepLearning/Recurrent%20neural%20network/#b","title":"B. \u6f5c\u53d8\u91cf\u6a21\u578b","text":"<p>\u5f15\u5165\u6f5c\u53d8\u91cf \\(h_t\\) \u6765\u8868\u793a\u8fc7\u53bb\u7684\u4fe1\u606f \\(h_t = f(x_1,...x_{t-1})\\) $$ x_t = p(x_t|h_t) $$ </p> <p>\u6f5c\u53d8\u91cf\u4e5f\u4e00\u76f4\u5728\u66f4\u65b0\u3002\u6240\u4ee5\u6709\u4e24\u4e2a\u6a21\u578b\uff0c\u6bcf\u4e2a\u6a21\u578b\u53ea\u4e0e\u4e24\u4e2a\u53d8\u91cf\u76f8\u5173\u3002</p>"},{"location":"DeepLearning/Recurrent%20neural%20network/#12","title":"1.2 \u5b9e\u73b0\u9a6c\u5c14\u79d1\u592b\u6a21\u578b","text":"<pre><code>tau = 4\n#T-4 \u4e2a 4\u7ef4\u7684\u5411\u91cf\nfeatures = torch.zeros((T - tau, tau))\nfor i in range(tau):\n    features[:, i] = x[i: T - tau + i]\n#\u6807\u7b7e yi = xi\nlabels = x[tau:].reshape((-1, 1))\n\nbatch_size, n_train = 16, 600\n# \u53ea\u6709\u524dn_train\u4e2a\u6837\u672c\u7528\u4e8e\u8bad\u7ec3\ntrain_iter = d2l.load_array((features[:n_train], labels[:n_train]),\n                            batch_size, is_train=True)\n\n# \u521d\u59cb\u5316\u7f51\u7edc\u6743\u91cd\u7684\u51fd\u6570\ndef init_weights(m):\n    if type(m) == nn.Linear:\n        nn.init.xavier_uniform_(m.weight)\n\n# \u4e00\u4e2a\u7b80\u5355\u7684\u591a\u5c42\u611f\u77e5\u673a\ndef get_net():\n    net = nn.Sequential(nn.Linear(4, 10),\n                        nn.ReLU(),\n                        nn.Linear(10, 1))\n    net.apply(init_weights)\n    return net\n\n# \u5e73\u65b9\u635f\u5931\u3002\u6ce8\u610f\uff1aMSELoss\u8ba1\u7b97\u5e73\u65b9\u8bef\u5dee\u65f6\u4e0d\u5e26\u7cfb\u65701/2\nloss = nn.MSELoss(reduction='none')\n\ndef train(net, train_iter, loss, epochs, lr):\n    trainer = torch.optim.Adam(net.parameters(), lr)\n    for epoch in range(epochs):\n        for X, y in train_iter:\n            trainer.zero_grad()\n            l = loss(net(X), y)\n            l.sum().backward()\n            trainer.step()\n        print(f'epoch {epoch + 1}, '\n              f'loss: {d2l.evaluate_loss(net, train_iter, loss):f}')\n\nnet = get_net()\ntrain(net, train_iter, loss, 5, 0.01)\n</code></pre> <p>\u9884\u6d4b\uff1a</p> <p></p> <p>one-step-ahead prediction \u662f\u7ed9\u5b9a \\(\\tau\\) \u4e2a\u6570\u636e\uff0c\u9884\u6d4b\u4e0b\u4e00\u4e2a\uff1b k-step-ahead-prediction \u662f\u7ed9\u5b9a \\(\\tau\\) \u4e2a\u6570\u636e\uff0c\u9884\u6d4b\u4e0bk\u4e2a\u6570\u636e\uff0c\u5728\u9884\u6d4b\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u81ea\u5df1\u9884\u6d4b\u7684\u6570\u636e\u4f5c\u4e3a\u8f93\u5165\uff0c\u5bfc\u81f4\u8bef\u5dee\u79ef\u7d2f\uff0c\u4ece\u800c\u4e0d\u90a3\u4e48\u51c6\u786e\u3002</p> <p></p>"},{"location":"DeepLearning/Recurrent%20neural%20network/#2","title":"2. \u6587\u672c\u9884\u5904\u7406","text":""},{"location":"DeepLearning/Recurrent%20neural%20network/#21","title":"2.1 \u52a0\u8f7d\u6587\u672c","text":"<p>\u200b   \u5c06\u6587\u672c\u4f5c\u4e3a\u5b57\u7b26\u4e32\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5ffd\u7565\u6807\u70b9\u7b26\u53f7\u548c\u5b57\u6bcd\u5927\u5199\uff08\u4e0b\u9762\u4ee3\u7801\u8f83\u4e3a\u7b80\u5355\u3001\u66b4\u529b\uff09\u3002</p> <pre><code>#@save\nd2l.DATA_HUB['time_machine'] = (d2l.DATA_URL + 'timemachine.txt',\n                                '090b5e7e70c295757f55df93cb0a180b9691891a')\n\ndef read_time_machine():  #@save\n    \"\"\"\u5c06\u65f6\u95f4\u673a\u5668\u6570\u636e\u96c6\u52a0\u8f7d\u5230\u6587\u672c\u884c\u7684\u5217\u8868\u4e2d\"\"\"\n    with open(d2l.download('time_machine'), 'r') as f:\n        lines = f.readlines()\n    return [re.sub('[^A-Za-z]+', ' ', line).strip().lower() for line in lines]\n\nlines = read_time_machine()\nprint(f'# \u6587\u672c\u603b\u884c\u6570: {len(lines)}')\nprint(lines[0])\nprint(lines[10])\n</code></pre>"},{"location":"DeepLearning/Recurrent%20neural%20network/#22","title":"2.2 \u8bcd\u5143\u5316","text":"<p>\u4e0b\u9762\u7684<code>tokenize</code>\u51fd\u6570\u5c06\u6587\u672c\u884c\u5217\u8868\uff08<code>lines</code>\uff09\u4f5c\u4e3a\u8f93\u5165\uff0c \u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u6587\u672c\u5e8f\u5217\uff08\u5982\u4e00\u6761\u6587\u672c\u884c\uff09\u3002 \u6bcf\u4e2a\u6587\u672c\u5e8f\u5217\u53c8\u88ab\u62c6\u5206\u6210\u4e00\u4e2a\u8bcd\u5143\u5217\u8868\uff0c\u8bcd\u5143\uff08token\uff09\u662f\u6587\u672c\u7684\u57fa\u672c\u5355\u4f4d\u3002 \u6700\u540e\uff0c\u8fd4\u56de\u4e00\u4e2a\u7531\u8bcd\u5143\u5217\u8868\u7ec4\u6210\u7684\u5217\u8868\uff0c\u5176\u4e2d\u7684\u6bcf\u4e2a\u8bcd\u5143\u90fd\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08string\uff09</p> <p>\u4e0d\u8fc7\uff0c\u4e2d\u6587\u5206\u8bcd\u662f\u4e00\u4e2a\u5927\u5de5\u7a0b\uff0c\u6bd4\u82f1\u6587\u5206\u8bcd\u66f4\u96be\u3002</p> <pre><code>def tokenize(lines, token='word'):  #@save\n    \"\"\"\u5c06\u6587\u672c\u884c\u62c6\u5206\u4e3a\u5355\u8bcd\u6216\u5b57\u7b26\u8bcd\u5143\"\"\"\n    if token == 'word':\n        return [line.split() for line in lines]\n    elif token == 'char':\n        return [list(line) for line in lines]\n    else:\n        print('\u9519\u8bef\uff1a\u672a\u77e5\u8bcd\u5143\u7c7b\u578b\uff1a' + token)\n\ntokens = tokenize(lines)\nfor i in range(11):\n    print(tokens[i])\n</code></pre>"},{"location":"DeepLearning/Recurrent%20neural%20network/#23","title":"2.3 \u8bcd\u8868","text":"<p>\u6784\u5efa\u4e00\u4e2a\u5b57\u5178\uff0c\u901a\u5e38\u4e5f\u53eb\u505a\u8bcd\u8868\uff08vocabulary\uff09\uff0c \u7528\u6765\u5c06string\u7c7b\u578b\u7684\u8bcd\u5143\u6620\u5c04\u5230\u4ece0\u5f00\u59cb\u7684\u6570\u5b57\u7d22\u5f15\u4e2d\u3002</p> <p>\u6211\u4eec\u5148\u5c06\u8bad\u7ec3\u96c6\u4e2d\u7684\u6240\u6709\u6587\u6863\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u5bf9\u5b83\u4eec\u7684\u552f\u4e00\u8bcd\u5143\u8fdb\u884c\u7edf\u8ba1\uff0c \u5f97\u5230\u7684\u7edf\u8ba1\u7ed3\u679c\u79f0\u4e4b\u4e3a\u8bed\u6599\uff08corpus\uff09\u3002 \u7136\u540e\u6839\u636e\u6bcf\u4e2a\u552f\u4e00\u8bcd\u5143\u7684\u51fa\u73b0\u9891\u7387\uff0c\u4e3a\u5176\u5206\u914d\u4e00\u4e2a\u6570\u5b57\u7d22\u5f15\u3002 \u5f88\u5c11\u51fa\u73b0\u7684\u8bcd\u5143\u901a\u5e38\u88ab\u79fb\u9664\uff0c\u8fd9\u53ef\u4ee5\u964d\u4f4e\u590d\u6742\u6027\u3002</p> <p>\u8bed\u6599\u5e93\u4e2d\u4e0d\u5b58\u5728\u6216\u5df2\u5220\u9664\u7684\u4efb\u4f55\u8bcd\u5143\u90fd\u5c06\u6620\u5c04\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u672a\u77e5\u8bcd\u5143\u201c\u201d\u3002 \u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u589e\u52a0\u4e00\u4e2a\u5217\u8868 <code>reserved_tokens</code>\uff0c\u7528\u4e8e\u4fdd\u5b58\u90a3\u4e9b\u88ab\u4fdd\u7559\u7684\u8bcd\u5143\uff0c \u4f8b\u5982\uff1a\u586b\u5145\u8bcd\u5143\uff08\u201c\u201d\uff09\uff1b \u5e8f\u5217\u5f00\u59cb\u8bcd\u5143\uff08\u201c\u201d\uff09\uff1b \u5e8f\u5217\u7ed3\u675f\u8bcd\u5143\uff08\u201c\u201d\uff09\u3002 <pre><code>class Vocab:  #@save\n    \"\"\"\u6587\u672c\u8bcd\u8868\"\"\"\n    def __init__(self, tokens=None, min_freq=0, reserved_tokens=None):\n        if tokens is None:\n            tokens = []\n        if reserved_tokens is None:\n            reserved_tokens = []\n        # \u6309\u51fa\u73b0\u9891\u7387\u6392\u5e8f\n        counter = count_corpus(tokens)\n        self.token_freqs = sorted(counter.items(), key=lambda x: x[1],\n                                   reverse=True)\n        # \u672a\u77e5\u8bcd\u5143\u7684\u7d22\u5f15\u4e3a0\n        self.unk,uniq_tokens = 0, ['&lt;unk&gt;'] + reserved_tokens\n        uniq_tokens += [\n            token for token, freq in self.token_freqs\n            if freq &gt;= min_freq and token not in uniq_tokens\n        ]\n        #\u7d22\u5f15\u4e0etoken\u5efa\u7acb\u8054\u7cfb\n        self.idx_to_token = []\n        self.token_to_idx = dict()\n        for token in uniq_tokens:\n            self.idx_to_token.append(token)\n            self.token_to_idx[token] = len(self.idx_to_token)\n\n    def __len__(self):\n        return len(self.idx_to_token)\n\n    def __getitem__(self, tokens):\n        if not isinstance(tokens, (list, tuple)):\n            return self.token_to_idx.get(tokens, self.unk)\n        return [self.__getitem__(token) for token in tokens]\n\n    def to_tokens(self, indices):\n        if not isinstance(indices, (list, tuple)):\n            return self.idx_to_token[indices]\n        return [self.idx_to_token[index] for index in indices]\n\n    @property\n    def unk(self):  # \u672a\u77e5\u8bcd\u5143\u7684\u7d22\u5f15\u4e3a0\n        return 0\n\n    @property\n    def token_freqs(self):\n        return self._token_freqs\n\ndef count_corpus(tokens):  #@save\n    \"\"\"\u7edf\u8ba1\u8bcd\u5143\u7684\u9891\u7387\"\"\"\n    # \u8fd9\u91cc\u7684tokens\u662f1D\u5217\u8868\u62162D\u5217\u8868\n    if len(tokens) == 0 or isinstance(tokens[0], list):\n        # \u5c06\u8bcd\u5143\u5217\u8868\u5c55\u5e73\u6210\u4e00\u4e2a\u5217\u8868\n        tokens = [token for line in tokens for token in line]\n    return collections.Counter(tokens)\n</code></pre> <p>\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e00\u6761\u6587\u672c\u884c\u8f6c\u6362\u6210\u4e00\u4e2a\u6570\u5b57\u7d22\u5f15\u5217\u8868\u3002</p> <pre><code>for i in [0, 10]:\n    print('\u6587\u672c:', tokens[i])\n    print('\u7d22\u5f15:', vocab[tokens[i]])\n</code></pre> <pre><code>\u6587\u672c: ['the', 'time', 'machine', 'by', 'h', 'g', 'wells']\n\u7d22\u5f15: [1, 19, 50, 40, 2183, 2184, 400]\n\u6587\u672c: ['twinkled', 'and', 'his', 'usually', 'pale', 'face', 'was', 'flushed', 'and', 'animated', 'the']\n\u7d22\u5f15: [2186, 3, 25, 1044, 362, 113, 7, 1421, 3, 1045, 1]\n</code></pre> <p>\u6700\u540e\uff0c\u5c06\u4e0a\u8ff0\u6240\u6709\u529f\u80fd\u6574\u5408\u5230\u4e00\u8d77\u3002</p> <pre><code>def load_corpus_time_machine(max_tokens=-1):  #@save\n    \"\"\"\u8fd4\u56de\u65f6\u5149\u673a\u5668\u6570\u636e\u96c6\u7684\u8bcd\u5143\u7d22\u5f15\u5217\u8868\u548c\u8bcd\u8868\"\"\"\n    lines = read_time_machine()\n    tokens = tokenize(lines, 'char')\n    vocab = Vocab(tokens)\n    # \u56e0\u4e3a\u65f6\u5149\u673a\u5668\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u6587\u672c\u884c\u4e0d\u4e00\u5b9a\u662f\u4e00\u4e2a\u53e5\u5b50\u6216\u4e00\u4e2a\u6bb5\u843d\uff0c\n    # \u6240\u4ee5\u5c06\u6240\u6709\u6587\u672c\u884c\u5c55\u5e73\u5230\u4e00\u4e2a\u5217\u8868\u4e2d\n    corpus = [vocab[token] for line in tokens for token in line]\n    if max_tokens &gt; 0:\n        corpus = corpus[:max_tokens]\n    return corpus, vocab\n\ncorpus, vocab = load_corpus_time_machine()\nlen(corpus), len(vocab)\n#\uff08170580\uff0c28\uff09\n</code></pre>"},{"location":"DeepLearning/Recurrent%20neural%20network/#3","title":"3. \u8bed\u8a00\u6a21\u578b","text":"<ul> <li>\u6982\u5ff5\uff1a\u7ed9\u5b9a\u6587\u672c\u5e8f\u5217 \\(x_1,...,x_T\\)\uff0c\u8bed\u8a00\u6a21\u578b\u7684\u76ee\u6807\u662f\u4f30\u8ba1\u8054\u5408\u6982\u7387 \\(p(x_1,..,x_T)\\).</li> <li>\u9884\u8bad\u7ec3\u6a21\u578b</li> <li>\u751f\u6210\u6587\u672c\u3002\u7ed9\u5b9a\u524d\u9762\u7684\u8bcd\uff0c\u4e0d\u65ad\u4f7f\u7528 \\(x_t \\textasciitilde P(x_t|x_{t-1},...x_1)\\)\uff0c\u4e00\u4e2a\u7406\u60f3\u7684\u8bed\u8a00\u6a21\u578b\u5c31\u80fd\u591f\u57fa\u4e8e\u6a21\u578b\u672c\u8eab\u751f\u6210\u81ea\u7136\u6587\u672c\u3002</li> <li>\u5224\u65ad\u591a\u4e2a\u8bed\u8a00\u5e8f\u5217\u4e2d\u54ea\u4e2a\u66f4\u5e38\u89c1\u3002\u4f8b\u5982\u201c\u4eba\u54ac\u72d7\u201d\u548c\u201c\u72d7\u54ac\u4eba\u201d\uff0c\u663e\u7136\u662f\u540e\u8005\u66f4\u5e38\u89c1</li> </ul>"},{"location":"DeepLearning/Recurrent%20neural%20network/#31","title":"3.1 \u5efa\u6a21","text":"<ul> <li>n\u662f\u603b\u8bcd\u6570corpus(token\u7684\u6570\u91cf)\uff0c\\(n(x),n(x,x')\\) \u662f\u5355\u4e2a\u5355\u8bcd\u548c\u8fde\u7eed\u5355\u8bcd\u7684\u51fa\u73b0\u6b21\u6570</li> </ul>"},{"location":"DeepLearning/Recurrent%20neural%20network/#n","title":"N\u5143\u8bed\u6cd5","text":"<p>\u200b   \u5f53\u6587\u672c\u5e8f\u5217\u5f88\u957f\u65f6\uff0c\u5982\u679c\u6587\u672c\u91cf\u4e0d\u591f\u5927\uff0c\u90a3\u4e48\u6587\u672c\u5e8f\u5217\u51fa\u73b0\u6b21\u6570\u5f88\u53ef\u80fd\u5c0f\u4e8e1.\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u5229\u7528\u9a6c\u5c14\u53ef\u592b\u5047\u8bbe\uff0c\u5176\u4e2dN\u5c31\u662f \\(\\tau\\) \uff1a</p> <p></p> <p>N\u8d8a\u5927\uff0c\u9700\u8981\u5b58\u7684\u4fe1\u606f\u5c31\u8d8a\u591a\uff1a\u6bcf\u4e2a\u957f\u4e3aN\u7684\u5e8f\u5217\u7684\u6982\u7387\u90fd\u8981\u88ab\u5b58\u4e0b\u6765\u3002\u4f46\u4e00\u822c\u4e00\u5143\u8bed\u6cd5\u4e0d\u53ef\u884c\uff0c\u56e0\u4e3a\u4f1a\u5927\u5927\u9ad8\u4f30 \u505c\u7528\u8bcd \u7684\u9891\u7387\u3002</p> <pre><code>import random\nimport torch\nfrom d2l import torch as d2l\n\ntokens = d2l.tokenize(d2l.read_time_machine())\n# \u56e0\u4e3a\u6bcf\u4e2a\u6587\u672c\u884c\u4e0d\u4e00\u5b9a\u662f\u4e00\u4e2a\u53e5\u5b50\u6216\u4e00\u4e2a\u6bb5\u843d\uff0c\u56e0\u6b64\u6211\u4eec\u628a\u6240\u6709\u6587\u672c\u884c\u62fc\u63a5\u5230\u4e00\u8d77\ncorpus = [token for line in tokens for token in line]\nvocab = d2l.Vocab(corpus)\nvocab.token_freqs[:10]\n#freq\u662f\u4e00\u5143\u8bed\u6cd5\u4e2d\u7684\u8bcd\u5143\u9891\u7387\uff0cbigram_freq\u4e8c\u5143\uff0ctrigram_freqs\u4e09\u5143\nbigram_freqs = [freq for token, freq in bigram_vocab.token_freqs]\ntrigram_freqs = [freq for token, freq in trigram_vocab.token_freqs]\nd2l.plot([freqs, bigram_freqs, trigram_freqs], xlabel='token: x',\n         ylabel='frequency: n(x)', xscale='log', yscale='log',\n         legend=['unigram', 'bigram', 'trigram'])\n</code></pre> <p>\u53d1\u73b0\u5355\u8bcd\u5e8f\u5217\u9075\u5faa\u9f50\u666e\u592b\u5b9a\u5f8b\uff0c\u6307\u6570\u5927\u5c0f\u53d7\u5e8f\u5217\u957f\u5ea6\u5f71\u54cd\uff1a</p> <p></p>"},{"location":"DeepLearning/Recurrent%20neural%20network/#32","title":"3.2 \u8bfb\u53d6\u957f\u5e8f\u5217\u6570\u636e","text":"<p>\u200b   \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5e8f\u5217\uff0c\u968f\u673a\u62bd\u53d6\u5176\u4e2d\u4e00\u4e2a\u957f\u4e3a \\(\\tau\\) \u7684\u6587\u672c\u5e8f\u5217\u4f5c\u4e3a\u8f93\u5165X\uff08\u79f0\u4e3a\u968f\u673a\u91c7\u6837\uff09\uff0c\u9884\u6d4b\u4e0b\u4e00\u4e2a\u8bcd\u5143\uff0c\u56e0\u6b64\u8f93\u51fa\u6807\u7b7eY\u662f\u79fb\u4f4d\u4e86\u4e00\u4e2a\u8bcd\u5143\u7684\u539f\u59cb\u5e8f\u5217\u3002\u4e3a\u907f\u514d\u4e00\u4e2a\u6587\u672c\u6570\u636e\u88ab\u4f7f\u7528\u591a\u6b21\uff0c\u5c06\u957f\u5e8f\u5217\u5212\u5206\u4e3a\u76f8\u540c\u957f\u5ea6\u7684\u5b50\u5e8f\u5217\uff0c\u4f5c\u4e3a\u5c0f\u6279\u91cf\u88ab\u8f93\u5165\u5230\u6a21\u578b\u4e2d\u3002\u8bbe\u7f6e\u968f\u673a\u504f\u79fb\u91cfk\uff0c\u4ece\u957f\u5e8f\u5217\u7684\u8bcd\u5143k\u5904\u5f00\u59cb\u5212\u5206\u3002</p> <pre><code>#num_steps\u76f8\u5f53\u4e8etau\ndef seq_data_iter_random(corpus, batch_size, num_steps):  #@save\n    \"\"\"\u4f7f\u7528\u968f\u673a\u62bd\u6837\u751f\u6210\u4e00\u4e2a\u5c0f\u6279\u91cf\u5b50\u5e8f\u5217\"\"\"\n    # \u4ece\u968f\u673a\u504f\u79fb\u91cfrandint(0, num_steps - 1)\u5f00\u59cb\u5bf9\u5e8f\u5217\u8fdb\u884c\u5206\u533a\uff0c\u968f\u673a\u8303\u56f4\u5305\u62ecnum_steps-1\n    corpus = corpus[random.randint(0, num_steps - 1):]\n    # \u51cf\u53bb1\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u8003\u8651\u6807\u7b7e\uff0c\u5b50\u5e8f\u5217\u6570\u91cf\n    num_subseqs = (len(corpus) - 1) // num_steps\n    # \u957f\u5ea6\u4e3anum_steps\u7684\u5b50\u5e8f\u5217\u7684\u8d77\u59cb\u7d22\u5f15\uff0c\u5373\u5728\u957f\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\uff0c\u6bcf\u6b21\u8df3num_steps\u4e2atoken\n    initial_indices = list(range(0, num_subseqs * num_steps, num_steps))\n    # \u6253\u4e71\u5b50\u5e8f\u5217\u987a\u5e8f\n    # \u5728\u968f\u673a\u62bd\u6837\u7684\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\n    # \u6765\u81ea\u4e24\u4e2a\u76f8\u90bb\u7684\u3001\u968f\u673a\u7684\u3001\u5c0f\u6279\u91cf\u4e2d\u7684\u5b50\u5e8f\u5217\u4e0d\u4e00\u5b9a\u5728\u539f\u59cb\u5e8f\u5217\u4e0a\u76f8\u90bb\n    random.shuffle(initial_indices)\n\n    def data(pos):\n        # \u8fd4\u56de\u4ecepos\u4f4d\u7f6e\u5f00\u59cb\u7684\u957f\u5ea6\u4e3anum_steps\u7684\u5e8f\u5217\n        return corpus[pos: pos + num_steps]\n\n    num_batches = num_subseqs // batch_size\n    for i in range(0, batch_size * num_batches, batch_size):\n        # \u5728\u8fd9\u91cc\uff0cinitial_indices\u5305\u542b\u5b50\u5e8f\u5217\u7684\u968f\u673a\u8d77\u59cb\u7d22\u5f15\n        initial_indices_per_batch = initial_indices[i: i + batch_size]\n        X = [data(j) for j in initial_indices_per_batch]\n        Y = [data(j + 1) for j in initial_indices_per_batch]\n        yield torch.tensor(X), torch.tensor(Y)\n</code></pre> <p>\u200b   \u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u9664\u4e86\u5bf9\u539f\u59cb\u5e8f\u5217\u53ef\u4ee5\u968f\u673a\u62bd\u6837\u5916\uff0c \u6211\u4eec\u8fd8\u53ef\u4ee5\u4fdd\u8bc1\u4e24\u4e2a\u76f8\u90bb\u7684\u5c0f\u6279\u91cf\u4e2d\u7684\u5b50\u5e8f\u5217\u5728\u539f\u59cb\u5e8f\u5217\u4e0a\u4e5f\u662f\u76f8\u90bb\u7684\u3002\u79f0\u4e4b\u4e3a \u987a\u5e8f\u5206\u533a \u3002\u6548\u679c\u5982\u4e0b\uff1a</p> <p></p> <p>\u200b   \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6bcf\u4e2a\u6279\u91cf\u4e2d\u7684\u4e24\u4e2a\u5b50\u5e8f\u5217\u5206\u522b\u4e0e\u5176\u5b83\u6279\u91cf\u4e2d\u5bf9\u5e94\u5b50\u5e8f\u5217\u76f8\u90bb\u3002</p>"},{"location":"DeepLearning/Recurrent%20neural%20network/#4-rnn","title":"4. RNN","text":"<p>\u200b   \u5229\u7528\u9690\u53d8\u91cf\uff0c\u8f93\u5165\u201c\u4f60\u201d\uff0c\u9690\u53d8\u91cf\u5e94\u9884\u6d4b\u5230\u201c\u597d\u201d\uff0c\u63a5\u7740\u8f93\u5165\u201c\u597d\u201d\uff0c\u9690\u53d8\u91cf\u9884\u6d4b\u5230\u201c\uff0c\u201d\u2026\u2026</p> <p> </p> <p>RNN\u6a21\u578b\u4e3a\uff1a</p> <p></p> <p>\\(W_{hh}\u662fh_{t-1}\\) \u7684\u6743\u91cd\uff0c\u62e5\u6709\u4e00\u5b9a\u65f6\u5e8f\u7684\u9884\u6d4b\u76ee\u7684\uff1b\\(W_{hx}\\) \u662f \\(x_{t-1}\\) \u7684\u6743\u91cd\uff0c\\(b_h\\) \u662fbias\u3002</p>"},{"location":"DeepLearning/Recurrent%20neural%20network/#41-perplexity","title":"4.1 Perplexity \u56f0\u60d1\u5ea6","text":"<p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u5e8f\u5217\u4e2d\u6240\u6709\u7684n\u4e2a\u8bcd\u5143\u7684\u4ea4\u53c9\u71b5\u635f\u5931\u7684\u5e73\u5747\u503c\u6765\u8861\u91cf\u6a21\u578b\u7684\u8d28\u91cf\uff1a</p> <p></p> <p>\u5176\u4e2d P \u7531\u8bed\u8a00\u6a21\u578b\u7ed9\u51fa\uff0c\\(x_t\\) \u662f\u65f6\u95f4\u6b65 t \u4ece\u8be5\u5e8f\u5217\u4e2d\u89c2\u5bdf\u5230\u7684\u5b9e\u9645\u8bcd\u5143\u3002</p> <p>\u4e0d\u8fc7\u56f0\u60d1\u5ea6\u591a\u53d6\u4e86\u4e00\u4e2a\u6307\u6570\uff1a</p> <p></p> <p>\u56f0\u60d1\u5ea6\u7684\u6700\u597d\u7684\u7406\u89e3\u662f\u201c\u4e0b\u4e00\u4e2a\u8bcd\u5143\u7684\u5b9e\u9645\u9009\u62e9\u6570\u7684\u8c03\u548c\u5e73\u5747\u6570\u201d\uff0c\u6700\u597d\u60c5\u51b5\u4e0b\u4e3a1\uff0c\u5b8c\u7f8e\u9884\u6d4b\uff1b\u6700\u574f\u60c5\u51b5\u4e0b\u65e0\u7a77\u5927\u3002</p>"},{"location":"DeepLearning/Recurrent%20neural%20network/#42","title":"4.2 \u68af\u5ea6\u88c1\u526a","text":"<p>\u200b   \\(g\\) \u8868\u793a\u4e00\u4e2a\u5b58\u653e\u6240\u6709\u5c42\u68af\u5ea6\u7684\u5411\u91cf\uff0c\u5982\u679c \\(g\\) \u7684\u6a21\u8d85\u8fc7 \\(\\theta\\)\uff0c\u90a3\u4e48\u5c31\u5c06\u5176\u201c\u62c9\u56de\u6765\u201d\uff1a</p> <p></p> <p>\u200b   \u8fd9\u4e00\u7b56\u7565\u7528\u4e8e\u89e3\u51b3\u68af\u5ea6\u8fc7\u5927\u7684\u95ee\u9898\u3002</p>"},{"location":"DeepLearning/Transformer/","title":"Transformer","text":"<p>\u8f93\u5165\u7684sentence\u4e2d\uff0c\u6bcf\u4e2a\u8bcd\u4f1a\u8f6c\u5316\u4e3a\u8bcd\u5411\u91cf \\(\\vec{E_n}\\) \uff0c\u4ee3\u8868\u8bcd\u5728\u65e0\u4e0a\u4e0b\u6587\u4ecb\u5165\u60c5\u51b5\u4e0b\u7684\u4e00\u4e2a\u539f\u59cb\u542b\u4e49\u3002\u5728\u4e0b\u4f8b\u4e2d\uff0c\u6211\u4eec\u53ea\u5173\u6ce8\u540d\u8bcd\u88ab\u4fee\u9970\u7684\u60c5\u51b5</p> <ul> <li>\u6743\u91cd\u77e9\u9635 \\(W_Q\\) \u5c06\u8bcd\u5411\u91cf\u8f6c\u5316\u4e3a query \\(\\vec{Q_n}\\) \uff08\u5b9e\u9645\u4e0a\u5c06Embedding \u964d\u7ef4\u4e86\uff0c\u6620\u5c04\u5230\u4e00\u4e2a\u66f4\u4f4e\u7ef4\u7684\u7a7a\u95f4\uff09\uff0cquery \u4ee3\u8868\u7684\u542b\u4e49\u662f\u540d\u8bcd \u8be2\u95ee\u524d\u9762\u662f\u5426\u6709\u5f62\u5bb9\u8bcd\u6765\u4fee\u9970\u81ea\u5df1\uff0c\u4ee5\u5f97\u5230\u8be5\u540d\u8bcd\u5728\u4e0a\u4e0b\u6587\u8bed\u5883\u4e2d\u7684\u771f\u5b9e\u542b\u4e49</li> </ul> <p></p> <ul> <li>\u6743\u91cd\u77e9\u9635 \\(W_k\\) \u5c06\u8bcd\u5411\u91cf\u8f6c\u5316\u4e3a key \\(\\vec{K_n}\\) \uff08\u6620\u5c04\u5230\u4e0equery\u76f8\u540c\u7684\u4f4e\u7ef4\u7a7a\u95f4\uff09\uff0c\u89c6\u5176\u4e3a\u201c\u60f3\u8981\u56de\u7b54query\u201d\uff0c\u5f53key\u4e0equery\u7684\u65b9\u5411\u5bf9\u9f50\u65f6\uff0c\u5c31\u8ba4\u4e3a\u5b83\u4eec\u76f8\u5339\u914d\u3002\u4f8b\u5982 <code>fluffy</code> \u548c <code>blue</code> \u5bf9\u5e94\u7684key\u5c31\u4f1a\u4e0e <code>creature</code> \u5bf9\u5e94\u7684query\u76f8\u5339\u914d\u3002</li> </ul> <p></p> <ul> <li>\u56e0\u6b64\uff0c\u5c06\u6240\u6709\u7684key\u4e0equery\u4f5c\u70b9\u79ef\uff0c\u5f97\u5230\u7684\u5206\u6570\u4ee3\u8868\u6bcf\u4e2a\u8bcd\u4e0e\u66f4\u65b0\u5176\u5b83\u8bcd\u542b\u4e49\u6709\u591a\u76f8\u5173\uff0c\u8d8a\u5927\u8bf4\u660e\u8d8a\u76f8\u5173\uff0c\u5982\u4e0b\u9762\u7684\u77e9\u9635\uff1a</li> </ul> <p></p> <ul> <li>\u5f97\u5230\u7684\u5206\u6570\u9700\u8981\u9010\u5217\u8fdb\u884c softmax \u5f52\u4e00\uff0c\u5176\u4e2d\uff0c\u4e3a\u4e86\u6d88\u9664\u4e0b\u6587\u5bf9\u8bcd\u4e49\u7684\u5f71\u54cd\uff08\u5728transformer\u4e2d\u53ea\u8003\u8651\u4e0a\u6587\uff09\uff0c\u77e9\u9635\u4e0b\u4e09\u89d2\u5168\u90e8\u8bbe\u4e3a \\(-\\infty\\) \uff0c\u5728softmax\u4e2d\u4f1a\u5f52\u4e00\u5316\u4e3a0\uff08masking\uff09\u3002\u8fd9\u6837\uff0c\u77e9\u9635\u672c\u8eab\u5c31\u6210\u4e3a\u4e00\u4e2a\u6743\u91cd\u77e9\u9635\uff1a</li> </ul> <p></p> <ul> <li>\u6743\u91cd\u77e9\u9635 \\(W_V\\) \u5c06\u8bcd\u5411\u91cf\u8f6c\u5316\u4e3a value \\(\\vec{V_n}\\) \uff08\u4e0d\u662f\u964d\u7ef4\uff0cvalue\u4e0eembedding\u5904\u4e8e\u540c\u4e00\u4e2a\u7ef4\u5ea6\u7a7a\u95f4\uff09\uff0cvalue\u4e0ekey\u5bf9\u5e94\uff0c\u5c06value\u4e0e\u5f97\u5230\u7684\u6743\u91cd\u77e9\u9635\u5bf9\u5e94\u5217\u5411\u91cf\u76f8\u4e58\uff0c\u518d\u52a0\u4e0a\u539f\u59cb\u8bcd\u5411\u91cf\uff0c\u5f97\u5230\u66f4\u65b0\u540e\u7684\u8bcd\u5411\u91cf\uff0c\u4ee3\u8868\u8be5\u8bcd\u5728\u53e5\u5b50\u4e2d\u7684\u542b\u4e49</li> </ul> <p></p> <p></p> <p>\u4e0a\u8ff0\u8ba8\u8bba\u7684\u662f one-head attention\uff0c\u4e0b\u9762\u6765\u4ecb\u7ecd multi-head attention. \u591a\u5934\u6ce8\u610f\u529b\u4e2d\uff0c\u5b58\u5728\u591a\u4e2a \\(W_K,W_Q,W_V\\) \u77e9\u9635\uff0c\u5206\u522b\u751f\u6210\u4e0d\u540c\u7684\u6ce8\u610f\u529b\u6a21\u5f0f(\u53ef\u4ee5\u5e76\u884c)\uff0c\u8868\u793a\u5bf9\u6bcf\u4e2a\u8f93\u5165token\u7684\u4e0d\u540c\u5904\u7406\uff1a</p> <p></p>"},{"location":"blog/","title":"Blog","text":""},{"location":"essayReading/2411.13602/","title":"2411.13602","text":""},{"location":"essayReading/2411.13602/#abstract","title":"Abstract","text":"<p><code>CardiacNets</code> \u901a\u8fc7\u8de8\u6a21\u6001\u5bf9\u6bd4(Cross-modal contrastive learning)\u548c\u751f\u6210\u5f0f\u9884\u8bad\u7ec3(generative pretraining)\u6765\u5229\u7528CMR\u7684diagnostic strength\u589e\u5f3aECG\u7684\u5206\u6790\u3002\u63d0\u4f9b\u4e24\u4e2a\u57fa\u7840\u529f\u80fd\uff1a</p> <ul> <li>\u4f7f\u7528\u5fc3\u7535\u56fe\u8f93\u5165\u6765\u8bc4\u4f30\u8be6\u7ec6\u7684\u5fc3\u810f\u529f\u80fd\u6307\u6807\uff0c\u5e76\u7b5b\u67e5\u6f5c\u5728\u7684\u5fc3\u8840\u7ba1\u75be\u75c5\uff0c\u5305\u62ec\u51a0\u5fc3\u75c5(coronary artery disease)\u3001\u5fc3\u808c\u75c5(cardiomyopathy)\u3001\u5fc3\u5305\u708e(pericarditis)\u3001\u5fc3\u529b\u8870\u7aed(heart failure)\u548c\u80ba\u52a8\u8109\u9ad8\u538b(pulmonary hypertension)</li> <li>\u5b83\u901a\u8fc7\u4ece\u5fc3\u7535\u56fe\u6570\u636e\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u5fc3\u810f\u78c1\u5171\u632f\u56fe\u50cf\u6765\u63d0\u9ad8\u53ef\u89e3\u91ca\u6027</li> </ul>"},{"location":"essayReading/2411.13602/#main","title":"Main","text":"<p>large-scale multimodal datasets \u5927\u89c4\u6a21\u591a\u6a21\u6001\u6570\u636e\u96c6: UK Biobank(UKB) &amp; MIMIC</p> <p>CLIP(Contrastive Language-Image Pre-training)\uff1a\u4e00\u79cd\u4ee3\u8868\u6027\u7684\u8de8\u6a21\u6001\u5bf9\u6bd4\u5b66\u4e60\u65b9\u6cd5\u3002\u5b83\u80fd\u591f\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u5171\u4eab\u7684\u5d4c\u5165\u7a7a\u95f4\uff0c\u4f7f\u6765\u81ea\u4e0d\u540c\u6a21\u6001\u7684\u6f5c\u5728\u8868\u5f81\u5b9e\u73b0\u5bf9\u9f50(aligning latent representations)\u3002\u8fd9\u79cd\u521b\u65b0\u80fd\u529b\u652f\u6301\u9ad8\u7cbe\u5ea6\u7684\u4efb\u52a1\uff0c\u5305\u62ec\u96f6\u6837\u672c\u5206\u7c7b zero-shot classification\uff0c\u8fd9\u4f7f\u5f97\u6a21\u578b\u65e0\u9700\u9488\u5bf9\u7279\u5b9a\u4efb\u52a1\u8fdb\u884c\u8bad\u7ec3\u5c31\u80fd\u505a\u51fa\u51c6\u786e\u7684\u9884\u6d4b\u3002</p> <p>Stable Diffusion model: \u5229\u7528 CLIP \u7684\u6587\u672c\u7f16\u7801\u5668\u4f5c\u4e3a\u6761\u4ef6\u5f15\u5bfc\u800c\u751f\u6210\u4e0e\u6587\u672c\u63cf\u8ff0\u9ad8\u5ea6\u5951\u5408\u7684\u9ad8\u5ea6\u903c\u771f\u7684\u56fe\u50cf\u3002</p> <p><code>CardiacNets</code>\u4e0d\u50cf\u4f20\u7edf\u65b9\u6cd5\u4e00\u6837\u4e13\u6ce8\u4e8e aligning text-image pairs with similar informational content\uff0c\u800c\u662f\u5f3a\u8c03\u4e00\u79cd robust modality(convey rich,comprehensive info) \u4e0e weaker madality\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u540e\u8005\u4ece\u524d\u8005\u83b7\u53d6insights\u6765\u63d0\u5347\u81ea\u8eab\u80fd\u529b\u3002\u65b9\u6848\u7531\u4e24\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>implement contrastive learning to align ECG data with theircorresponding CMR images. \u5229\u7528\u6bcf\u79cd\u6a21\u6001\u7684\u4f18\u52bf</li> <li>ECG encoder, trained through contrastive learning, is subsequently   frozen and employed as a conditional encoder within a diffusion model. \u8fd9\u79cd\u5bf9\u9f50\u540e\u7684\u5fc3\u7535\u56fe\u8868\u5f81\u6709\u6548\u5730\u5f15\u5bfc\u6f5c\u5728video diffusion model \u751f\u6210\u4e0e\u5fc3\u7535\u56fe\u8f93\u5165\u76f8\u5bf9\u5e94\u7684\u9ad8\u8d28\u91cf\u5fc3\u810f\u78c1\u5171\u632f\u6210\u50cf\u5e8f\u5217</li> </ul> <p>\u5b9e\u65bd\u9636\u6bb5\uff1a</p> <ul> <li>cross-modal contrastive learning utilizing ECG and CMR data and ECG-based CMR Image Generation Model</li> </ul> <p></p> <ul> <li>comprehensive evaluation of downstream tasks</li> </ul> <p></p> <p>\u5728\u7b2c\u4e00\u9636\u6bb5\uff0c\u8de8\u6a21\u6001\u9884\u8bad\u7ec3\u4f7f\u5fc3\u7535\u56fe\u80fd\u591f\u6355\u6349\u76f8\u5e94\u7684\u5fc3\u810f\u78c1\u5171\u632f\u6210\u50cf\u4fe1\u606f\uff0c\u5e76\u751f\u6210\u5fc3\u810f\u78c1\u5171\u632f\u56fe\u50cf\u3002\u7b2c\u4e8c\u9636\u6bb5\u8868\u660e\uff0c\u5728\u6240\u6709\u8bc4\u4f30\u7684\u540e\u7eed\u4efb\u52a1\u4e2d\uff0c\u7ecf\u8fc7\u8de8\u6a21\u6001\u9884\u8bad\u7ec3\u7684\u5fc3\u7535\u56fe\u6a21\u578b\u4f18\u4e8e\u4ec5\u4f9d\u8d56\u5fc3\u7535\u56fe\u6570\u636e\u7684\u4f20\u7edf\u5355\u6a21\u6001\u76d1\u7763\u5b66\u4e60\u6a21\u578b\u3002</p>"},{"location":"essayReading/2411.13602/#method","title":"Method","text":""},{"location":"essayReading/2411.13602/#1-dataset-for-model-development-and-evaluation","title":"1. Dataset for Model Development and Evaluation","text":"<p>\u6570\u636e\u6e90\u4e8eUKB\uff0c\u76ee\u524d\u6700\u5927\u7684\u516c\u5f00\u53ef\u7528\u6570\u636e\u96c6\u3002</p> <p>\u4e13\u6ce8\u4e8e\u53c2\u4e0e\u8005\u9996\u6b21\u8fdb\u884c\u6210\u50cf\u68c0\u67e5\u65f6\u6536\u96c6\u7684\u5fc3\u7535\u56fe\u548c\u5fc3\u810f\u78c1\u5171\u632f\u6210\u50cf\u7684\u6210\u5bf9\u6570\u636e\uff0c\u6700\u7ec8\u5f97\u5230\u603b\u5171 41,519 \u7ec4\u6210\u5bf9\u6570\u636e\u96c6\u3002</p> <p>\u5fc3\u7535\u56fe\u6570\u636e\u5305\u62ec 12 \u6761\u5bfc\u8054\u8bb0\u5f55\uff0c\u6bcf\u6761\u8bb0\u5f55\u6301\u7eed 10 \u79d2\uff0c\u91c7\u6837\u9891\u7387\u4e3a 500 \u8d6b\u5179\uff1b\u800c\u5fc3\u810f\u7535\u5f71\u78c1\u5171\u632f\u6210\u50cf\u6570\u636e\u5219\u5305\u62ec\u77ed\u8f74\u548c\u56db\u8154\u957f\u8f74\u89c6\u56feshort-axis and four-chamber long-axis views\uff0c\u6bcf\u4e2a\u89c6\u56fe\u90fd\u6355\u6349\u4e86\u4e00\u4e2a\u5305\u542b 50 \u5e27\u7684single cardiac cycle\u3002</p> <p>\u6309\u7167 7:1:2 \u7684\u6bd4\u4f8b\u5c06\u6570\u636e\u96c6\u5212\u5206\u4e3a\u8bad\u7ec3\u96c6\u3001\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u3002</p> <p>\u540e\u7eed\u7814\u7a76\u4e2d\u53c8\u52a0\u5165\u4e86MIMIC-IV-ECG49\u6570\u636e\u96c6\u3001\u4ee5\u53ca\u6765\u81ea\u4e09\u5bb6\u533b\u9662\u7684\u79c1\u6709\u6570\u636e\u96c6\uff1a\u6d59\u6c5f\u5927\u5b66\u533b\u5b66\u9662\u9644\u5c5e\u7b2c\u4e00\u533b\u9662\uff08FAHZU\uff09\u3001\u6d59\u6c5f\u5927\u5b66\u533b\u5b66\u9662\u9644\u5c5e\u7b2c\u4e8c\u533b\u9662\uff08SAHZU\uff09\u548c\u8862\u5dde\u5e02\u4eba\u6c11\u533b\u9662\uff08QPH\uff09\u3002</p>"},{"location":"essayReading/2411.13602/#2-data-processing-and-augmentation","title":"2. Data processing and augmentation","text":"<ol> <li>baseline drift \u57fa\u7ebf\u6f02\u79fb\u95ee\u9898\u7684\u89e3\u51b3\uff1a\u901a\u8fc7 seasonal decomposition\uff0c\u4ece\u800c\u80fd\u591f\u6709\u6548\u5730\u5206\u79bb\u5e76\u6821\u6b63\u8d8b\u52bf\u6210\u5206</li> <li>apply wavelet transform denoising using the \u201cdb6\u201d wavelet along with soft thresholding. \u4f7f\u7528 \u201cdb6\u201d \u5c0f\u6ce2\u5e76\u7ed3\u5408\u8f6f\u9608\u503c\u6cd5\u8fdb\u884c\u5c0f\u6ce2\u53d8\u6362\u53bb\u566a</li> <li>employ a Savitzky-Golay filter\u6765\u5e73\u6ed1\u4fe1\u53f7\u3002\u8be5\u6ee4\u6ce2\u5668\u901a\u8fc7 polynomial fitting within a sliding window to refine the ECG waveform further.</li> </ol> <p>short-axis CMR \u56fe\u50cf\u539f\u59cb\u6570\u636e\u67094\u4e2a\u7ef4\u5ea6\uff1alength\u3001width\u3001slice and time. slice \u7ef4\u5305\u542b 3 \u5230 10 \u5c42\u5207\u7247\uff0c\u9009\u62e9middle basoapical slice\uff0c\u5c06\u56fe\u50cf\u7b80\u5316\u4e3a\u4e09\u4e2a\u7ef4\u5ea6length\u3001width and time\uff0c\u5176\u4e2d\u65f6\u95f4\u7ef4\u5ea6\u5305\u62ec50\u5e27\u3002</p> <p>\u4e3a\u4e86\u8ba9\u6a21\u578b\u4e13\u6ce8\u4e8e\u5fc3\u810f\u533a\u57df\uff0c\u4f7f\u7528\u4e00\u4e2apretrained segmentation model \u6765\u751f\u6210\u4e00\u4e2a heart region mask.\u4ee5\u5305\u542b\u63a9\u7801\u975e\u96f6\u533a\u57df\u7684\u6700\u5c0f\u8fb9\u754c\u6846\u4e3a\u4e2d\u5fc3\uff0c\u5c06\u56fe\u50cf\u88c1\u526a\u4e3a 80\u00d780 \u50cf\u7d20\u3002</p> <p>long-axis \u56fe\u50cf\u7531\u957f\u5ea6\u3001\u5bbd\u5ea6\u548c\u65f6\u95f4\u7ef4\u5ea6\u7ec4\u6210\uff0c\u65f6\u95f4\u7ef4\u5ea6\u540c\u6837\u5305\u542b 50 \u5e27\u3002\u4f7f\u7528\u4e0e\u77ed\u8f74\u56fe\u50cf\u76f8\u540c\u7684\u5206\u5272\u65b9\u6cd5\uff0c\u6211\u4eec\u5c06\u957f\u8f74\u56fe\u50cf\u88c1\u526a\u4e3a 96\u00d796 \u50cf\u7d20\u3002</p> <p>Data augmentation:</p> <p>\u5bf9\u4e8eECG data\uff0c\u4f7f\u7528 crop resizing\u3001time reversal and sign inversion\uff0c\u63a5\u7740\u7528 Min-Max scaling within a range of -1 to 1 on a channel-wise basis\u901a\u9053\u5c42\u9762.</p> <p>\u5bf9\u4e8eCMR data\uff0crandom rotation(up to 30 degrees), random horizontal and vertical flips and random resized cropping with a scale range of 0.8 to 1.0 and an aspect ratio\u5bbd\u9ad8\u6bd4 of 0.9 to 1.1.  \u4e4b\u540e\u4f7f\u7528bilinear interpolation\u5c06\u56fe\u50cf\u8c03\u6574\u5927\u5c0f\u4e3a256 x 256 pixel\u3002\u5bf9\u77ed\u8f74\u548c\u957f\u8f74\u56fe\u50cf\u7684\u6240\u6709 50 \u5e27\u90fd\u8fdb\u884c\u4e86\u5f52\u4e00\u5316\u5904\u7406\uff0c\u4f7f\u7528\u7684\u5747\u503c\u4e3a 0.5\uff0c\u6807\u51c6\u5dee\u4e3a 0.5\u3002</p>"},{"location":"essayReading/2411.13602/#3-self-supervised-method-for-cmr","title":"3. Self-supervised method for CMR","text":"<p>\u91c7\u7528 Swin Transformer base\u4f5c\u4e3abackbone\uff0cGreenMIM\u8fdb\u884c\u63a9\u7801\u81ea\u76d1\u7763\u8bad\u7ec3\uff0c</p> <p>Masked self-supervised training\uff08\u63a9\u7801\u81ea\u76d1\u7763\u8bad\u7ec3\uff09\u662f\u4e00\u79cd\u81ea\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5\uff0c\u901a\u8fc7\u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c\u63a9\u7801\u64cd\u4f5c\uff0c\u8ba9\u6a21\u578b\u5b66\u4e60\u6062\u590d\u539f\u59cb\u6570\u636e\u6216\u63d0\u53d6\u6570\u636e\u7279\u5f81\uff0c\u4ee5\u89e3\u51b3\u76d1\u7763\u5b66\u4e60\u4e2d\u6570\u636e\u6807\u6ce8\u6210\u672c\u9ad8\u7684\u95ee\u9898\u3002\u5728\u533b\u5b66\u56fe\u50cf\u5206\u6790\u9886\u57df\uff0c\u8be5\u8bad\u7ec3\u65b9\u6cd5\u53ef\u6709\u6548\u5229\u7528\u672a\u6807\u6ce8\u6570\u636e\u5b66\u4e60\u56fe\u50cf\u7279\u5f81\uff0c\u4e3a\u540e\u7eed\u4efb\u52a1\u63d0\u4f9b\u6709\u529b\u652f\u6301\u3002</p> <p>encoder patch size \u4e3a4 x 4, window size \u4e3a7.</p>"},{"location":"essays/DEER/","title":"Dynamic Early Exit in Reasoning Models","text":"<p>Large reasoning language models(LRLMs) \u76ee\u524d\u4f9d\u8d56 test-time scaling(\u5229\u7528\u6d4b\u8bd5\u65f6\u7684\u8d44\u6e90\u8fdb\u884c\u5bf9\u6a21\u578b\u80fd\u529b\u7684\u6269\u5c55) \uff0c\u5ef6\u957f long CoT \u751f\u6210\u6765\u89e3\u51b3\u590d\u6742\u95ee\u9898\u662f\u4e00\u79cd\u6d4b\u8bd5\u65f6\u7f29\u653e\u7684\u65b9\u6cd5\u3002\u7136\u800c\uff0clong CoT\u4e2d\u7684 overthinking \u95ee\u9898\u4f1a\u964d\u4f4e\u95ee\u9898\u89e3\u51b3\u7684\u6548\u7387\uff0c\u800c\u4e14\u7531\u4e8e\u63a8\u7406\u6b65\u9aa4\u6781\u5176\u8be6\u7ec6\u6216\u5197\u4f59\uff0c\u8fd8\u5b58\u5728\u5bfc\u81f4\u51c6\u786e\u6027\u4e0b\u964d\u7684\u98ce\u9669\u3002</p> <p>\u672c\u6587\u63d0\u51fa \u201callows LLMs to self-truncate CoT sequences by early exit during generation\u201d \u7684\u65b9\u6cd5\uff0cThe proposed method monitors model behavior at potential reasoning transition points (e.g.,\u201cWait\u201d tokens)\u6f5c\u5728\u63a8\u7406\u8f6c\u6362\u70b9\uff0c and dynamically terminates the next reasoning chain\u2019s generation when the model exhibits high confidence in a trial answer. \u65e0\u9700 additional training\uff0c\u5e76\u53ef\u65e0\u7f1d\u96c6\u6210\u5230\u73b0\u6709\u7c7b\u4f3co1\u63a8\u7406LLMs.</p> <p>\u5e73\u5747\u5c06\u601d\u7ef4\u94fe\u5e8f\u5217\u7684\u957f\u5ea6\u7f29\u77ed\u4e86 31% \u81f3 43%\uff0c\u540c\u65f6\u5c06\u51c6\u786e\u7387\u63d0\u9ad8\u4e86 1.7% \u81f3 5.7%\u3002</p>"},{"location":"essays/DEER/#_1","title":"\u4ecb\u7ecd","text":"<p>\u601d\u7ef4\u94fe\u7684\u5197\u4f59\u53ef\u5f52\u56e0\u4e8e supervised fine-tuning \u6216\u5f3a\u5316\u5b66\u4e60\uff0c\u5728\u8fd9\u4e9b\u9636\u6bb5\u4e2d\uff0c\u6a21\u578b\u5728\u751f\u6210\u8fc7\u7a0b\u4e2d\u52a8\u6001\u8c03\u6574\u5176\u63a8\u7406\u957f\u5ea6\u7684\u80fd\u529b\u88ab\u5ffd\u89c6\u4e86\u3002</p> <p>\u8bc6\u522b\"Pearl Reasoning\"(the critical point where the reasoning information becomes just sufficient)\uff0c\u5e76\u8feb\u4f7f\u6a21\u578b\u5728\u8fd9\u4e00\u70b9\u4e0a\u505c\u6b62\u8fdb\u4e00\u6b65\u601d\u8003\uff0c\u76f4\u63a5\u8f93\u51fa\u7ed3\u8bba\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u517c\u987e\u51c6\u786e\u6027\u548c\u6548\u7387\u3002\u9a8c\u8bc1\u957f\u601d\u7ef4\u94fe\u786e\u6709 Pearl \u4ee5\u540e\uff0c\u95ee\u9898\u6765\u5230\u5982\u4f55\u627e\u5230\u201cpearl reasoning\u201d\u3002</p> <p>\u8bba\u6587\u65b9\u6cd5\u4e3a DEER \uff08Dynamic Early Exit in Reasonin\uff09\uff0cIt regards the key moments when the model switches thought chains in reasoning as chances of early exit,  and prompting LRLMs to stop thinking and generate trial answers at these moments.</p> <ul> <li>Reasoning Transition Monitoring: \"wait\"\u4e3a\u63a8\u7406\u8f6c\u6362\u5173\u952e\u70b9</li> <li>Trial Answer Inducing\uff1a</li> <li>Confidence Evaluating</li> </ul>"},{"location":"essays/DEER/#preliminaries","title":"Preliminaries","text":""},{"location":"essays/DEER/#lrlm","title":"LRLM \u751f\u6210\u6a21\u5f0f","text":"<ul> <li>use delimiters\u5206\u9694\u7b26 to divide the output into two processes: slow thinking and conclusion\uff0c\u5728\u6162\u601d\u8003\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u7cfb\u7edf\u4e14\u5168\u9762\u7684\u63a8\u7406\uff0c\u6700\u7ec8\u603b\u7ed3\u601d\u7ef4\u8fc7\u7a0b\u5e76\u5728\u7ed3\u8bba\u90e8\u5206\u7ed9\u51fa\u6700\u7ec8\u7b54\u6848\u3002</li> <li>During the slow thinking process, LRLMs engage in complex thinking actions, such as Problem Restatement &amp; Comprehension, Approach Exploration, and Result Verification</li> </ul> <p>\u5c06\u6bcf\u4e2a thinking action \u6210\u4e3a\u4e00\u4e2a thinking chunk\uff0cchunks\u4e4b\u95f4\u7684\u8f6c\u6362\u901a\u5e38\u7531 action transition points \u6807\u8bb0\uff08including \u201dWait\u201d, \u201dAlternatively\u201d, and \u201dHmm\u201d\uff09</p> <p></p>"},{"location":"essays/DEER/#budget-forcing","title":"Budget Forcing","text":"<p>\u8be5\u65b9\u6cd5\u5229\u7528 LRLMs \u4e2d\u72ec\u7279\u7684\u751f\u6210\u6a21\u5f0f\u6765\u63a7\u5236 test-time computation. \u4e00\u79cd\u7b80\u5355\u7684\u89e3\u7801\u65f6\u5e72\u9884\u63aa\u65bd\uff0c\u5373\u5728\u6d4b\u8bd5\u65f6\u5f3a\u5236\u8bbe\u5b9a\u6162\u601d\u8003\u6807\u8bb0\u7684\u6700\u5927\u6570\u91cf\u548c\u6700\u5c0f\u6570\u91cf\u3002\u5177\u4f53\u800c\u8a00\uff0c\u5f53\u8fbe\u5230\u6807\u8bb0\u6570\u91cf\u4e0a\u9650\u65f6\uff0c\u4ed6\u4eec\u4f1a\u9644\u52a0\u601d\u8003\u7ed3\u675f\u6807\u8bb0\u5206\u9694\u7b26\u4ee5\u53ca \u201c\u6700\u7ec8\u7b54\u6848\uff1a\u201d\uff0c\u4ee5\u4fbf\u63d0\u524d\u9000\u51fa\u601d\u8003\u9636\u6bb5\u3002\u4e3a\u4e86\u786e\u4fdd\u8fbe\u5230\u6807\u8bb0\u6570\u91cf\u4e0b\u9650\uff0c\u6291\u5236\u601d\u8003\u7ed3\u675f\u6807\u8bb0\u5206\u9694\u7b26\u7684\u751f\u6210\uff0c\u5e76\u5728\u5927\u578b\u63a8\u7406\u8bed\u8a00\u6a21\u578b\u6b63\u5728\u8fdb\u884c\u7684\u601d\u7ef4\u8fc7\u7a0b\u4e2d\u6dfb\u52a0\u52a8\u4f5c\u8f6c\u6362\u70b9\uff0c\u4ece\u800c\u4fc3\u4f7f\u6a21\u578b\u518d\u6b21\u68c0\u67e5\u5176\u7b54\u6848\u6216\u5c1d\u8bd5\u65b0\u7684\u63a8\u7406\u65b9\u6cd5\u3002\u7136\u800c\uff0c\u4ed6\u4eec\u63d0\u51fa\u7684\u9884\u7b97\u5f3a\u5236\u65b9\u6cd5\u662f static \u7684\uff0c\u4ecd\u6709\u5f88\u5927\u7684\u6539\u8fdb\u7a7a\u95f4\u3002</p>"},{"location":"essays/DEER/#motivation-and-observations","title":"Motivation and Observations","text":"<p>\u5206\u6790LRLMs \u4e2d\u7684 overthinking \u95ee\u9898\uff0c\u5e76\u63a2\u7a76 static early exit \u7684\u5f71\u54cd\u3002</p> <p>\u9996\u5148\u7528 DeepSeek-R1-Distill-Qwen-14B \u5728 AIME2024\u3001GPQA-Diamond\u3001MATH-500\u4e0a\u8fdb\u884c\u5b9e\u9a8c\uff1a\u5148\u8fdb\u884c\u5b8c\u6574\u63a8\u7406\uff0c\u7136\u540e\u4fdd\u7559\u6162\u601d\u8003\u8fc7\u7a0b\uff0c\u6839\u636e action transition points \u5212\u5206\u601d\u7ef4\u5757\u3002\u82e5\u6837\u672c\u8d85\u8fc75\u4e2a\u601d\u7ef4\u5757\uff0c\u4fdd\u7559\u6837\u672c\uff0c\u5e76\u5bf9\u6837\u672c\u601d\u7ef4\u5757\u8fdb\u884c\u622a\u65ad\uff0820%-90%\uff09\u3002\u5728\u6bcf\u4e2a\u88ab\u622a\u65ad\u7684\u63a8\u7406\u5e8f\u5217\u540e\u9644\u52a0\u4e00\u4e2a\u601d\u8003\u7ed3\u675f\u6807\u8bb0\u5206\u9694\u7b26\uff0c\u4ee5\u5f3a\u5236\u7ec8\u6b62\u6162\u601d\u8003\u8fc7\u7a0b\u3002\u7136\u540e\uff0c\u6a21\u578b\u57fa\u4e8e\u90e8\u5206\u63a8\u7406\u5185\u5bb9\u751f\u6210\u6700\u7ec8\u7ed3\u8bba\u3002AIME2024\u6bcf\u4e2a\u6837\u672c\u7ed3\u679c\u5982\u56fe1\uff1a</p> <p></p> <p>\u56fe1\u8bc1\u660e\u4e86 \u201cPearl Reasoning\u201d \u7684\u5b58\u5728\uff0c\u7ea6 75% \u7684\u6837\u672c\u5305\u542b\u8fd9\u6837\u7684 \u201c\u73cd\u73e0\u201d\uff08\u63d0\u524d\u9000\u51fa\u80fd\u5f97\u51fa\u6b63\u786e\u7b54\u6848\uff09\uff0c\u5e76\u4e14 36.7% \u7684\u6837\u672c\u5728\u63a8\u7406\u8def\u5f84\u7684\u524d\u534a\u6bb5\u5c31\u51fa\u73b0\u4e86 \u201c\u73cd\u73e0\u63a8\u7406\u201d \u60c5\u51b5\u3002\u6b64\u5916\uff0c\u6211\u4eec\u89c2\u5bdf\u5230\uff0c\u5b58\u5728\u4e00\u4e9b\u6837\u672c\uff0c\u53ea\u6709\u901a\u8fc7\u63d0\u524d\u9000\u51fa\u624d\u80fd\u5f97\u51fa\u6b63\u786e\u7b54\u6848\uff08\u4f8b\u5982\uff0c\u56fe 1\uff08a\uff09\u4e2d\u7684\u95ee\u9898 11\u300119 \u548c 26\uff09\u3002</p> <p>\u56fe2\u8bf4\u660e\u4e86\u9759\u6001\u9000\u51fa\u7684\u4e0d\u8db3\uff1a</p> <p></p>"},{"location":"essays/DEER/#method","title":"Method","text":"<p>core idea: \u5bf9 trial answer \u7684 confidence \u8868\u660e LRLMs \u751f\u6210\u6700\u7ec8\u7b54\u6848\u6240\u9700\u7684\u601d\u7ef4\u4fe1\u606f\u662f\u5426\u5145\u8db3. </p> <p>\u89c2\u5bdf\u5230\u5f53\u6a21\u578b\u63a8\u7406\u8fc7\u7a0b\u4e0d\u5b8c\u6574\u6216\u5b58\u5728\u7f3a\u9677\u65f6\uff0ctrial answer\u7684\u7f6e\u4fe1\u5ea6\u5f80\u5f80\u4f1a\u663e\u8457\u964d\u4f4e\u3002\u76f8\u53cd\uff0c\u5f53\u63a8\u7406\u5168\u9762\u4e14\u903b\u8f91\u5408\u7406\u65f6\uff0c\u6a21\u578b\u751f\u6210\u7684\u7b54\u6848\u7f6e\u4fe1\u5ea6\u4f1a\u66f4\u9ad8\u3002\u8fd9\u8868\u660e\u6a21\u578b\u7684 parameter space \u672c\u8d28\u4e0a\u5bf9 Pearl Reasoning \u6709\u4e00\u79cd\u9690\u542b\u8ba4\u77e5\uff0c\u4f46\u7531\u4e8e\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5ffd\u7565\u4e86 dynamically varying lengths of reasoning chains\uff0c\u6a21\u578b\u65e0\u6cd5\u660e\u786e\u63d0\u524d\u7ec8\u6b62\u63a8\u7406\u3002DEER\u901a\u8fc7\u6fc0\u6d3b\u5e76\u5229\u7528\u8fd9\u79cd\u9690\u542b\u8ba4\u77e5\u6765\u5b9e\u73b0\u52a8\u6001\u63d0\u524d\u9000\u51fa</p> <p></p> <p>\u4e09\u4e2a\u6a21\u5757\uff1a</p> <ul> <li> <p>reasoning transition monitor: \u8bc6\u522b\u6f5c\u5728\u9000\u51fa\u70b9</p> </li> <li> <p>trial answer inducer\uff1a\u6a21\u578b\u5728\u6f5c\u5728\u9000\u51fa\u70b9\u6682\u505c\u65f6\uff0c\u8be5\u6a21\u5757 prompts(\\(I\\)) \u6a21\u578b\u57fa\u4e8e so far \u7684\u63a8\u7406\u5185\u5bb9\u751f\u6210\u4e2d\u95f4\u7b54\u6848\u3002\u5728 prompts \u4e2d\u52a0\u5165\u7b54\u6848\u5206\u9694\u7b26 <code>\\boxed{}</code> \u6765\u66f4\u7cbe\u786e\u8bc6\u522b trial answer.   $$   A = LRLM(P,T,I)   $$   P=prompt\uff0cT=generated thoughts\uff0cI = answer inducer prompt\uff0cA=trial answer(\\(A=[a_0,a_1,...,a_n]\\))</p> </li> <li> <p>confidence evaluator\uff1atake the maximum predicted probability of each token as its confidence. For multi-token trial answers, the overall confidence is computed as the mean confidence across all constituent tokens</p> </li> </ul> <p></p> <p>\u6700\u540e\uff0c\u5c06\u5f97\u5230\u7684\u7f6e\u4fe1\u5ea6\u4e0e\u7ecf\u9a8c\u9608\u503c\u03bb\u8fdb\u884c\u6bd4\u8f83\uff0c\u4ee5\u6b64\u6765\u51b3\u5b9a\u662f\u5426\u63d0\u524d\u9000\u51fa\u3002if \\(C&gt;\\lambda\\) , \u6211\u4eec\u5c31\u8ba4\u4e3a LRLM \u5f53\u524d\u751f\u6210\u7684\u63a8\u7406\u4fe1\u606f\u5df2\u8db3\u591f\uff0c\u8fd9\u8868\u660e\u8be5\u6a21\u578b\u5df2\u7ecf\u8fbe\u5230\u4e86 \u201cPearl Reasoning\u201d \u72b6\u6001\u3002\u6b64\u65f6\uff0cDEER \u4f1a\u505c\u6b62\u8fdb\u4e00\u6b65\u7684\u63a8\u7406\u64cd\u4f5c\uff0c\u5e76\u7740\u624b\u7ed9\u51fa\u7ed3\u8bba\u3002\u5426\u5219\uff0c\u6a21\u578b\u4f1a\u56de\u5230\u4e4b\u524d\u7684\u8f6c\u6362\u70b9\uff0c\u4ee5\u751f\u6210\u4e0b\u4e00\u4e2a\u601d\u7ef4\u5757\u3002</p> <p>\u7531\u4e8e Answer Inducer \u548c Confidence Evaluator \u5f15\u5165\u989d\u5916\u5ef6\u8fdf\uff0c\u6240\u4ee5\u5c06 DEER \u548c a branch-parallel acceleration strategy \u7ed3\u5408\uff0c\u4ee5\u514b\u670d\u6548\u7387\u9650\u5236\uff1a</p> <p></p> <ul> <li>Multiple branches are linearized into a single sequence and generated in parallel using a special causal attention mask; \uff1f</li> <li>\u901a\u8fc7 confidence-based pruning \u8fdb\u884c\u52a8\u6001\u952e\u503c cache \u7ba1\u7406\u3002\u8fd9\u4e00\u7b56\u7565\u4f7f\u5f97 trial answer evaluation \u548c\u6b63\u5728\u8fdb\u884c\u7684\u63a8\u7406\u94fe\u751f\u6210\u5728\u65f6\u95f4\u4e0a\u80fd\u591f\u91cd\u53e0\uff0c\u4ece\u800c\u4f18\u5316\u4e86\u6574\u4f53\u7684\u63a8\u7406\u6548\u7387\u3002</li> </ul> <p></p>"},{"location":"essays/DEER/#experiment","title":"Experiment","text":""},{"location":"essays/DEER/#implementation","title":"Implementation","text":"<p>Metrics\uff1a</p> <ul> <li>ACC</li> </ul> <p></p> <p>\\(\\mathbb{I}\\) \u4e3a\u6307\u793a\u51fd\u6570\uff0c\u5224\u65ad\u62ec\u53f7\u5185\u7ed9\u5b9a\u6761\u4ef6\u662f\u5426\u6210\u7acb\uff1b\\(x_i\\) \u4e3a\u95ee\u9898\uff0c\\(y_i\\) \u4e3a\u6570\u636e\u96c6\u4e2d\u7684\u771f\u5b9e\u7b54\u6848</p> <ul> <li>LEN</li> </ul> <p>\u751f\u6210\u7684\u6587\u672c\u8d8a\u957f\uff0c\u5927\u578b\u63a8\u7406\u8bed\u8a00\u6a21\u578b\u7684\u63a8\u7406\u6210\u672c\u5c31\u8d8a\u9ad8\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u901a\u8fc7\u8ba1\u7b97\u6bcf\u4e2a\u6837\u672c\u7684\u5e73\u5747\u751f\u6210\u957f\u5ea6\u6765\u8bc4\u4f30\u6210\u672c\uff1a</p> <p></p> <p>\u5b9e\u73b0\u7ec6\u8282\uff1azero-shot CoT(\"think step by step, and put your final answer within \\boxed{}.\") \u91c7\u7528 greedy decoding with a single sample for the correctness evaluation. Apply rule-based evaluations directly to verify mathematical equivalence. Max generation len = 16384</p>"},{"location":"essays/DEER/#result","title":"Result","text":"<p>\u5bf9\u4e8e\u5de6\u8fb9\u4e24\u4e2a\u8f83\u7b80\u5355\u7684\u6570\u636e\u96c6\uff0c\u6a21\u578b\u53c2\u6570\u8d8a\u5c11\uff0c\u8fc7\u5ea6\u63a8\u7406\u60c5\u51b5\u8d8a\u4e25\u91cd\u3002</p> <p>LRLMs \u5728\u5904\u7406\u5177\u6709\u6311\u6218\u6027\u7684\u95ee\u9898\u65f6\u4e5f\u4f1a\u51fa\u73b0 overthinking \u7684\u73b0\u8c61\uff0c\u800c\u4e14\u5f53\u6a21\u578b\u7684\u63a8\u7406\u80fd\u529b\u4e0e\u57fa\u51c6\u6d4b\u8bd5\u7684\u96be\u5ea6\u76f8\u5339\u914d\u65f6\uff0c\u8fd9\u79cd\u73b0\u8c61\u4f1a\u66f4\u52a0\u660e\u663e(Diamind \u548c AIME2024 \u4e2d\uff0c\u968f\u6a21\u578b\u53c2\u6570\u589e\u591a\uff0cdeer\u5bf9\u800cvanilla CoT\u9519\u7684sample\u589e\u52a0)\u3002</p>"},{"location":"essays/DEER/#discussion","title":"Discussion","text":"<p>\u9608\u503c \\(\\lambda\\) \u7684\u5f71\u54cd\uff1a\u5206\u522b\u8bbe\u4e3a 0.9\uff08\u8fc7\u65e9\u9000\u51fa\uff09\u30010.95 \u548c 1.0\uff08\u8fc7\u665a\u9000\u51fa\uff09\u65f6\u7684\u5b9e\u9a8c\u7ed3\u679c\u3002\u7ed3\u679c\u8868\u660e\uff0c\u5f53\u9608\u503c\u8bbe\u7f6e\u5f97\u8fc7\u4f4e\u65f6\uff0c\u63a8\u7406\u957f\u5ea6\u76f8\u5bf90.95\u53ea\u4f1a\u8f7b\u5fae\u7f29\u77ed\uff0c\u4f46\u51c6\u786e\u7387\u663e\u8457\u4e0b\u964d\uff0c\u662f\u4e00\u79cd\u201c\u5bf9overthinking\u7684\u8fc7\u5ea6\u7ea0\u6b63\u201d\uff1b\u76f8\u53cd\uff0c\u9608\u503c\u8bbe\u7f6e\u8fc7\u9ad8\u65f6\u63a8\u7406\u957f\u5ea6\u663e\u8457\u5ef6\u957f\u4e14\u51c6\u786e\u7387\u4e0b\u964d\u3002</p> <p></p> <p>thought switch signals \u7684\u5f71\u54cd\uff1a\u66f4\u597d\u7684\u63a8\u7406\u5757\u5206\u5272\u65b9\u5f0f\u80fd\u591f\u8fdb\u4e00\u6b65\u63d0\u5347\u63a8\u7406\u4e2d\u7684\u63d0\u524d\u9000\u51fa\u6548\u679c</p> <p></p>"},{"location":"essays/DeepSeek-R1/","title":"DeepSeek-R1","text":"<ul> <li>R1-zero \u4e0d\u5c06SFT(\u8bba\u6587\uff1ainstruct-GPT RLHF)\u4f5c\u4e3a\u521d\u59cb\u6b65\u9aa4\uff0c\u4f46\u63a8\u7406\u6548\u679c\u826f\u597d\uff0c\u4e0d\u8fc7\u4f1a\u6709\u53ef\u8bfb\u6027\u5dee\u3001\u8bed\u8a00\u6df7\u6742\u7b49\u95ee\u9898\uff0c\u6545\u5f15\u5165R1</li> </ul> <p>SFT(supervised fine-tuning)\u76d1\u7763\u5fae\u8c03\uff0c\u4e3a\u4e86\u4f7fLLMs\u751f\u6210\u7b26\u5408\u4eba\u7c7b\u504f\u597d\u7684\u7b54\u6848\uff0c\u5229\u7528\u5927\u91cf\u5305\u542b\u8f93\u5165\u4e0e\u5bf9\u5e94\u6b63\u786e\u8f93\u51fa\u7684\u6807\u6ce8\u6570\u636e\u5bf9\u9884\u8bad\u7ec3\u6a21\u578b\u8fdb\u884c\u5fae\u8c03\uff0c\u7f3a\u70b9\uff1a\u4f9d\u8d56\u5927\u91cf\u4eba\u4e3a\u6807\u6ce8\u6570\u636e\uff0c\u4e14\u96be\u4ee5\u8986\u76d6\u957f\u94fe\u3001\u591a\u6b65\u63a8\u7406\u573a\u666f</p> <ul> <li>R1 \u901a\u8fc7\u91c7\u7528multi-stage training and cold-start data before RL\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u4e86\u63a8\u7406\u6027\u80fd\u3002</li> </ul> <p>\u4e00\u4e9b\u524d\u7f6e\u77e5\u8bc6\uff1a</p> <ul> <li>Post-training\u540e\u8bad\u7ec3\uff1a\u53ef\u63d0\u9ad8\u63a8\u7406\u4efb\u52a1\u51c6\u786e\u6027\uff0c\u4e14\u4f7f\u6a21\u578b\u7b26\u5408\u793e\u4f1a\u4e3b\u4e49\u4ef7\u503c\u89c2\u5e76\u9002\u5e94\u7528\u6237\u504f\u597d\u3002\u4e0epre-training\u76f8\u6bd4\u6240\u9700\u8ba1\u7b97\u8d44\u6e90\u76f8\u5bf9\u8f83\u5c11</li> <li> <p>OpenAI\u7684o1\u901a\u8fc7\u589e\u52a0CoT\u7684\u957f\u5ea6\u6765\u5f15\u5165 inference-time scaling(\u63a8\u7406\u65f6\u7f29\u653e\uff1f)\uff0c\u4f7f\u5f97\u6a21\u578b\u5728\u63a8\u7406\u4efb\u52a1\u4e2d\u53d6\u5f97\u663e\u8457\u6539\u8fdb\uff0c\u4f46\u76ee\u524d\u65e0\u4eba\u590d\u73b0\u6210\u529f</p> </li> <li> <p>\u63d0\u793a\u8bcd\u5de5\u7a0b\uff1a</p> </li> <li> <p>Zero-Shot Prompting: One Foundation Model -&gt; Prompting -&gt; Different tasks. \u53ea\u95ee\u95ee\u9898\uff0c\u4e0d\u63d0\u4f9b\u4f8b\u5b50</p> </li> <li> <p>Few-Shot Prompting: By providing few examples, the LLMs can perform a new task even it is not trained on it (in-context learning). \u7ed9\u4f8b\u5b50\uff0c\u4f7f\u5f97\u5927\u6a21\u578b\u53ef\u4ee5\u53c2\u7167</p> </li> <li> <p>Chain-of-Thought Prompting: enable complex reasoning capabilities through intermediate reasoning steps. \u901a\u8fc7\u5728\u4f8b\u5b50\u4e2d\u4f53\u73b0\u601d\u7ef4\u94fe\u6765\u63d0\u9ad8\u5927\u6a21\u578b\u51c6\u786e\u6027</p> </li> <li> <p>\u5f3a\u5316\u5b66\u4e60\uff1f</p> </li> </ul>"},{"location":"essays/DeepSeek-R1/#r1-zero","title":"R1-zero:","text":"<p>\u9a8c\u8bc1\uff1a\u80fd\u5426\u4ec5\u901a\u8fc7\u5f3a\u5316\u5b66\u4e60\uff08\u65e0\u9700\u76d1\u7763\u5fae\u8c03\uff09\u6fc0\u52b1LLMs\u7684\u63a8\u7406\u80fd\u529b\uff0cself-evolution through a pure PL process - V3-base \u4f5c\u4e3a base model\uff0c\u91c7\u7528GRPO\u4f5c\u4e3a RL framework \u6765\u63d0\u9ad8\u63a8\u7406\u6027\u80fd</p>"},{"location":"essays/DeepSeek-R1/#rl","title":"RL\u7b97\u6cd5","text":"<p>\u901a\u8fc7\u5f3a\u5316\u5b66\u4e60\u76f4\u63a5\u5bf9\u57fa\u7840\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3\uff0c\u91c7\u7528 Group Relative Policy Optimization(GRPO Shao et al.,2024) \u4f5c\u4e3a\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u3002GRPO\u7b97\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u91c7\u6837\u4e00\u7ec4\u8f93\u51fa\uff0c\u8ba1\u7b97\u8fd9\u4e9b\u8f93\u51fa\u7684\u5956\u52b1\uff0c\u5e76\u6839\u636e\u5956\u52b1\u7684\u76f8\u5bf9\u503c\u6765\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u3002\u4ee5group score\u6765\u4f30\u8ba1baseline(\u516c\u5f0f\u770b\u4e0d\u61c2\u2026\u2026)</p> <p></p> <p>\u63a8\u7406\u8fc7\u7a0b\u548c\u7b54\u6848\u5206\u522b\u5728  \u548c\u6807\u7b7e\u5185\u3002</p>"},{"location":"essays/DeepSeek-R1/#reward-modeling","title":"Reward Modeling","text":"<p>\u9996\u5148\uff0c\u4ec0\u4e48\u662f\u5956\u52b1\u6a21\u578b\uff1f-- \u7528\u4e8e\u6253\u5206\u8bc4\u4f30\u5927\u6a21\u578b\u7684\u56de\u7b54\uff0c\u636e\u6b64\u66f4\u65b0\u7b56\u7565\u3002\u4f8b\u5982\u5728RLHF\u4e2d\uff1a</p> <p></p> <ul> <li>step 1: \u4ece\u6570\u636e\u96c6\u4e2d\u91c7\u6837 prompt\uff0c\u540c\u65f6\u4eba\u5de5\u5199\u51fa\u5e0c\u671b\u7684\u7b54\u6848\u4f5c\u4e3a ground truth\uff0c\u5fae\u8c03</li> <li>step2: \u91c7\u6837 prompt\uff0c\u9001\u5230 SFT \u540e\u7684\u6a21\u578b\u8fdb\u884c\u751f\u6210\uff0c\u5f97\u5230\u591a\u4e2a\u7b54\u6848\u3002\u7531\u4eba\u5de5\u6807\u6ce8\uff0c\u5bf9\u751f\u6210\u7684\u7b54\u6848\u8fdb\u884c\u6392\u5e8f\uff0c\u8bad\u7ec3\u4e00\u4e2a reward model\u3002</li> <li>step3: \u91c7\u6837 prompt\uff0c\u91c7\u7528 PPO \u8fdb\u884c\u5f3a\u5316\u5b66\u4e60\uff0c\u6a21\u578b\u751f\u6210\u7b54\u6848\u5e76\u5f97\u5230 reward model \u7684\u6253\u5206\uff0c\u4ee5\u6b64\u66f4\u65b0\u3002</li> </ul> <p>\u4e3a\u4e86\u8bad\u7ec3R1-zero\uff0c\u91c7\u7528 rule-based reward system \uff0c\u8be5\u7cfb\u7edf\u4e3b\u8981\u75312\u79cd\u7c7b\u578b\u7684reward\u6784\u6210\uff1a</p> <ul> <li>Accuracy reward: \u8bc4\u4f30\u56de\u7b54\u662f\u5426\u6b63\u786e</li> <li>Format rewards: \u5f3a\u5236\u8981\u6c42\u6a21\u578b\u5c06\u5176\u601d\u8003\u8fc7\u7a0b\u7f6e\u4e8e \u201c\u201d \u548c \u201c\u201d \u6807\u7b7e\u4e4b\u95f4</li> </ul> <p>\u4e0d\u91c7\u7528 outcome or process neural reward model \uff0c\u56e0\u4e3a neural reward model \u5728large-scale RL\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u53d7 reward hacking\u5f71\u54cd\uff0c\u800c\u91cd\u65b0\u8bad\u7ec3\u8017\u8d39\u5927\u91cf\u8d44\u6e90</p>"},{"location":"essays/DeepSeek-R1/#training-template","title":"Training Template","text":"<p>\u8bbe\u8ba1\u4e00\u4e2a\u7b80\u5355\u6a21\u677f\uff08Table 1\uff09\uff0c\u7528\u4e8e\u5f15\u5bfc base model \u9075\u5faa\u6307\u5b9a\u6307\u4ee4\u3002\u6a21\u677f\u8981\u6c42 R1-zero \u9996\u5148\u751f\u6210\u4e00\u4e2a \u63a8\u7406\u8fc7\u7a0b \uff0c\u7136\u540e\u7ed9\u51fa\u6700\u7ec8\u7b54\u6848\u3002\u8be5\u6a21\u677f\u907f\u514d\u4e86\u4efb\u4f55\u7684 content-specific biases\uff08mandating reflective reasoning or prompting particular problem-solving strategies\uff09\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u80fd\u591f\u5728\u5f3a\u5316\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u51c6\u786e\u89c2\u5bdf\u5230\u6a21\u578b\u7684\u81ea\u7136\u6f14\u8fdb\u8fc7\u7a0b\u3002</p>"},{"location":"essays/DeepSeek-R1/#performance","title":"Performance","text":"<p>\u2026\u2026</p> <p>\u65e0\u9700\u4efb\u4f55\u76d1\u7763\u5fae\u8c03\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97\u5f3a\u5927\u7684\u63a8\u7406\u80fd\u529b</p> <p>\u540c\u65f6\u901a\u8fc7 majority voting \u8fdb\u4e00\u6b65\u63d0\u5347\u6027\u80fd</p>"},{"location":"essays/DeepSeek-R1/#self-evolution-process","title":"Self-evolution Process","text":"<p>\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u901a\u8fc7 extended test-time computation \uff0c\u83b7\u5f97\u4e86\u89e3\u51b3\u8d8a\u6765\u8d8a\u590d\u6742\u7684\u63a8\u7406\u4efb\u52a1\u7684\u80fd\u529b\u3002computation\u4e2d\uff0c\u751f\u6210\u6570\u767e\u5230\u6570\u5343\u4e2a\u63a8\u7406tokens\uff0c\u4f7f\u6a21\u578b\u80fd\u591f\u66f4\u6df1\u5165\u5730\u63a2\u7d22\u548c\u5b8c\u5584\u5176\u601d\u7ef4\u8fc7\u7a0b\u3002</p> <p>\u8fd9\u79cd\u81ea\u6211\u8fdb\u5316\u6700\u663e\u8457\u7684\u7279\u70b9\u4e4b\u4e00\uff0c\u5c31\u662f\u968f\u7740 test-time computation \u7684\u589e\u52a0\uff0c\u590d\u6742\u884c\u4e3a\u5f00\u59cb\u51fa\u73b0\u3002\u4f8b\u5982 reflection\uff08\u6a21\u578b\u91cd\u65b0\u5ba1\u89c6\u5e76\u91cd\u65b0\u8bc4\u4f30\u4e4b\u524d\u7684\u6b65\u9aa4\uff0c\u4ee5\u53ca\u81ea\u53d1\u63a2\u7d22\u89e3\u51b3\u95ee\u9898\u7684\u66ff\u4ee3\u65b9\u6cd5\uff09\uff0c\u8fd9\u4e9b\u884c\u4e3a\u662f\u6a21\u578b\u4e0eRL\u73af\u5883\u4e92\u52a8\u7684\u7ed3\u679c\uff0c\u800c\u975e\u7f16\u7a0b\u8bbe\u5b9a\u3002</p>"},{"location":"essays/DeepSeek-R1/#aha-moment","title":"Aha Moment","text":"<p>\u5728\u8bad\u7ec3 DeepSeek-R1-Zero \u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e2a\u7279\u522b\u6709\u8da3\u7684\u73b0\u8c61\u662f \u201c\u987f\u609f\u65f6\u523b\u201d \u7684\u51fa\u73b0\u3002\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0cDeepSeek-R1-Zero \u901a\u8fc7\u91cd\u65b0\u8bc4\u4f30\u5176\u521d\u59cb\u65b9\u6cd5\uff0c\u5b66\u4f1a\u4e3a\u4e00\u4e2a\u95ee\u9898\u5206\u914d\u66f4\u591a\u7684\u601d\u8003\u65f6\u95f4\u3002</p> <p>\u5b83\u51f8\u663e\u4e86\u5f3a\u5316\u5b66\u4e60\u7684\u5f3a\u5927\u529b\u91cf\u548c\u9b45\u529b\uff1a\u6211\u4eec\u65e0\u9700\u660e\u786e\u6559\u5bfc\u6a21\u578b\u5982\u4f55\u89e3\u51b3\u95ee\u9898\uff0c\u53ea\u9700\u4e3a\u5b83\u63d0\u4f9b\u6b63\u786e\u7684\u6fc0\u52b1\uff0c\u5b83\u5c31\u80fd\u81ea\u4e3b\u5f00\u53d1\u51fa\u5148\u8fdb\u7684\u95ee\u9898\u89e3\u51b3\u7b56\u7565\u3002</p> <p></p>"},{"location":"essays/DeepSeek-R1/#r1","title":"R1","text":"<ul> <li>\u9996\u5148\u6536\u96c6 thousands of cold-start data to fine-tune the V3-base model</li> <li>\u63a5\u7740\u50cfR1-zero\u4e00\u6837\u6267\u884creasoning-oriented RL\uff0c\u5728\u63a5\u8fd1\u6536\u655b\u65f6\uff0c\u901a\u8fc7\u5728 RL checkpoint \u8fdb\u884c rejection sampling \uff1f\u6765\u521b\u5efa\u65b0\u7684SFT data\uff0c\u5e76\u7ed3\u5408 V3 \u5728\u5199\u4f5c\u3001\u4e8b\u5b9e\u6027\u95ee\u7b54\u548c\u81ea\u6211\u8ba4\u77e5\u7b49\u9886\u57df\u7684supervised data\uff0c\u63a5\u7740retrain V3-base</li> <li>\u7528\u65b0\u6570\u636e\u5fae\u8c03\u4ee5\u540e\uff0c\u8be5 checkpoint \u4f1a\u518d\u7ecf\u5386\u4e00\u6b21\u5f3a\u5316\u5b66\u4e60\u8fc7\u7a0b\uff0c\u540c\u65f6\u8003\u8651\u6765\u81ea\u6240\u6709\u573a\u666f\u7684prompt\u3002</li> <li>\u6700\u540e\u5f97\u5230\u7684 checkpoint \u5c31\u662f R1 \uff0c\u8868\u73b0\u4e0eo1-1217\u76f8\u5f53</li> </ul>"},{"location":"essays/DeepSeek-R1/#cold-start","title":"Cold start","text":"<p>\u6784\u5efa\u5e76\u6536\u96c6\u5c11\u91cf long CoT data \u7528\u4e8e\u5fae\u8c03\u6a21\u578b\uff0c\u4f7f\u6a21\u578b\u4f5c\u4e3a intial RL actor. \u6536\u96c6\u6570\u636e\u7b56\u7565\uff1a</p> <ul> <li>few-shot prompting with a long CoT as an example\uff0c\u4f7f\u6a21\u578b\u751f\u6210\u5e26 reflection \u4e0e verification \u7684\u8be6\u7ec6\u7b54\u6848</li> <li>\u4ee5\u53ef\u8bfb\u683c\u5f0f\u6536\u96c6 DeepSeek-R1-Zero \u7684\u8f93\u51fa\uff0c\u5e76\u901a\u8fc7\u4eba\u5de5\u6807\u6ce8\u5458\u8fdb\u884c\u540e\u5904\u7406\u6765\u4f18\u5316\u7ed3\u679c</li> </ul> <p>\u4f18\u52bf\uff1a</p> <p>\u63d0\u9ad8\u53ef\u8bfb\u6027\uff0c\u901a\u8fc7\u5728cold start\u6570\u636e\u7684\u6bcf\u4e2a\u56de\u590d\u672b\u5c3e\u52a0\u5165\u4e00\u4e2asummary\uff0c\u5e76\u8fc7\u6ee4\u6389\u975e reader-friendly \u7684\u56de\u590d\uff0c\u6765\u8bbe\u8ba1\u4e00\u4e2a\u6613\u8bfb\u6a21\u5f0f\uff1a</p> <pre><code>special_token|&lt;reasoning_process&gt;|special_token|&lt;summary&gt;\n#reasoning_process \u662f\u9488\u5bf9query\u7684CoT\n</code></pre> <p>\u7531\u6b64\u8ba4\u4e3a iterative training \u5bf9\u63a8\u7406\u6a21\u578b\u800c\u8a00\u662f\u4e00\u79cd\u66f4\u597d\u7684\u65b9\u5f0f</p>"},{"location":"essays/DeepSeek-R1/#reasoning-oriented-rl","title":"Reasoning-oriented RL","text":"<p>\u5fae\u8c03\u4ee5\u540e\uff0c\u91c7\u7528\u4e0eR1-zero \u76f8\u540c\u7684\u5927\u89c4\u6a21\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u8fd9\u4e00\u9636\u6bb5\u4e13\u6ce8\u4e8e\u63d0\u5347\u6a21\u578b\u7684\u63a8\u7406\u80fd\u529b\uff0c\u7279\u522b\u662f\u5728\u7f16\u7801\u3001\u6570\u5b66\u3001\u79d1\u5b66\u548c\u903b\u8f91\u63a8\u7406\u7b49\u63a8\u7406\u5bc6\u96c6\u578b\u4efb\u52a1\u4e2d\uff0c\u8fd9\u4e9b\u4efb\u52a1\u6d89\u53ca\u5b9a\u4e49\u660e\u786e\u3001\u6709\u6e05\u6670\u89e3\u51b3\u65b9\u6848\u7684\u95ee\u9898\u3002</p> <p>\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u89c2\u5bdf\u5230CoT \u51fa\u73b0\u8bed\u8a00\u6df7\u6742\u7684\u60c5\u51b5\uff0c\u5c24\u5176\u5f53RL prompt \u6d89\u53ca\u591a\u79cd\u8bed\u8a00\u65f6\u3002\u5f15\u5165 language consistency reward during RL training \uff0c\u901a\u8fc7\u8ba1\u7b97\u601d\u7ef4\u94fe\u4e2d\u76ee\u6807\u8bed\u8a00\u8bcd\u6c47\u7684\u6bd4\u4f8b\u6765\u5f97\u5230reward\u3002ablation experiments(\u6d88\u878d\u5b9e\u9a8c)\u8868\u660e\uff0c\u8be5\u8c03\u6574\u4f1a\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\uff0c\u4f46\u4f7f\u5f97\u8f93\u51fa\u66f4\u7b26\u5408\u4eba\u7c7b\u504f\u597d\uff0c\u4f7f\u8f93\u51fa\u66f4\u5177\u53ef\u8bfb\u6027\u3002</p> <p>\u6700\u540e\u5c06\u63a8\u7406\u4efb\u52a1\u51c6\u786e\u6027\u548clanguage consistency reward\u76f8\u52a0\uff0c\u5f62\u6210 final reward \uff0c\u7136\u540e\u5bf9\u5fae\u8c03\u6a21\u578b\u8fdb\u884cRL\u76f4\u5230\u5176\u5728\u63a8\u7406\u4efb\u52a1\u4e0a\u8fbe\u5230\u6536\u655b\u3002</p>"},{"location":"essays/DeepSeek-R1/#rejection-sampling-and-sft","title":"Rejection Sampling and SFT","text":"<p>\u5f53 reasoning-oriented RL \u6536\u655b\u540e\uff0c\u6211\u4eec\u5229\u7528\u7ed3\u679c checkpoint \u6765\u6536\u96c6\u7528\u4e8e\u4e0b\u4e00\u8f6e\u8bad\u7ec3\u7684\u76d1\u7763\u5fae\u8c03\uff08SFT\uff09\u6570\u636e\u3002\u4e0d\u8fc7\u8fd9\u90e8\u5206\u7684SFT\u6570\u636e\u4e3b\u8981\u805a\u7126\u4e8e\u6574\u5408\u6765\u81ea\u5176\u4ed6\u9886\u57df\u7684\u6570\u636e\uff0c\u4ee5\u589e\u5f3a\u6a21\u578b\u5728\u5199\u4f5c\u3001\u89d2\u8272\u626e\u6f14\u53ca\u5176\u4ed6\u901a\u7528\u4efb\u52a1\u65b9\u9762\u7684\u80fd\u529b\uff0c\u4e0d\u50cf\u521d\u59cb cold-start data \u805a\u7126\u4e8e\u63a8\u7406\u3002\u751f\u6210\u6570\u636e\u5e76\u5fae\u8c03\u6a21\u578b\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ul> <li> <p>for reasoning data\uff0c\u6784\u5efa reasoning prompts\uff0c\u5e76\u5bf9\u4ece\u4e0a\u8ff0 RL \u8bad\u51fa\u7684 checkpoint \u8fdb\u884c \u62d2\u7edd\u91c7\u6837 \u4ee5\u751f\u6210\u63a8\u7406\u8f68\u8ff9(trajectories)\u3002\u5728\u4e4b\u524d\u7684\u9636\u6bb5\uff0c\u4ec5\u4f7f\u7528\u4e86\u57fa\u4e8e\u89c4\u5219\u7684\u5956\u52b1\u6765\u8bc4\u4f30\u6570\u636e(?)\u3002\u7136\u800c\uff0c\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0c\u901a\u8fc7\u6dfb\u52a0\u5176\u4ed6\u6570\u636e\u6765\u4e30\u5bcc\u6570\u636e\u96c6\uff0c\u5176\u4e2d\u90e8\u5206\u6570\u636e\u4f7f\u7528 \u751f\u6210\u5956\u52b1\u6a21\u578b (generative reward model) by \u5c06 ground-truth \u548c\u6a21\u578b\u9884\u6d4b\u8f93\u5165 DeepSeek-V3 \u8fdb\u884c\u5224\u65ad\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u6a21\u578b\u8f93\u51fa\u6709\u65f6\u6df7\u4e71\u4e14\u96be\u4ee5\u9605\u8bfb\uff0c\u6211\u4eec\u8fc7\u6ee4\u6389\u4e86\u8bed\u8a00\u6df7\u6742\u7684\u601d\u7ef4\u94fe\u3001\u957f\u7bc7\u6bb5\u843d\u548c\u4ee3\u7801\u5757\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u63d0\u793a\uff0c\u6211\u4eec\u91c7\u6837\u591a\u4e2a\u56de\u590d\uff0c\u53ea\u4fdd\u7559\u6b63\u786e\u7684\u56de\u590d\u3002\u6211\u4eec\u603b\u5171\u6536\u96c6\u4e86\u7ea6  600k \u4e2a\u4e0e\u63a8\u7406\u76f8\u5173\u7684\u8bad\u7ec3\u6837\u672c\u3002</p> </li> <li> <p>for Non-reasoning data\uff0c\u5982\u5199\u4f5c\u3001\u4e8b\u5b9e\u6027\u95ee\u7b54\u3001\u81ea\u6211\u8ba4\u77e5\u548c\u7ffb\u8bd1\u7b49\uff0c\u6211\u4eec\u91c7\u7528 DeepSeek-V3 \u7684\u6d41\u7a0b\uff0c\u5e76\u590d\u7528 DeepSeek-V3 \u7684\u90e8\u5206\u76d1\u7763\u5fae\u8c03\uff08SFT\uff09\u6570\u636e\u96c6\u3002\u5bf9\u4e8e\u67d0\u4e9b\u975e\u63a8\u7406\u4efb\u52a1\uff0c\u5728\u901a\u8fc7\u63d0\u793a\u56de\u7b54\u95ee\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u4f1a\u8c03\u7528 DeepSeek-V3 \u751f\u6210\u4e00\u4e2a\u6f5c\u5728\u7684\u601d\u7ef4\u94fe\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u50cf \u201c\u4f60\u597d\u201d \u8fd9\u6837\u7b80\u5355\u7684\u67e5\u8be2\uff0c\u6211\u4eec\u4e0d\u4f1a\u63d0\u4f9b\u601d\u7ef4\u94fe\u4f5c\u4e3a\u56de\u590d\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u603b\u5171\u6536\u96c6\u4e86\u5927\u7ea6 200k \u4e2a\u4e0e\u63a8\u7406\u65e0\u5173\u7684\u8bad\u7ec3\u6837\u672c\u3002</p> </li> </ul> <p>\u4f7f\u7528\u4e0a\u8ff0\u7cbe\u5fc3\u6574\u7406\u7684\u7ea6 800k \u4e2a\u6837\u672c\u7684\u6570\u636e\u96c6\uff0c\u5bf9 DeepSeek-V3-Base \u8fdb\u884c\u4e86\u4e24\u4e2a epoch \u7684 SFT\u3002</p>"},{"location":"essays/DeepSeek-R1/#rl-for-all-scenarios","title":"RL for all Scenarios","text":"<p>\u8fd9\u662f\u7b2c\u4e8c\u9636\u6bb5\u7684\u5f3a\u5316\u5b66\u4e60\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u4f7f\u6a21\u578b\u8fdb\u4e00\u6b65\u7b26\u5408\u4eba\u7c7b\u504f\u597d\u3001\u63d0\u9ad8\u6a21\u578b\u5b9e\u7528\u6027\u548c\u65e0\u5bb3\u6027\uff0c\u5e76\u4f18\u5316\u63a8\u7406\u80fd\u529b\u3002\u5177\u4f53\u8fc7\u7a0b\uff1a\u7ed3\u5408 reward signals and diverse prompt distributions \u6765\u8bad\u6a21\u578b\u3002 \u5bf9\u4e8e\u63a8\u7406\u6570\u636e\uff0c\u6211\u4eec\u9075\u5faa R1 - Zero \u4e2d\u6982\u8ff0\u7684\u65b9\u6cd5\uff0c\u5229\u7528\u57fa\u4e8e\u89c4\u5219\u7684\u5956\u52b1\u6765\u6307\u5bfc\u6570\u5b66\u3001\u7f16\u7801\u548c\u903b\u8f91\u63a8\u7406\u9886\u57df\u7684\u5b66\u4e60\u8fc7\u7a0b\u3002\u5bf9\u4e8e\u4e00\u822c\u6570\u636e\uff0c\u6211\u4eec\u501f\u52a9\u5956\u52b1\u6a21\u578b\u6765\u6355\u6349\u590d\u6742\u5fae\u5999\u573a\u666f\u4e2d\u7684\u4eba\u7c7b\u504f\u597d\u3002\u6211\u4eec\u4ee5 DeepSeek - V3 \u7684\u6d41\u7a0b\u4e3a\u57fa\u7840\uff0c\u91c7\u7528\u7c7b\u4f3c\u7684\u504f\u597d\u5bf9\u548c\u8bad\u7ec3\u63d0\u793a\u5206\u5e03\u3002</p> <p></p> <p></p>"},{"location":"essays/DeepSeek-R1/#distillation","title":"Distillation","text":"<p>\u4e3a\u4e86\u8ba9\u66f4\u9ad8\u6548\u7684\u5c0f\u6a21\u578b\u5177\u5907\u50cf DeepSeek-R1 \u90a3\u6837\u7684\u63a8\u7406\u80fd\u529b\uff0c\u6211\u4eec\u6309\u7167 2.3.3 \u8282\u6240\u8ff0\uff0c\u4f7f\u7528\u901a\u8fc7 DeepSeek-R1 \u6574\u7406\u7684 80 \u4e07\u4e2a\u6837\u672c\uff0c\u76f4\u63a5\u5bf9 Qwen \u548c Llama \u7b49\u5f00\u6e90\u6a21\u578b\u8fdb\u884c\u5fae\u8c03\u3002\u8fd9\u79cd\u76f4\u63a5\u7684\u84b8\u998f\u65b9\u6cd5\u663e\u8457\u63d0\u5347\u4e86\u5c0f\u6a21\u578b\u7684\u63a8\u7406\u80fd\u529b\u3002</p> <p>\u84b8\u998f\u8fc7\u7a0b\u53ea\u8fdb\u884cSFT\uff0c\u4e0d\u5305\u62ecRL\u3002\u5927\u6a21\u578b\u5728 RL \u9636\u6bb5\u53ef\u80fd\u51fa\u73b0\u8bb8\u591a\u9ad8\u9636\u63a8\u7406\u6a21\u5f0f\u3002\u800c\u5c0f\u6a21\u578b\u56e0\u4e3a\u5bb9\u91cf\u548c\u8868\u793a\u80fd\u529b\u6709\u9650\uff0c\u5f88\u96be\u5728\u65e0\u76d1\u7763\u6216\u7eaf RL \u60c5\u5883\u4e0b\u5b66\u5230\u76f8\u4f3c\u6c34\u5e73\u7684\u63a8\u7406\u6a21\u5f0f\u3002</p> <p>\u84b8\u998f\u53ef\u5c06\u300c\u5927\u6a21\u578b\u7684\u63a8\u7406\u8f68\u8ff9\u300d\u76f4\u63a5\u8f6c\u79fb\u7ed9\u5c0f\u6a21\u578b\uff0c\u5c0f\u6a21\u578b\u53ea\u9700\u8981\u6a21\u4eff\u5927\u6a21\u578b\u76f8\u5bf9\u5b8c\u5907\u7684\u63a8\u7406\u6d41\u7a0b\uff0c\u53ef\u4ee5\u5728\u8f83\u5c0f\u8bad\u7ec3/\u63a8\u7406\u5f00\u9500\u4e0b\u53d6\u5f97\u8fdc\u80dc\u4e8e\u81ea\u8eab\u72ec\u7acb\u5f3a\u5316\u5b66\u4e60\u7684\u6548\u679c\u3002</p>"},{"location":"essays/DeepSeek-R1/#discussiondistillation-vs-rl","title":"Discussion\uff1aDistillation vs RL","text":"<p>\u901a\u8fc7\u5bf9 DeepSeek-R1 \u8fdb\u884c\u84b8\u998f\uff0c\u5c0f\u6a21\u578b\u80fd\u591f\u53d6\u5f97\u4ee4\u4eba\u77a9\u76ee\u7684\u6210\u679c\u3002\u7136\u800c\uff0c\u4ecd\u7136\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff1a\u5728\u4e0d\u8fdb\u884c\u84b8\u998f\u7684\u60c5\u51b5\u4e0b\uff0c\u5c0f\u6a21\u578b\u80fd\u5426\u901a\u8fc7\u672c\u6587\u6240\u8ba8\u8bba\u7684\u5927\u89c4\u6a21\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\u8fbe\u5230\u4e0e\u4e4b\u76f8\u5f53\u7684\u6027\u80fd\u5462\uff1f</p> <p>\u4f7f\u7528\u6570\u5b66\u3001\u7f16\u7801\u548c\u79d1\u5b66\u3001\u6280\u672f\u3001\u5de5\u7a0b\u548c\u6570\u5b66\uff08STEM\uff09\u9886\u57df\u7684\u6570\u636e\uff0c\u5bf9 Qwen-32B-Base \u6a21\u578b\u8fdb\u884c\u5927\u89c4\u6a21\u7684\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\uff0c\u8bad\u7ec3\u6b65\u6570\u8d85\u8fc7 10k steps \uff0c\u5f97\u5230 DeepSeek-R1-Zero-Qwen-32B \u6a21\u578b\uff0c\u8be5\u6a21\u578b\u660e\u663e\u6027\u80fd\u6bd4\u4e0d\u8fc7\u4ece DeepSeek-R1\u84b8\u998f\u51fa\u6765\u7684 DeepSeek-R1-Distill-Qwen-32B \u6a21\u578b\u3002</p> <p>\u7531\u6b64\uff0c\u5f97\u5230\u7ed3\u8bba\uff1a</p> <ol> <li>\u5c06\u66f4\u5f3a\u5927\u7684\u6a21\u578b\u8fdb\u884c\u84b8\u998f\u4ee5\u5f97\u5230\u8f83\u5c0f\u7684\u6a21\u578b\u80fd\u4ea7\u751f\u51fa\u8272\u7684\u6548\u679c\uff0c\u800c\u8f83\u5c0f\u7684\u6a21\u578b\u4f9d\u9760\u672c\u6587\u4e2d\u63d0\u5230\u7684\u5927\u89c4\u6a21\u5f3a\u5316\u5b66\u4e60\u5219\u9700\u8981\u5de8\u5927\u7684\u8ba1\u7b97\u80fd\u529b\uff0c\u751a\u81f3\u53ef\u80fd\u90fd \u65e0\u6cd5\u8fbe\u5230 \u84b8\u998f\u6240\u5e26\u6765\u7684\u6027\u80fd\u6c34\u5e73</li> <li>\u867d\u7136\u84b8\u998f\u7b56\u7565\u65e2\u7ecf\u6d4e\u53c8\u6709\u6548\uff0c\u4f46\u8981\u7a81\u7834\u667a\u80fd\u7684\u754c\u9650\uff0c\u53ef\u80fd\u4ecd\u9700\u8981\u66f4\u5f3a\u5927\u7684\u57fa\u7840\u6a21\u578b\u548c\u66f4\u5927\u89c4\u6a21\u7684\u5f3a\u5316\u5b66\u4e60\u3002</li> </ol>"},{"location":"essays/MRL/","title":"Test-Time Compute via Meta RT","text":"<p>\u6a21\u578b\u5728\u751f\u6210\u957f\u63a8\u7406\u94fe\u65f6\uff0c\u53ef\u80fd\u65e0\u6cd5\u5145\u5206\u5229\u7528\u6bcf\u4e00\u6b65\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u5bfc\u81f4\u5197\u4f59\u63a8\u7406\u548c\u63a2\u7d22\u4e0e\u5229\u7528\u7684\u5931\u8861\u3002</p> <p>A desired \"meta\" behavior \u662f\u5728\u8fc7\u65e9\u9009\u5b9a\u4e00\u79cd\u65b9\u6cd5\uff08an \"exploitation\" episode\uff09\u4e0e\u5c1d\u8bd5 too many high-risk strategies (an \"exploration episode\") \u4e4b\u95f4\u53d6\u5f97\u5e73\u8861\u3002\u8fd9\u7b49\u540c\u4e8e\u5728\u8f93\u51fa token \u9884\u7b97\u8303\u56f4\u5185 minimizing cumulative regret \u3002regret \u8861\u91cf\u7684\u662fLLM\u6210\u529f\u53ef\u80fd\u6027\u4e0e\u4e00\u4e2a\u7406\u60f3\u5316\u53c2\u7167\u5bf9\u8c61\u4e4b\u95f4\u7684 cumulative difference:</p> <p></p>"},{"location":"essays/MRL/#preliminaries-and-background","title":"Preliminaries and Background","text":"<ul> <li>Problem setup: \u8bba\u6587\u7684\u76ee\u6807\u662f\u4f18\u5316 LLM\uff0c\u4f7f\u5176\u6709\u6548\u5229\u7528 test-time compute \u6765\u89e3\u51b3\u96be\u9898\u3002\u5b9a\u4e49\u5956\u52b1\u6a21\u578b \\(r(x,.):Z-&gt;{0,1}\\) \u4e0e\u6570\u636e\u96c6\uff0c\u5229\u7528\u6570\u636e\u96c6\u8bad LLM\uff0c\u5c06\u5176\u5efa\u6a21\u4e3a\u4e00\u4e2a\u5f3a\u5316\u5b66\u4e60\u7b56\u7565 \\(\\pi(.|x)\\) \uff0c\u5e0c\u671b\u8bad\u7ec3\u7b56\u7565\uff0c\u4f7f\u5176\u5728\u6d4b\u8bd5\u95ee\u9898 x \u4e0a\u7684\u8f93\u51fa token \u6d41 z \u5728\u5956\u52b1\u6a21\u578b\u4e2d\u5f97\u5230\u7684\u5206\u6570\u8f83\u5927\u3002\u8bad\u7ec3\u65f6\u4e0d\u4f1a\u63d0\u4f9b token \u6570\u7684\u4e0a\u9650\uff0c\u4ee5\u6b64\u6765\u6a21\u62df\u4e0d\u540c\u7684\u90e8\u7f72\u9884\u7b97\u60c5\u51b5\u3002</li> <li>Meta RL primer\uff1aassumes access to a distribution of tasks with different reward functions and dynamic\u3002\u76ee\u6807\u662f\u5728\u6765\u81ea\u8bad\u7ec3\u5206\u5e03\u7684\u4efb\u52a1\u4e0a\u8bad\u7ec3\u4e00\u4e2a\u7b56\u7565\uff0c\u4ee5\u4fbf\u5b83\u80fd\u5728\u6d4b\u8bd5\u4efb\u52a1\u4e0a\u8868\u73b0\u826f\u597d\u3002\u901a\u8fc7\u5728\u6d4b\u8bd5\u65f6\u6267\u884c \u81ea\u9002\u5e94 episodes\u6765\u8c03\u6574\u6027\u80fd\u3002</li> </ul>"},{"location":"essays/MRL/#problem-formulation-optimizing-test-time-compute-as-meta-rl","title":"Problem Formulation: Optimizing Test-Time Compute as Meta RL","text":""},{"location":"essays/MRL/#optimizing-tets-time-compute","title":"Optimizing Tets-Time Compute","text":"<p>\u6211\u4eec\u5e0c\u671b\u4e00\u4e2a\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u5728\u6d4b\u8bd5\u9636\u6bb5\u9884\u7b97 \\(C_0\\) \u8303\u56f4\u5185\uff0c\u5728\u6d4b\u8bd5\u95ee\u9898\u5206\u5e03 \\(P_{test}\\) \u4e0a\u8fbe\u5230\u6700\u4f73\u6027\u80fd:</p> <p></p> <p>\u4e0d\u8fc7\uff0c\\(C_0\\) \u5927\u4e8e\u6b63\u786e\u7b54\u6848\u7684\u5178\u578b\u957f\u5ea6\uff0c\u8fd9\u610f\u5473\u7740 LLM \u80fd\u591f\u5c06\u4e00\u90e8\u5206 token \u9884\u7b97\u7528\u4e8e\u6267\u884c\u90a3\u4e9b\u5b9e\u9645\u4e0a\u5e76\u4e0d\u80fd\u76f4\u63a5\u89e3\u51b3\u95ee\u9898\uff0c\u4f46\u5374\u80fd\u95f4\u63a5\u5e2e\u52a9\u6a21\u578b\u6700\u7ec8\u627e\u5230\u6b63\u786e\u7b54\u6848\u7684\u64cd\u4f5c\u3002\u4f8b\u5982\u4e00\u4e2a\u6570\u5b66\u8bc1\u660e\u95ee\u9898\uff0c\u5176\u8f93\u51fa\u7531\u4e00\u7cfb\u5217\u6b65\u9aa4\u7ec4\u6210\u3002\u5982\u679c\u7b56\u7565\u80fd\u591f \u201c\u5373\u65f6\u201d \u786e\u5b9a\u5b83\u5e94\u8be5\u56de\u6eaf\u51e0\u6b65\u5e76\u91cd\u65b0\u5f00\u59cb\u5c1d\u8bd5\uff0c\u8fd9\u4e0d\u4ec5\u53ef\u80fd\u589e\u52a0\u5176\u6210\u529f\u7684\u673a\u4f1a\uff0c\u8fd8\u80fd\u8ba9\u5927\u8bed\u8a00\u6a21\u578b\u81ea\u4fe1\u5730\u8bc6\u522b\u51fa\u54ea\u4e9b\u6b65\u9aa4\u5e94\u8be5\u907f\u514d\u4ee5\u53ca\u9700\u8981\u8c28\u614e\u5bf9\u5f85\u3002</p> <p>\u4f46\u6709\u4e2a\u95ee\u9898\u662f compute budget \\(C_0\\) \u4e0d\u4e00\u5b9a\u548c deployment budget \u76f8\u7b49\uff0c\u5bfc\u81f4\u4e00\u7cfb\u5217\u95ee\u9898\u3002\u8bad\u7ec3\u6a21\u578b\u4ee5\u6700\u5c11\u7684 token \u6570\u83b7\u5f97\u6210\u529f\uff0c\u53ef\u80fd\u4f1a\u5728\u90e8\u7f72\u65f6\u9519\u8bef\u5730\u5bfc\u81f4\u6a21\u578b\u8fc7\u65e9\u5730 \u201c\u6572\u5b9a\u201d \u4e00\u4e2a\u7b54\u6848\uff0c\u5c3d\u7ba1\u8fd9\u5e76\u975e\u6700\u4f73\u7b56\u7565\u3002\u6b64\u5916\uff0c\u4ec5\u4f7f\u7528\u7ed3\u679c\u5956\u52b1\u8fdb\u884c\u8bad\u7ec3\u540c\u6837\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u4e24\u4e2a\u89e3\u51b3\u65b9\u6848\u90fd\u6210\u529f\u6216\u8005\u90fd\u4e0d\u6210\u529f\uff0c\u90a3\u4e48\u8fd9\u79cd\u8bad\u7ec3\u65b9\u5f0f\u65e0\u6cd5\u533a\u5206\u90a3\u4e9b\u4ecd\u5728\u671d\u7740\u6b63\u786e\u65b9\u5411\u63a8\u8fdb\u7684\u89e3\u51b3\u65b9\u6848\u548c\u90a3\u4e9b\u504f\u79bb\u6b63\u8f68\u7684\u89e3\u51b3\u65b9\u6848\u3002</p> <p>\u56e0\u6b64\uff0c\u63d0\u51fa Budget-agnostic LLMs , which use test-time compute the most optimally. \u5176\u4e2d\uff0cLLM \\(\\pi\\) \u5b9e\u73b0\u5e76\u4e0d\u77e5\u9053 test-time \u9884\u7b97\uff0c\u9700\u8981\u5c55\u73b0\u81ea\u9002\u5e94\u884c\u4e3a\u6700\u5927\u9650\u5ea6\u5229\u7528\u53ef\u7528\u7684\u8ba1\u7b97\u8d44\u6e90\u9884\u7b97\uff0c\u4ee5\u5728\u6240\u6709\u8db3\u591f\u5927\u7684\u9884\u7b97\u60c5\u51b5\u4e0b\u90fd\u80fd\u826f\u597d\u8fd0\u884c</p>"},{"location":"essays/MRL/#characterizing-optimal-use-of-test-time-compute","title":"Characterizing Optimal Use of Test-Time Compute","text":"<p>\u5c06\u8f93\u51fa\u6d41\u660e\u786e\u5206\u5272\u4e3a\u4e00\u7cfb\u5217\u6709\u610f\u4e49\u7684 episodes\uff0c\u5e76\u5c06\u5e8f\u5217\u770b\u4f5c\u9488\u5bf9\u6d4b\u8bd5\u95ee\u9898\u7684\u67d0\u79cd\u201c\u81ea\u9002\u5e94\u201d\u8fc7\u7a0b\u3002\\(z = [z_0,z_1,..,z_{k-1}]\\). \u5982\u679c\u4e00\u4e2a\u5927\u8bed\u8a00\u6a21\u578b\u80fd\u591f\u5229\u7528\u4e4b\u524d\u7684\u9636\u6bb5 \\(z_{0:i\u22121}\\)\u6765\u66f4\u65b0\u5176\u5728 \\(z_i\\) \u9636\u6bb5\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u6211\u4eec\u5c31\u8bf4\u8fd9\u4e2a\u5927\u8bed\u8a00\u6a21\u578b\u5c55\u73b0\u51fa\u4e86\u81ea\u9002\u5e94\u884c\u4e3a\u3002</p> <p>\u5e0c\u671b LLMs \u53ef\u4ee5\u5728\u6700\u540e\u4e00\u4e2a\u7247\u6bb5\u5373 \\(z_{k-1}\\) \u53d6\u5f97\u6210\u529f\uff0c\u4f46\u662f\u7531\u4e8e LLMs \u5e76\u4e0d\u77e5\u9053\u6d4b\u8bd5\u9636\u6bb5\u7684\u90e8\u7f72\u9884\u7b97\uff0c\u8981\u786e\u4fdd LLm \u53ef\u4ee5\u6301\u7eed\u53d6\u5f97\u8fdb\u5c55\u5e76\u5728\u201cexploration\u201d\u548c\u201cexploitation\u201d\u95f4\u4fdd\u6301\u5e73\u8861\u3002\u5728\u6d4b\u8bd5\u65f6\u6807\u8bb0\u6d41\u4e2d\u6267\u884c\u7684\u81ea\u9002\u5e94\u8fc7\u7a0b\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u9488\u5bf9\u6d4b\u8bd5\u95ee\u9898\u8fd0\u884c\u4e00\u4e2a\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\uff0c\u5728\u8fd9\u4e2a\u7eaf\u7cb9\u7684\u4e0a\u4e0b\u6587\u8fc7\u7a0b\u4e2d\uff0c\u4e4b\u524d\u7684\u9636\u6bb5\u8d77\u5230\u4e86 \u201c\u8bad\u7ec3\u201d \u6570\u636e\u7684\u4f5c\u7528. \u53ef\u4ee5\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u4e2d\u7684\u7d2f\u79ef\u9057\u61be\u5ea6\u91cf\u6765\u91cf\u5316\u8fd9\u4e00\u8fc7\u7a0b\u7684\u6700\u4f18\u6027\u3002</p> <p>\u5b9a\u4e49 Cumulative regret \uff1a</p> <p></p> <p>\\(J_r\\) \u8868\u793a\u4ee5 \\(z_{0:j-1}\\) \u4e3a\u6761\u4ef6\u65f6\uff0cLLM \\(\\mu\\) \u6240\u83b7\u5f97\u7684\u671f\u671b\u7684 0/1 \u7ed3\u679c\u5956\u52b1\uff0c\\(J_r(\\pi^*)\\) \u8868\u793a\u5728 j \u4e2a\u7247\u6bb5\u7684 test-time budget \u5185\uff0c\u6bd4\u8f83\u7b56\u7565 \\(\\pi^*\\) \u83b7\u5f97\u7684\u5956\u52b1\u2026\u2026</p> <p>\u5982\u679c cumulative regret \u503c\u5f88\u5927\uff0c\u751a\u81f3\u53ef\u80fd\u968f\u7740\u7247\u6bb5\u6570\u91cfk\u7684\u589e\u52a0\u800c\u589e\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8ba4\u4e3a\u8fd9\u4e9b\u7247\u6bb5z\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u53d6\u5f97\u6709\u610f\u4e49\u7684\u8fdb\u5c55\u3002\u5f53 cumulative regret \u589e\u957f\u901f\u7387\u8d8a\u4f4e\uff0c\u968f\u7740 budget \u589e\u52a0\uff0cbudget-agnostic LLM \u53d6\u5f97\u7684\u6709\u610f\u4e49\u7684\u8fdb\u5c55\u5c31\u66f4\u591a\u3002</p> <p>\u8fd9\u79cd\u673a\u5236\u8feb\u4f7f\u6a21\u578b\u5728\u751f\u6210\u6bcf\u4e2a\u4e2d\u95f4\u6b65\u9aa4\u65f6\uff0c\u90fd\u5fc5\u987b\u5bf9\u89e3\u9898\u4ea7\u751f\u5b9e\u8d28\u6027\u8d21\u732e\uff0c\u4ece\u800c\u51cf\u5c11\u65e0\u6548\u8ba1\u7b97\u3002</p>"},{"location":"essays/MRL/#mrt-paradigm","title":"MRT Paradigm","text":"<p>\u62bd\u8c61\u5c42\u9762\u6765\u8bb2\uff0cMRT \u5bf9 LLM \u8fdb\u884c\u5fae\u8c03\uff0c\u4ee5\u76f4\u63a5\u4f18\u5316\u7d2f\u79ef\u9057\u61be\u3002</p> <p>\u8003\u8651\u6bcf\u4e2a\u9636\u6bb5\u5bf9 output \u6240\u4f5c\u8d21\u732e\uff0c\u76f4\u63a5\u9488\u5bf9 cumulative regret objective \u8fdb\u884c\u4f18\u5316\u3002</p> <p>\u5b9a\u4e49 value function \u6765\u91cf\u5316\u6bcf\u4e2a\u9636\u6bb5\u53d6\u5f97\u7684\u8fdb\u5c55\uff08\u7528\u53e6\u4e00\u4e2a\u7b56\u7565 \\(\\mu\\) \u7684 \\(J_r\\) \u4ee3\u8868\u8be5\u4ef7\u503c\u51fd\u6570\uff09\uff0c\u5c06\u6765\u81ea\u9636\u6bb5 \\(z_i\\) \u7684 information gain \u5b9a\u4e49\u4e3a\uff1a\u6709\u8fd9\u4e2a\u9636\u6bb5\u548c\u6ca1\u6709\u8fd9\u4e2a\u9636\u6bb5\u65f6\uff0c\u7531\u5143\u8bc1\u660e\u7b56\u7565\u03bc\u6240\u83b7\u5f97\u7684\u5e73\u5747\u5956\u52b1\u7684\u53d8\u5316\u91cf\u3002</p> <p></p> <p>MRT \u901a\u8fc7\u5728\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\u4e2d\u5f15\u5165\u5bc6\u96c6\u5956\u52b1\u4fe1\u53f7\uff0c\u6fc0\u52b1\u6a21\u578b\u5728\u751f\u6210\u6bcf\u4e2a\u4e2d\u95f4\u7ed3\u679c\u65f6\u90fd\u53d6\u5f97\u8fdb\u5c55.</p> <p>\u5b9a\u4e49\u6807\u51c6\u5fae\u8c03\u635f\u5931\u51fd\u6570\uff08\u57fa\u4e8e\u6700\u540e\u4e00\u4e2a episode \u5f97\u5230\u7684\u5956\u52b1\uff09\uff1a</p> <p></p> <p>\u6269\u5c55\uff08 \u7ea2\u8272\u90e8\u5206\u4ee3\u8868 reward bonus\uff0c \\(\\pi'\\) \u4ee3\u8868\u4e4b\u524d LLM \u7684\u68c0\u67e5\u70b9\uff0c\u4ece \\(\\pi'\\) \u751f\u6210\u7684\u524d\u7f00\u4e2d\u91c7\u6837\u5f97\u5230\u7684\u4e0a\u4e0b\u6587 \\(c_k\\) \u7684\u5206\u5e03\u4e0b\uff0c\u7ed9\u51fa reward bonus\uff09\uff1a</p> <p></p>"},{"location":"essays/MRL/#mrt","title":"MRT \u5b9e\u4f8b\u5316","text":"<p>\u76ee\u7684\u662f \u88ab\u8bad\u7684\u6a21\u578b\u53ef\u5728 token \u8f93\u51fa\u6d41\u4e2d\u5b9e\u73b0\u57fa\u4e8e\u56de\u6eaf\u7684\u641c\u7d22\uff0c\u5373 LLM \u8bc6\u522b\u5728\u89e3\u51b3\u95ee\u9898\u8fc7\u7a0b\u4e2d\u81ea\u8eab\u6240\u72af\u7684\u9519\u8bef\uff0c\u5e76\u56de\u6eaf\u4ee5\u627e\u5230\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u540c\u65f6\u8fd8\u80fd\u91cd\u65b0\u5229\u7528\u5728\u5148\u524d\u5c1d\u8bd5\u4e2d\u53d6\u5f97\u7684\u6210\u679c\u3002</p> <p>\u9996\u5148\u9700\u8981\u4ece backtracking traces \u7684\u8f93\u51fa\u6d41\u4e2d\u6784\u5efa episodes\uff0c\u4e00\u79cd\u7b80\u4fbf\u7684\u65b9\u6cd5\u662f\u5728\u6307\u793a\u56de\u6eaf\u64cd\u4f5c\u5f00\u59cb\u548c\u7ed3\u675f\u7684 markers \u5904\u5206\u5272\u6574\u4e2a\u8f68\u8ff9\u3002</p> <p></p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u63d0\u793a x\uff0c\u4ece\u57fa\u6a21\u4e2d\u91c7\u6837\u5f97\u5230\u521d\u59cb\u54cd\u5e94 \\(z_0\\)\uff0c\u7136\u540e\u6dfb\u52a0\u4e00\u4e2a\u56de\u6eafepisode \\(z_1\\) \uff0c\u5728\u8be5 episode \u4e2d\u6a21\u578b\u660e\u786e\u56de\u9000\u5230 \\(z_0\\) \u4e2d\u7684\u524d\u4e00\u4e2a\u6b65\u9aa4\uff0c\u7136\u540e\u662f new attempt \\(z_2\\)\uff0cepisode 0\u4e0e2 \u53ea\u6709\u5728\u56de\u6eaf\u6b65\u9aa4\u4e4b\u524d\u7684\u524d\u7f00\u662f\u76f8\u540c\u7684\uff1a</p> <p></p> <p>\u63a5\u7740\u662f\u5f3a\u5316\u5b66\u4e60\uff1a\u5728\u8be5\u8fc7\u7a0b\u4e2d\u6700\u5927\u5316\u516c\u5f0f 2 \u4e2d\u8ba1\u7b97\u5f97\u51fa\u7684\u5956\u52b1\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u8003\u8651 0/1 \u7684\u7ed3\u679c\u5956\u52b1\u3002\u5b9e\u73b0\u65b9\u5f0f\u4e3a\u4e3a\u6240\u6709 episode \u8bbe\u7f6e\u4e00\u4e2a\u6700\u7ec8\u5956\u52b1\uff0c\u8be5\u5956\u52b1\u7b49\u4e8e\u7ecf\u8fc7 information gain \u8c03\u6574\u540e\u7684 0/1 \u7ed3\u679c\u5956\u52b1 \u3002</p> <p>\u57fa\u6a21\u5bf9\u56de\u6eaf\u64cd\u4f5c\u91c7\u6837\u80fd\u529b\u8f83\u5dee\uff0c\u6240\u4ee5\u9700\u8981\u8fdb\u884c\u4e00\u4e2a warmstart \u76d1\u7763\u5fae\u8c03\uff0c\u4ee5\u4fbf\u8d4b\u4e88\u5927\u8bed\u8a00\u6a21\u578b\u4e00\u5b9a\u7684\u56de\u6eaf\u884c\u4e3a\u57fa\u7840</p>"},{"location":"essays/SEAL/","title":"SEAL","text":"<p>extended CoT \u63a8\u7406\u6a21\u578b\u5728\u56de\u590d\u65f6\u7ecf\u5e38\u4f7f\u7528 \u201c\\n\\n\" \u6765\u5206\u9694\u6b65\u9aa4\uff0c\u56e0\u6b64\uff0c\u5c06\u751f\u6210\u8f93\u51fa O \u5206\u89e3\u6210 a sequence of interconnected thoughts \uff0c\u5e76\u7528\u4e24\u4e2a\u6362\u884c\u7b26\u5206\u5272\uff0c\u4f7f\u5f97 \\(O = (T_1,T_2,...,T_N)\\) \u3002\u5c06 Thoughts \u5206\u7c7b\uff0c\u6bcf\u79cd\u7c7b\u578b\u5728\u63a8\u7406\u8fc7\u7a0b\u4e2d\u90fd\u53d1\u6325\u7740\u72ec\u7279\u4f5c\u7528\uff0c\u4f8b\uff1a</p> <p></p> <p>\u6709\u5982\u4e0b\u4e09\u79cd\u601d\u7ef4\u7c7b\u578b\uff1a</p> <ol> <li>Execution thoughts: \u6a21\u578b\u5bf9\u95ee\u9898\u8fdb\u884c\u5206\u6790\u5e76\u9010\u6b65\u89e3\u51b3\u95ee\u9898</li> <li> <p>Reflecting thoughts: \u6a21\u578b\u6682\u505c\u63a8\u7406\u8fc7\u7a0b\u4ee5\u9a8c\u8bc1\u5176\u63a8\u7406\u6b65\u9aa4</p> </li> <li> <p>Transition thoughts: \u6a21\u578b\u8f6c\u53d8\u5176\u63a8\u7406\u6d41\u7a0b\u5e76\u4ece\u4e0d\u540c\u7684\u89d2\u5ea6\u91cd\u65b0\u601d\u8003\u95ee\u9898</p> </li> </ol> <p>\u5982\u4e0b\u662f\u5bf9\u6a21\u578b\u56de\u7b54\u4e2d\u4e0d\u540c\u601d\u7ef4\u7c7b\u578b\u7edf\u8ba1\uff1a\u53ef\u4ee5\u53d1\u73b0\u601d\u7ef4\u94fe\u7684 \u5197\u4f59 \u4f1a\u4f7f\u5f97\u6a21\u578b\u56de\u7b54\u9519\u8bef\uff0c\u5176\u4e2d\uff0creflection \u548c transition thought \u7684\u589e\u52a0\u5f88\u660e\u663e\u3002</p> <p></p> <p>\u521d\u6b65\u7814\u7a76\uff1a\u4e0d\u540c\u63a8\u7406\u6a21\u5f0f\u5728 latent space \u4e2d\u662f\u5982\u4f55\u6784\u6210\u7684\uff1a</p> <p>\u5c06\u6bcf\u4e00\u5c42\u8f93\u51fa\u7528 \u201d\\n\\n\u201c \u5206\u5272\u4e3athoughts\uff0c\u8bb0\u4e3a \\(H_i\\)\uff0c\u63a5\u7740\u5e94\u7528 t-SNE \u5c06 \\(H_i\\) \u6295\u5f71\u5230\u4e8c\u7ef4\u7a7a\u95f4\uff1a\u53d1\u73b0 execution thoughts \u548c non-execution thoughts \u660e\u663e\u53ef\u5206\uff0c\u4e14\u5728\u66f4\u6df1\u7684\u5c42\u8868\u73b0\u8d8a\u660e\u663e\uff08\u521d\u59cb\u5c42\u8f83\u96be\u533a\u5206\uff09\uff0c\u7531\u6b64\uff0c\u4e0d\u540c\u7684\u63a8\u7406\u6a21\u5f0f\u5728 latent space \u4e2d\u4ece\u6027\u8d28\u4e0a\u662f\u53ef\u533a\u5206\u7684\u3002</p> <p></p>"},{"location":"essays/SEAL/#_1","title":"\u673a\u5236","text":"<p>\u6838\u5fc3\u601d\u8def\u662f\u8bc6\u522b\u51fa\u53ef\u4ee5\u63a7\u5236 reflection thoughts \u548c transition thoughts \u6bd4\u4f8b\u7684 steering vector\uff0c\u5e76\u5229\u7528\u8be5\u5411\u91cf\u6709\u6548\u51cf\u5c11\u5197\u4f59 token \u4f7f\u7528</p> <p></p>"},{"location":"essays/SEAL/#extraction-of-reasoning-steering-vector","title":"Extraction of Reasoning Steering Vector","text":"<p>\u5206\u5272\u601d\u7ef4\u5185\u5bb9\uff0c\u6839\u636e\u5185\u5bb9\u91cc\u7684\u5173\u952e\u8bcd\u7ed9 thoughts \u5206\u7c7b\uff0c\u63a5\u7740\u8ba1\u7b97 steering vector\uff1a\u5bf9\u4e8e\u6bcf\u4e2a thought j\uff0c\u4ece\u7b2c i \u4e2atransformer\u5757\u63d0\u53d6\u8f93\u51fa\u8868\u5f81\uff0c\u8bb0\u4e3a \\(H_j^i\\) \uff0c\u7136\u540e\u8ba1\u7b97\u6bcf\u4e2a\u601d\u7ef4\u7c7b\u522b\u7684\u5e73\u5747\u503c\uff1a</p> <p></p> <p>\u4e3a\u5b9e\u73b0\u4fdd\u7559\u5fc5\u8981\u7684\u6267\u884c\u6027\u601d\u7ef4\u7684\u540c\u65f6\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u53cd\u601d\u6027\u601d\u7ef4\u548c\u8fc7\u6e21\u6027\u601d\u7ef4\uff0c\u5b9a\u4e49 steering vector\uff1a</p> <p></p>"},{"location":"essays/SEAL/#decoding-with-latent-space-intervention","title":"Decoding with Latent Space Intervention","text":"<p>\u4f7f\u7528 steering vector \u5bf9\u63a8\u7406\u8fc7\u7a0b\u8fdb\u884c\u5b9e\u65f6\u6821\u51c6\uff0c\u5373\u5728 decoding \u8fc7\u7a0b\u4e2d\uff0c\u5728\u6bcf\u4e2a thought \u672b\u5c3e\uff0c\u5e94\u7528\u7531 S \u5f97\u51fa\u7684\u504f\u79fb\u91cf\uff1a\\(H'=H+\\alpha \\cdot S\\) ,</p> <p>\u7591\u95ee\uff1asteering vector \u7684\u83b7\u53d6\u662f\u5728\u63a8\u7406\u9636\u6bb5\uff0c\u90a3\u600e\u4e48\u5b9e\u65f6\u6821\u51c6\u601d\u7ef4\u94fe\u5462\uff1f</p> <p>\u7b54\uff1avector\u7684\u83b7\u53d6\u662f offline \u7684\uff0c\u9884\u5148\u8bad\u597d\u7684\uff0c\u4ee3\u8868\u7684\u662f\u4e00\u79cd\u601d\u7ef4\u6a21\u5f0f\uff08\u6570\u5b66\u9898\u7684\u3001\u5199\u4ee3\u7801\u7684\u3001\u4efb\u52a1\u6027\u7684\u2026\u2026\uff09\uff0c\u5c06\u601d\u7ef4\u6a21\u5f0f\u7528\u4e8e\u5b9e\u65f6\u6821\u51c6\uff0c\u662f\u884c\u5f97\u901a\u7684\u3002\u4e14\u5b9e\u9a8c\u8bc1\u660e\u4e86 steering vector \u5177\u6709\u8fc1\u79fb\u6027\uff08\u8054\u60f3\u601d\u7ef4\u6a21\u5f0f\u662f\u5171\u901a\u7684\uff09\u3002</p>"},{"location":"essays/ThoughtTerminator/","title":"ThoughtTerminator","text":"<p>\u5f15\u5165 approximate measures of problem-level difficulty(\u95ee\u9898\u5c42\u9762\u96be\u5ea6\u7684\u8fd1\u4f3c\u5ea6\u91cf\u65b9\u6cd5\uff1f)\uff0c\u5e76\u8bc1\u660e a clear relationship between problem difficulty and optimal token spend exists\uff0c\u540c\u65f6\u8bc4\u4f30\u4e86\u5404\u79cd\u63a8\u7406\u6a21\u578b\u5728\u6709\u6548\u5206\u914d\u6700\u4f18\u8bcd\u5143\u6570\u91cf\u65b9\u9762\u7684\u6821\u51c6\u7a0b\u5ea6\u5982\u4f55\u3002\u603b\u4f53\u800c\u8a00\uff0c\u63a8\u7406\u6a21\u578b\u7684\u6821\u51c6\u6548\u679c\u8f83\u5dee\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u7b80\u5355\u95ee\u9898\u65f6\u3002</p> <p>\u5176\u4e2d DUMB 500 \u662f\u4e00\u4e2a\u5305\u542b\u6781\u5176\u7b80\u5355\u7684\u6570\u5b66\u3001\u63a8\u7406\u3001\u4ee3\u7801\u548c\u4efb\u52a1\u95ee\u9898\u7684\u6570\u636e\u96c6\uff0c jointly evaluate reasoning model on these simple examples and extremely difficult examples from existing frontier benchmarks on the same task domain\u3002</p> <p>\u6700\u540e\u5f15\u5165 ThoughtTerminator ,a training-free black box decoding technique that significantly improves reasoning model calibration</p> <p>Chen et al. (2024) define overthinking as the amount of times the model repeats the correct answer in its intermediate reasoning chain.</p>"},{"location":"essays/ThoughtTerminator/#difficulty-calibration-in-reasoning-models","title":"Difficulty Calibration in Reasoning Models","text":"<p>This work is concerned with how optimally reasoning models allocate token spend Sp, or total number of tokens generated in a given sample to respond to an input</p> <p>\u5047\u8bbe\u4e00\u4e2a\u95ee\u9898\u7684 difficulty \u96be\u5ea6\u4e0e optimal token spend \u6700\u4f18\u8bcd\u5143\u4f7f\u7528\u91cf\u76f8\u5173\u662f\u5408\u7406\u7684\u3002\u5bf9\u6a21\u578b M \u800c\u8a00\uff0c\u7ed9\u5b9a\u95ee\u9898 q \u548c\u5176\u7b54\u6848\u5bf9\u7684 \u96be\u5ea6 D\uff0cD \u5c06\u88ab\u5b9a\u4e49\u4e3a\u8be5\u6a21\u578b\u5728\u5173\u4e8e\u95ee\u9898 \\(q\\) \u4e0e\u5176\u6807\u51c6\u7b54\u6848 \\(a\\) \u7684 n \u4e2a\u6837\u672c\u4e0a\u7684 simple inaccuracy rate:</p> <p></p> <p>\u7531\u6b64\u53ef\u4ee5\u5f97\u51fa \\(q\\) \u7684 multi-model difficulty : \u5728\u4e00\u7c7b\u6a21\u578b M \u4e0a\u7684\u671f\u671b\u96be\u5ea6\u503c\uff1a</p> <p></p> <p>\u4e3a\u4e86\u8bc4\u4f30\u96be\u5ea6\u4e0e\u8bcd\u5143\u4f7f\u7528\u91cf\u7684\u5173\u7cfb\uff0c\u4f7f\u7528DeepSeek-R1-7B\u8bc4\u4f30\uff0c\u4e0b\u4e3a\u6bcf\u4e2a\u7b54\u6848 \\(a\\) \u5bf9\u5e94\u7684 \\(D_M\\) \u548c \\(Sp(a)\\) \u7684\u6563\u70b9\u56fe\uff1a</p> <p></p> <p>\u5f88\u660e\u663e\u7684\u6b63\u6bd4\u5173\u7cfb\uff0c\u4f46\u540c\u65f6\u53d1\u73b0\u540c\u4e00\u95ee\u9898\u7684\u4e0d\u540c\u7b54\u6848\u6837\u672c\u5728 token spend \u4e0a\u5b58\u5728\u8f83\u5927\u5dee\u5f02\uff0c\u5f15\u51fa\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ol> <li>How well-calibrated are reasoning models in consistently realizing their optimal token spend per-question?</li> <li>Is it possible to improve the calibration of reasoning models in their token spend?</li> </ol>"},{"location":"essays/ThoughtTerminator/#quantifying-overthinking","title":"Quantifying Overthinking","text":"<p>\u5bf9 \u201c observational overthinking \u201d \u8fdb\u884c\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1athe failure in consistency a reasoning model has at realizing the minimum possible token spend per question\u3002</p> <p>\u4e00\u4e2a\u95ee\u9898\u7684 observed minimum spend \u662f\u8be5\u95ee\u9898\u7531\u6a21\u578b\u751f\u6210\u7684\u6b63\u786e\u7b54\u6848\u4e2d\u6700\u77ed\u7684\u63a8\u7406\u94fe\u5bf9\u5e94\u7684 token spend\u3002\u6839\u636e\u6a21\u578b\u7684 typical token spend \u548c observed minimum spend \u4e4b\u95f4\u7684\u5dee\u5f02\u6765\u8861\u91cf observational overthinking \u3002</p> <p>\u5bf9\u4e8e\u4ece\u6570\u636e\u96c6D\u4e2d\u91c7\u6837\u5f97\u5230\u7684\u95ee\u9898\uff0c\u4e00\u4e2a\u6a21\u578b\u7684 global overthinking score \\(O_g\\) \u662f\u6bcf\u4e2a\u63a8\u7406\u94fe\u957f\u5ea6\u548c\u6bcf\u4e2a\u95ee\u9898\u7684  global observed minimum spend \u7684\u5e73\u5747\u5dee\u503c\uff1a</p> <p></p> <p>local envelope overthinking score \\(O_{env}\\) \u662f\u6bcf\u4e2a\u6a21\u578b\u9488\u5bf9\u6bcf\u4e2a\u95ee\u9898\u7684 maximum and minimum token spend \u4e4b\u95f4\u7684\u5e73\u5747\u5dee\u503c\uff1a</p> <p></p> <p>\u5982\u8868\u4e00 calibration scores \uff08\u8fd9\u4e9b\u6821\u51c6\u5206\u6570\u4ee3\u8868 expected \u6d6a\u8d39\u8bcd\u5143\u6570\u91cf\uff09\u6240\u793a\uff1a\u548c\u9884\u671f\u63a8\u7406\u6a21\u578b overthinking \u503e\u5411\u66f4\u5927\u5047\u8bbe\u4e00\u81f4</p> <p></p>"},{"location":"essays/ThoughtTerminator/#extending-overthinking-evaluation-with-dumb500","title":"Extending Overthinking Evaluation with DUMB500","text":"<p>DUMB500 \u7684\u4e24\u4e2a\u8bc4\u4f30\u6a21\u578b\u7684\u5173\u952e\u7ef4\u5ea6\uff1a</p> <ul> <li>Accuracy\uff1a\u6a21\u578b\u80fd\u5426\u6b63\u786e\u56de\u7b54\u7b80\u5355\u95ee\u9898\uff1f</li> <li>Efficiency\uff1a\u6a21\u578b\u80fd\u5426\u5728\u4e0d\u8fdb\u884c\u4e0d\u5fc5\u8981\u9610\u8ff0\u7684\u60c5\u51b5\u4e0b\u7ed9\u51fa\u7b80\u6d01\u7684\u7b54\u6848\uff1f</li> </ul> <p>\u6570\u636e\u96c6\u4e2d\u95ee\u9898\u7c7b\u578b\u5206\u5e03\u60c5\u51b5\u3001\u95ee\u9898\u548c\u7b54\u6848\u793a\u4f8b\uff1a</p> <p></p>"},{"location":"essays/ThoughtTerminator/#evaluation-techniques-for-dumb500","title":"Evaluation techniques for DUMB500","text":"<p>DUMB500 \u4e2d\u7684\u6570\u5b66\u95ee\u9898\u8bc4\u4f30\u65b9\u5f0f\u4e0e MATH500, GPQA, and ZebraLogic \u4e2d\u7684\u4e00\u81f4\uff0c\u4f46\u7531\u4e8e\u5f15\u5165\u4e86 CODE\u3001CHAT\u3001TASK question\uff0c\u9700\u8981\u66f4\u590d\u6742\u7684 evaluation \u3002</p> <ul> <li>CODE : \u4e00\u4e2a\u57fa\u4e8e Python \u7684\u81ea\u52a8\u8bc4\u5206\u7a0b\u5e8f\u4f1a\u68c0\u67e5\u8981\u6c42\u662f\u5426\u5f97\u5230\u6ee1\u8db3</li> <li>CHAT\uff1a\u6240\u6709\u7684\u804a\u5929\u56de\u590d\u90fd\u662f\u6839\u636e\u4e00\u7cfb\u5217\u901a\u7528\u8981\u6c42\u8fdb\u884c\u8bc4\u4f30\u7684\uff0c\u6bd4\u5982\u6070\u5f53\u6027\u548c\u7b80\u6d01\u6027\u3002\u6839\u636e\u4e0d\u540c\u7684\u5b50\u4efb\u52a1\uff0c\u8fd8\u4f1a\u68c0\u67e5\u8bf8\u5982\u7cbe\u786e\u6027\u548c\u51c6\u786e\u6027\u7b49\u7279\u5b9a\u8981\u6c42\u3002\u5f53\u9700\u8981\u8fdb\u884c\u51c6\u786e\u6027\u8bc4\u4f30\u65f6\uff0c\u4e5f\u4f1a\u7ed9\u51fa\u4e00\u4e2a\u53c2\u8003\u7b54\u6848\u3002</li> <li>TASK : \u804a\u5929\u7c7b\u548c\u4efb\u52a1\u7c7b\u95ee\u9898\u7684\u8981\u6c42\u7531\u4e00\u4e2a\u8bed\u8a00\u6a21\u578b\uff08GPT-4o\uff09\u4f5c\u4e3a\u8bc4\u5224\u8005\u6765\u8fdb\u884c\u68c0\u67e5\u3002</li> </ul>"},{"location":"essays/ThoughtTerminator/#from-dumb-to-hard-questions","title":"From Dumb to Hard Questions","text":"<p>\u901a\u8fc7 Table 1 \u7684\u8bc4\u4f30\u65b9\u5f0f\uff0c\u5f97\u5230 DUMB500 \u7684difficulty\uff0c\u4e0b\u56fe\u5c55\u793a\u4e86\u4e2a\u6570\u636e\u96c6 questions \u7684\u96be\u5ea6\u5206\u5e03\uff1a\u53ef\u770b\u51fa DUMB500 \u586b\u8865\u4e86\u4e00\u4e2a\u96be\u5ea6\u533a\u95f4\u7684\u7a7a\u767d</p> <p></p> <p>\u4e0b\u56fe\u5c55\u793a\u4e86\u5229\u7528 DUMB500 \u4e2d\u7684questions\uff0c\u6240\u6d4b\u8bd5\u6a21\u578b\u5728\u6a21\u578b\u5c42\u9762\u7684\u51c6\u786e\u7387\u4e0e token spend \u4e4b\u95f4\u7684\u5173\u7cfb\uff1a\u5bf9\u4e8e\u7b80\u5355\u7684\u6570\u5b66\u95ee\u9898\uff0ctoken spend \u548c\u51c6\u786e\u7387\u4e4b\u95f4\u4e0d\u5b58\u5728\u6b63\u76f8\u5173\u5173\u7cfb\u3002\u5bf9\u4e8e\u5176\u4ed6\u9886\u57df\uff0c\u6211\u4eec\u89c2\u5bdf\u5230 token spend \u4e0e\u8bc4\u4f30\u8981\u6c42\u901a\u8fc7\u7387\uff08labeled accuracy\uff09\u4e4b\u95f4\u5448\u8d1f\u76f8\u5173\u5173\u7cfb\u3002</p> <p></p>"},{"location":"essays/ThoughtTerminator/#thoughtterminator_1","title":"ThoughtTerminator","text":"<p>\u901a\u8fc7\u5728\u56fa\u5b9a token interval \u4e2d\u5411 autoregressive stream \u52a0\u5165 a series of interrupt messages\uff0c\u6765\u63d0\u9192\u6a21\u578b\u5df2\u7ecf\u7528\u4e86\u591a\u5c11\u4e2a token\uff0c\u8fd8\u5269\u591a\u5c11\u4e2a token \u53ef\u4ee5\u7528\u3002\u5982\u679c\u5728\u65f6\u95f4\u9650\u5236\u5185\u4ecd\u672a\u7ed9\u51fa\u7b54\u6848\uff0c terminating prompt \u548c constrained decoding \u4f1a\u8feb\u4f7f\u6a21\u578b\u8f93\u51fa\u6700\u7ec8\u7b54\u6848</p> <p></p> <p>\u4e09\u4e2a\u9636\u6bb5\uff1a</p> <ul> <li>Scheduling \uff1a\u7ed9\u5b9a\u8f93\u5165\u95ee\u9898\uff0cterminator \u8ba1\u7b97\u751f\u6210\u4e00\u4e2a\u6b63\u786e\u7b54\u6848\u6240\u9700\u7684 token \u6570\u91cf\uff0c\u4ee5\u4fbf\u8bbe\u5b9a\u5176\u4e2d\u65ad\u9891\u7387\u548c\u7ec8\u6b62\u65f6\u95f4\u3002\u5176\u4e2d\uff0ctoken \u6570\u91cf\u5c06\u89c6\u95ee\u9898\u96be\u5ea6\u800c\u5b9a\u3002\u4e3a\u4e86\u8bad\u7ec3\u4e00\u4e2a difficulty estimator\uff0c\u6839\u636e\u8bad\u7ec3\u96c6\u95ee\u9898\u7684\u96be\u5ea6\u5206\u6570\uff0c\u5c06\u5b83\u4eec\u5206\u6210 10 \u4e2a\u5747\u8861\u7684\u7c7b\u522b\u3002\u7136\u540e\u5bf9\u4e00\u4e2a Llama-3-8B-Instruct \u6a21\u578b\u8fdb\u884c \u5fae\u8c03\uff0c\u4f7f\u5176\u80fd\u591f\u9884\u6d4b\u7ed9\u5b9a\u95ee\u9898\u7684\u96be\u5ea6\u7b49\u7ea7\u3002\u4e3a\u4e86\u5c06\u9884\u6d4b\u7684\u96be\u5ea6\u7b49\u7ea7\u8f6c\u6362\u4e3a\u5408\u9002\u7684 token \u6570\u91cf\uff0c\u8ba1\u7b97\u8bad\u7ec3\u96c6\u4e2d\u6bcf\u4e2a\u96be\u5ea6\u7b49\u7ea7\u4e0b\u6210\u529f\u7684\u6700\u77ed\u7b54\u6848\u7684 \u5e73\u5747\u957f\u5ea6\u3002</li> <li>Running \uff1a\u4e00\u65e6\u5728 scheduling \u4e2d\u8bbe\u5b9a\u4e86 deadline\uff0c\u57fa\u7840\u63a8\u7406\u6a21\u578b\u5c31\u5f00\u59cb\u8fd0\u884c\uff0c\u6bcf \\(n=min(250,deadline/2)\\) \u6b65\u5c31\u63d2\u5165\u4e00\u6761  interrupt message\u3002\u6bcf\u6b21\u4e2d\u65ad\uff0cterminator \u90fd\u4f1a\u5bf9\u9884\u671f\u6700\u7ec8\u7b54\u6848\u683c\u5f0f\u8fdb\u884c\u6b63\u5219\u68c0\u67e5\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u4e86\u7b54\u6848\uff0c\u7ec8\u6b62\u63a8\u7406\u94fe\u5e76\u8fd4\u56de\u7b54\u6848\uff1f</li> <li>Terminating \uff1adeadline\u4e4b\u524d\u672a\u5f97\u5230 final answer\uff0c\u53d1\u9001 termination message\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u6b63\u5219\u68c0\u67e5 constrained decoding \u751f\u6210\u7684\u6700\u7ec8\u8f93\u51fa</li> </ul>"},{"location":"essays/ThoughtTerminator/#results","title":"Results","text":""},{"location":"essays/TokenSkip/","title":"TokenSkip","text":"<p>\u7814\u7a76\u539f\u56e0\uff1adue to the autoregressive nature of LLM decoding, longer CoT outputs lead to a linear increase in inference latency, adversely affecting user experience, particularly when the CoT exceeds 10,000 tokens</p> <p>idea\uff1a TokenSkip enables LLMs to skip tokens with less semantic importance (e.g., ) and learn shortcuts between critical reasoning tokens, facilitating controllable CoT compression</p> <p></p>"},{"location":"essays/TokenSkip/#preliminaries","title":"Preliminaries","text":""},{"location":"essays/TokenSkip/#token-importance","title":"token Importance","text":"<p>\u542f\u53d1\u95ee\u9898\uff1aDoes every token in the CoT output contribute equally to deriving the answer?\u201d </p> <p>\u56de\u7b54\uff1ano</p> <p>Selective Context \uff08measure the importance of tokens in a piece of text based on the semantic confidence of LLMs\uff09\u65b9\u6cd5\uff1a</p> <p></p> <p>\u4f46\u662f Selective Context \u65b9\u6cd5\u5b58\u5728\u5c40\u9650\u6027\uff1a</p> <ul> <li>\u5927\u8bed\u8a00\u6a21\u578b\u56f0\u60d1\u5ea6\u7684\u56fa\u6709\u7279\u6027\u5bfc\u81f4\u53e5\u5b50\u672b\u5c3e\u7684\u6807\u8bb0\u91cd\u8981\u6027\u5ea6\u91cf\u503c\u8f83\u4f4e\uff08\u5373\u7f6e\u4fe1\u5ea6\u8f83\u9ad8\uff09\u3002Such position dependency impacts the factual importance measurement of each token</li> <li>\u56e0\u679c\u5927\u8bed\u8a00\u6a21\u578b\u4e2d\u7684 unidirectional attention mechanism \u53ef\u80fd\u65e0\u6cd5\u6355\u6349\u6587\u672c\u4e2d token \u91cd\u8981\u6027\u6240\u9700\u7684\u6240\u6709\u5173\u952e\u4fe1\u606f\u3002</li> </ul> <p>LMLingua-2 \u5f15\u5165\u4e86\u5229\u7528\u7c7b\u4f3c BERT \u7684 bidirectional LM \u6765\u6d4b\u91cf token\u91cd\u8981\u6027\uff1a\u5229\u7528GPT-4 to label each token as \u201cimportant\u201d or not and trains the bidirectional LM with a token classification objective</p> <p></p> <p>\u5f97\u5230\u4e0b\u56fe\u7684\u53ef\u89c6\u5316\uff08\u4e0a\u4e3a Selective Context\uff0c\u4e0b\u4e3a LLMLingua-2\uff09\uff1a</p> <p></p>"},{"location":"essays/TokenSkip/#cot-recovery","title":"CoT recovery","text":"<p>\u95ee\u9898\uff1aAre LLMs capable of restoring the CoT process from compressed outputs?</p> <p>\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u8fd9\u79cd\u80fd\u529b\u786e\u4fdd\u4e86\u538b\u7f29\u601d\u7ef4\u94fe\u7684\u53ef\u89e3\u91ca\u6027\u5f97\u4ee5\u7ef4\u6301\u3002</p> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u4e0a\u8ff0\u5b9e\u8bc1\u5206\u6790\u5f3a\u8c03\u4e86\u4fee\u526a\u5197\u4f59\u6807\u8bb0\u4ee5\u63d0\u9ad8\u601d\u7ef4\u94fe\uff08CoT\uff09\u6548\u7387\u7684\u6f5c\u529b\uff0c\u4ee5\u53ca\u5927\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u4ece\u538b\u7f29\u8f93\u51fa\u4e2d\u6062\u590d\u601d\u7ef4\u94fe\u7684\u80fd\u529b\u3002</p>"},{"location":"essays/TokenSkip/#tokenskip_1","title":"TokenSkip","text":""},{"location":"essays/TokenSkip/#token-pruning","title":"Token Pruning","text":"<p>\u4ece\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u7684\u601d\u7ef4\u94fe\u8f93\u51fa\u4e2d\u4fee\u526a\u6389\u5197\u4f59 token\uff0c\u5e76\u5229\u7528\u8fd9\u4e9b\u7ecf\u8fc7\u4fee\u526a\u7684\u601d\u7ef4\u94fe\u8f68\u8ff9\u5bf9\u5927\u8bed\u8a00\u6a21\u578b\u8fdb\u884c\u5fae\u8c03\u3002The token pruning process is guided by the concept of token importance.</p> <p>\u8fc7\u7a0b\uff1a\u6839\u636eLLMLingua-2\u8ba1\u7b97\u6bcf\u4e2a\u601d\u7ef4\u94fetoken\u7684\u8bed\u4e49\u91cd\u8981\u6027 \\(I(c)\\)\uff0c\u636e\u6b64\u6392\u5e8f\uff0c\u7ed9\u5b9a\u671f\u671b\u538b\u7f29\u7387 \\(\\gamma\\) \uff0c\u4ee3\u8868\u4fee\u526a\u9608\u503c\uff08\u6bd4\u5982\u03b3=0.6\uff0c\u4fdd\u755960%\u7684token\uff09</p>"},{"location":"essays/TokenSkip/#training","title":"Training","text":"<p>\u6570\u636e\u51c6\u5907\uff1a</p> <p>\u9996\u5148\u7528\u5305\u542b N \u4e2a\u6837\u672c\u7684\u8bad\u7ec3\u96c6 D \u8f93\u5165\u6a21\u578b M \u5f97\u5230 N \u6761\u601d\u7ef4\u94fe\uff08\u8fc7\u6ee4\u9519\u8bef\u7b54\u6848\u7684trajectories\uff09\uff0c\u7136\u540e\u5bf9\u5176\u8fdb\u884c pruning\uff0c\u5f97\u5230\u4e09\u5143\u7ec4\uff1a\u27e8question, compressed CoT, answer\u27e9\uff0c\u6700\u7ec8\u8f93\u5165\u683c\u5f0f\u4e3a\uff1a</p> <p></p> <p>\u5373[\u95ee\u9898\u3001\u5206\u9694\u7b26\u3001\u538b\u7f29\u6bd4\u7387\u3001\u5206\u9694\u7b26\u3001\u538b\u7f29\u540e\u7684\u601d\u7ef4\u94fe\u3001\u7b54\u6848]\uff0cEOS\u4e3a\u5e8f\u5217\u7ed3\u675f\u7b26\uff0c\\(\\gamma\\) \u4ee5\u6570\u503c\u5f62\u5f0f\u5d4c\u5165[\u95ee\u9898] [EOS] '\u538b\u7f29\u6bd4\u4f8b0.6' [EOS]. output sequence \\(y\\) \u662f\u538b\u7f29\u540e\u7684\u601d\u7ef4\u94fe\u548c\u7b54\u6848\u7684\u62fc\u63a5\uff0c\u635f\u5931\u51fd\u6570\u5982\u4e0b\uff1a</p> <p></p> <p>\u4e3a\u4e86\u4fdd\u7559\u5927\u8bed\u8a00\u6a21\u578b\u7684\u63a8\u7406\u80fd\u529b\uff0c\u8fd8\u5728\u8bad\u7ec3\u6570\u636e\u4e2d\u7eb3\u5165\u4e86\u4e00\u90e8\u5206\u539f\u59cb\u601d\u7ef4\u94fe\u8f68\u8ff9\uff0c\u5c06\u5176\u538b\u7f29\u7387\u03b3\u8bbe\u4e3a 1\u3002</p> <p>\u5c06\u4e0a\u8ff0 Input \u4f5c\u4e3a\u8bad\u7ec3\u6570\u636e\u7528\u6765\u8bad\u7ec3\u6a21\u578b\uff08loRA\u5fae\u8c03\uff09\uff0c\u4f7f\u5176\u5b66\u4f1a\u8df3\u8fc7\u4e0d\u91cd\u8981\u7684\u6807\u8bb0\u3002</p>"},{"location":"essays/TokenSkip/#inference","title":"Inference","text":"<p>\u63a8\u7406\u65f6\uff0cprompt\u683c\u5f0f\u5982\u4e0b\uff1a</p> <p>[question x, [EOS], \\(\\gamma\\) ,[EOS]]</p> <p>\u8f93\u51fa\u5e8f\u5217\u5305\u542b\u538b\u7f29\u540e\u7684\u601d\u7ef4\u94fe\u548c\u7b54\u6848\u3002</p>"},{"location":"essays/TokenSkip/#experiment","title":"Experiment","text":"<p>\u5b9e\u9a8c\u6570\u636e\u96c6\uff1a GSM8K &amp; MATH-500\uff1b\u5b9e\u9a8c\u6a21\u578b\uff1a LLaMA-3.1-8B-Instruct &amp; Qwen2.5-Instruct series</p> <p>\u8bc4\u4f30\u6307\u6807\uff1aaccuracy, the number of CoT tokens, and inference latency per sample\uff0c\u7528\u6765\u81eaDeepSeek-Math\u7684\u811a\u672c\u6765\u8bc4\u4f30\u6a21\u578b\u6027\u80fd\u3002\u6b64\u5916\uff0cCoT \u7684\u5b9e\u9645\u538b\u7f29\u7387\u4e5f\u4f1a\u7528\u4e8e\u4e0e\u6307\u5bfc\u538b\u7f29\u7387\u6bd4\u8f83\u3002</p>"},{"location":"essays/TokenSkip/#_1","title":"\u5b9e\u9a8c\u7ec6\u8282","text":"<p>LLMLingua2\u538b\u7f29 CoT\uff0c\u538b\u7f29\u7387 \\(\\gamma\\) \u4ece {0.5, 0.6, 0.7, 0.8, 0.9, 1.0} \u4e2d\u968f\u673a\u9009\u62e9\uff0c\u91c7\u7528LoRA \u5fae\u8c03\uff08\u79e9 r \u8bbe\u7f6e\u4e3a 8\uff0c\u7f29\u653e\u53c2\u6570 \u03b1 \u8bbe\u7f6e\u4e3a 16\uff0c\u4ec5\u8c03\u65740.2%\u7684\u6a21\u578b\u53c2\u6570\uff09</p> <p>\u8bad\u7ec3\u6210\u672c\u4f4e\uff0c\u5728 3090 GPU \u4e0a\u8bad\u7ec3 70 \u4ebf\u53c2\u6570\u6a21\u578b\u5927\u7ea6\u9700\u8981 2 \u5c0f\u65f6\uff0c\u8bad\u7ec3 140 \u4ebf\u53c2\u6570\u6a21\u578b\u5927\u7ea6\u9700\u8981 2.5 \u5c0f\u65f6\u3002\u5728\u63a8\u7406\u65f6\uff0c\u5bf9\u4e8e GSM8K \u6570\u636e\u96c6\uff0c\u6700\u5927\u6807\u8bb0\u6570 max_len \u8bbe\u7f6e\u4e3a 512\uff1b\u5bf9\u4e8e MATH-500\uff0c\u5219\u4e3a1024. \uff08\\(max\\_len \\times \\gamma\\)\uff09</p> <p>Pytorch 2.1.0 on 2\u00d7NVIDIA GeForce RTX 3090 GPU (24GB) with CUDA 12.1, and an Intel(R) Xeon(R) Platinum 8370C CPU with 32 cores. </p>"},{"location":"essays/TokenSkip/#baseline","title":"Baseline","text":"<ol> <li>Prompt-based Reduction\uff1a\u901a\u8fc7prompt \u6307\u793a\u5927\u6a21\u578b\u5728CoT\u8fc7\u7a0b\u4e2d\u51cf\u5c11\u56fa\u5b9a\u6bd4\u4f8b\u7684\u8f93\u51fatoken</li> <li>Truncation: \u5f3a\u5236\u622a\u65ad\uff0c\u5373\u9650\u5236\u8f93\u51fa\u6807\u8bb0\u7684\u6700\u5927\u6570\u91cf\uff0c\u5c06\u601d\u7ef4\u94fe\u7684\u8f93\u51fa\u538b\u7f29\u5230\u4e00\u4e2a\u56fa\u5b9a\u7684\u957f\u5ea6\u3002</li> </ol>"},{"location":"essays/TokenSkip/#_2","title":"\u5b9e\u9a8c\u7ed3\u679c","text":"<p>TokenSkip \u5728 GSM8K \u6570\u636e\u96c6\u4e0a\u4f7f\u7528 Qwen2.5-Instruct \u7cfb\u5217\u6a21\u578b\u7684\u6027\u80fd\u8868\u73b0\uff1a\u53ef\u4ee5\u53d1\u73b0\uff0c\u6a21\u578b\u89c4\u6a21\u8d8a\u5927\uff0c\u538b\u7f29\u7387\u5bf9\u6027\u80fd\u5f71\u54cd\u66f4\u5c0f\uff08Qwen2.5-14B-Instruct \u5728\u4fee\u526a\u6389 40% \u7684\u6807\u8bb0\u65f6\uff0c\u51e0\u4e4e\u6ca1\u6709\u6027\u80fd\u4e0b\u964d\uff08\u4e0b\u964d\u5e45\u5ea6\u5c0f\u4e8e 0.4%\uff09\u3002\u5373\u4f7f\u5728\u538b\u7f29\u7387\u4e3a 0.5 \u7684\u60c5\u51b5\u4e0b\uff0c\u8be5\u6a21\u578b\u4ecd\u4fdd\u6301\u7740\u8f83\u5f3a\u7684\u63a8\u7406\u80fd\u529b\uff0c\u6027\u80fd\u4ec5\u4e0b\u964d 2%\uff09</p> <p></p> <p>\u4e0ebaseline\u5bf9\u6bd4\uff1a</p> <p></p> <p>prompt-based reduction \u65b9\u6cd5\u4e2d\uff0c\u5b9e\u9645\u538b\u7f29\u7387\u4e0e\u76ee\u6807\u538b\u7f29\u7387\u4e0d\u7b26\u3002\u5728 Truncation \u65b9\u6cd5\u4e2d\uff0c\u867d\u7136\u5b9e\u9645\u4e0e\u76ee\u6807\u538b\u7f29\u7387\u76f8\u7b26\uff0c\u4f46\u662f\u6027\u80fd\u663e\u8457\u4e0b\u964d\uff08GSM8K \u6570\u636e\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u4e0b\u964d\u4e86 79%\uff0c\u5728 MATH-500 \u6570\u636e\u96c6\u4e0a\u4e0b\u964d\u4e86 21%\uff09\u3002\u800cTokenSkip \u6cd5\u4e0d\u4ec5\u5b9e\u73b0\u538b\u7f29\u7387\u76f8\u7b26\u3001\u6027\u80fd\u4e5f\u6ca1\u6709\u51fa\u73b0\u663e\u8457\u53d8\u5316\uff0c\u54cd\u5e94\u65f6\u95f4\u53d8\u5feb\u3002</p>"},{"location":"essays/TokenSkip/#_3","title":"\u5206\u6790","text":""},{"location":"essays/TokenSkip/#compression-ratio","title":"Compression Ratio","text":"<p>\u4e3a\u4e86\u63a2\u7a76\u5728 Compression Ratio \u8f83\u4f4e\uff08\u538b\u7f29\u8f83\u591a\uff09\u60c5\u51b5\u4e0b TokenSkip \u7684\u6027\u80fd\u8868\u73b0\uff0c\u8bad\u7ec3\u53d8\u4f53\u6a21\u578b 'More Ratio'\uff0c\u7528\u4e8e\u6d4b\u5f53 \\(\\gamma = 0.3 ~and~ 0.4\\) \u7684\u60c5\u51b5\uff0c\u53d1\u73b0\u7b26\u5408\u7a0b\u5ea6\u5927\u5e45\u964d\u4f4e\uff0c\u4e14\u5728\u6574\u4f53\u4e0a\u7b26\u5408\u7a0b\u5ea6\u4e0d\u5982 TokenSkip\uff1a</p> <p></p> <p>\u5047\u8bbe\u5c06\u5176\u5f52\u56e0\u4e8e\u5bf9 reasoning tokens \u7684\u8fc7\u5ea6\u4fee\u526a\uff0c\u4f7f\u5f97\u8865\u5168\u5185\u5bb9\u65f6\u5173\u952e\u5185\u5bb9\u4e22\u5931\uff0c\u963b\u788d\u6a21\u578b\u6709\u6548\u8bad\u7ec3\u3002</p>"},{"location":"essays/TokenSkip/#importance-metric","title":"Importance Metric","text":"<p>\u4e0d\u540c\u6a21\u578b\u7ed9 token \u91cd\u8981\u6027\u6253\u5206\uff0c\u5176\u4e2d\uff0c\u8ba9GPT-4o \u7ed9\u51fa\u601d\u7ef4\u94fe\u8f68\u8ff9\u7684\u6700\u4f73\u538b\u7f29\u683c\u5f0f\u5efa\u8bae\uff0c\u8fd9\u4e00\u60c5\u51b5\u88ab\u79f0\u4e3a GPT-4o-Optimal \u3002\u5c06\u6240\u6709\u7531  GPT-4o \u751f\u6210\u7684\u8bad\u7ec3\u6570\u636e\u7528\u4e8e\u8bad\u7ec3 TokenSkip \u53d8\u4f53\uff0c\u7528 [optimal] token \u6765\u63d0\u793a\u6a21\u578b\uff0c\u5f97\u5230 GPT-4o-Optimal \u7ed3\u679c\u3002</p> <p></p>"},{"location":"essays/TokenSkip/#length-budget","title":"length Budget","text":""},{"location":"essays/TokenSkip/#case","title":"case","text":"<p>\u8fd9\u4e9b\u793a\u4f8b\u6e05\u6670\u5730\u8868\u660e\uff0cTokenSkip \u4f7f\u5f97\u5927\u8bed\u8a00\u6a21\u578b\u80fd\u591f\u5b66\u4e60\u5173\u952e\u63a8\u7406\u6807\u8bb0\u4e4b\u95f4\u7684\u6377\u5f84\uff0c\u800c\u4e0d\u662f\u4ece\u5934\u751f\u6210\u66f4\u77ed\u7684\u601d\u7ef4\u94fe\uff08CoT\uff09.</p> <ul> <li>\u6570\u503c\u548c\u6570\u5b66\u65b9\u7a0b\u5f0f\u4f1a\u88ab\u4f18\u5148\u4fdd\u7559</li> <li>okenSkip \u5e76\u6ca1\u6709\u51cf\u5c11\u63a8\u7406\u6b65\u9aa4\u7684\u6570\u91cf\uff0c\u800c\u662f\u4fee\u526a\u4e86\u8fd9\u4e9b\u6b65\u9aa4\u4e2d\u591a\u4f59\u7684\u6807\u8bb0</li> </ul> <p></p>"},{"location":"essays/TokenSkip/#_4","title":"\u601d\u8003","text":"<p>TokenSkip \u662f\u6bd4\u8f83\u7b26\u5408\u4eba\u7c7b\u601d\u7ef4\u7684\uff0c\u6211\u4eec\u601d\u8003\u65f6\u603b\u503e\u5411\u4e8e\u8fc7\u6ee4\u6389\u5e9f\u8bdd\uff0c\u4f18\u5148\u601d\u8003\u66f4\u91cd\u8981\u7684\u4fe1\u606f\u6d41\uff0c\u4ee5\u4fbf\u6548\u7387\u6700\u5927\u5316\u3002\u4e2a\u4eba\u8ba4\u4e3a\u65b9\u6cd5\u5f88\u521b\u65b0\uff0c</p> <p>\u4f46\u662f\u7531\u4e8e\u76ee\u524d\u4e3b\u6d41\u7684\u89e3\u51b3 overthinking \u7684\u65b9\u5f0f\u662f\u5c06\u8f93\u51fa\u601d\u7ef4\u94fe\u5206\u6210\u5e8f\u5217thoughts\u540e\u518d\u6839\u636e\u8f6c\u6298\u8bcd\u6216\u8bed\u6c14\u8bcd\uff08\u201cwait!\u201d \"Alternatively\"\uff09\u5206\u7c7b\uff0c\u6240\u4ee5TokenSkip\u53ef\u80fd\u4f1a\u4f7f\u5f97\u8f93\u51fa\u601d\u7ef4\u94fe\u65e0\u6cd5\u88ab\u6b63\u786e\u5212\u5206\uff0c\u4e5f\u8bb8\u53ef\u7531\u88ab TokenSkip \u7684\u601d\u7ef4\u94fe\u5f97\u5230\u5206\u7c7b\u7684\u65b0\u8303\u5f0f\uff1f</p>"},{"location":"essays/Social/MiMeQA/","title":"MiMeQA","text":"<p>\u76ee\u524d\u5728\u4eba\u5de5\u793e\u4ea4\u63a8\u7406\u9886\u57df\u7684\u7814\u7a76\u90fd\u4f9d\u8d56\u4e8e\u4ec5\u4f7f\u7528\u8bed\u8a00\u6216\u8bed\u8a00\u4e3b\u5bfc\u7684\u65b9\u6cd5\u6765\u8fdb\u884c\u6a21\u578b\u7684\u57fa\u51c6\u6d4b\u8bd5\u548c\u8bad\u7ec3\uff0c\u8fd9\u5c31\u5bfc\u81f4\u76f8\u5173\u7cfb\u7edf\u5728\u8a00\u8bed\u4ea4\u6d41\u65b9\u9762\u6709\u6240\u8fdb\u6b65\uff0c\u4f46\u5728\u975e\u8a00\u8bed\u793e\u4ea4\u7406\u89e3\u65b9\u9762\u5374\u56f0\u96be\u91cd\u91cd\u3002</p> <p>\u4e3a\u4e86\u514b\u670d\u8fd9\u4e00\u5c40\u9650\uff0c\u6211\u4eec\u5229\u7528\u4e86\u4e00\u79cd\u5bcc\u542b\u975e\u8a00\u8bed\u548c\u793e\u4ea4\u4e92\u52a8\u7684\u5168\u65b0\u6570\u636e\u6765\u6e90 \u2014\u2014 mime video (\u9ed8\u5267)</p> <p>dataset resource\uff1ahttps://github.com/MIT-MI/MimeQA</p>"},{"location":"essays/Social/MiMeQA/#dataset","title":"Dataset","text":""},{"location":"essays/Social/MiMeQA/#question-hierarchy","title":"Question Hierarchy","text":"<p>\u5728\u65f6\u95f4\u5c3a\u5ea6\u4e0a\u5212\u5206\u4e3a\u4e09\u4e2a\u5c42\u6b21\uff0c\u4ece\u4f4e\u5c42\u6b21\u7684\u89c6\u89c9\u8bc6\u522b\u9010\u6b65\u8fc7\u6e21\u5230\u573a\u666f\u5c42\u9762\u89e3\u8bfb\u4ee5\u53ca\u5168\u5c40\u5c42\u9762\u7684\u8ba4\u77e5\u63a8\u7406\u3002</p> <p></p> <p>Grounding the Imagined </p> <p>\u9996\u5148\u662f\u611f\u77e5\u5c42\u9762\u3002\u6a21\u578b\u9700\u8981\u4e86\u89e3\u9ed8\u5267\u4e2d\u7684\u62bd\u8c61\u624b\u52bf\u6216\u8eab\u4f53\u52a8\u4f5c\u7684\u5f15\u7533\u610f\u4e49\uff08\u62cd\u6253\u7fc5\u8180\u7684\u52a8\u4f5c\u53ef\u80fd\u4ee3\u8868\u4e00\u53ea\u6b63\u5728\u98de\u7fd4\u7684\u9e1f\u3002\u8fd9\u4e9b\u624b\u52bf\u57fa\u4e8e\u4eba\u7c7b\u7684\u5177\u8eab\u4f53\u9a8c\uff0c\u7406\u89e3\u5b83\u4eec\u7684\u542b\u4e49\u5bf9\u4e8e\u6a21\u4eff\u5f0f\u4ea4\u6d41\u81f3\u5173\u91cd\u8981\uff09\u3002\u6545\u8be5\u5c42\u95ee\u9898\u4e3b\u8981\u6d89\u53ca\u8bc6\u522b\u9ed8\u5267\u8868\u6f14\u4e2d\u7684\u57fa\u672c\u89c6\u89c9\u5143\u7d20\uff0c\u4f8b\u5982\u7269\u4f53\u548c\u6d3b\u52a8\u3002</p> <p>Scene-Level </p> <p>examine social interactions within a short video segment. \u5b9a\u4e49\u4e09\u4e2a\u7c7b\u522b\u6765\u8bc4\u4f30\uff1a</p> <ul> <li>Temporal reasoning</li> <li>Affect recognition</li> <li>Intention and behavior understanding</li> </ul> <p>Global-Level</p>"},{"location":"essays/Social/SocialGenome/","title":"SocialGenome","text":"<p>Social Genome\uff0c\u9996\u4e2a benchmark for fine-grained, grounded social reasoning abilities of multimodal models.</p> <ul> <li> <p>first modeling challenge to study external knowledge in social reasoning</p> </li> <li> <p>Multimodal cues are often fine-grained (e.g., a fleeting glance), interleaved (e.g., a shrug followed by a sigh), and context-dependent, requiring external knowledge of contextual information to be interpreted accurately</p> </li> </ul> <p></p> <p>\u4eba\u5de5\u6807\u6ce8\u63a8\u7406 trace \u4f8b\uff1a</p> <p></p>"},{"location":"essays/Social/SocialGenome/#building","title":"Building","text":"<p>Source\uff1a</p> <ul> <li>272 seed videos and 1486 questions adapted from SOCIAL-IQ 2.0 dataset</li> <li>videos \u5185\u5bb9\u5305\u62ec real-world face-to-face dyadic &amp; multi-party interaction \uff08\u6bcf\u4e2a\u89c6\u9891 1 \u5206\u949f\uff0c\u603b\u8ba1\u7ea6 4.5 \u5c0f\u65f6\uff09</li> <li>questions \u5185\u5bb9\u6d89\u53ca social dynamics, behaviors, emotions, and cognitive states of both individuals and groups</li> </ul> <p>\u57fa\u4e8e\u8be5 source\uff0cSocial Genome \u5f15\u5165\u4e86 a new set of 1486 human reasoning traces with 5700+ steps that answer these questions</p>"},{"location":"essays/Social/SocialGenome/#task-notation","title":"Task Notation","text":"<p>video V \uff1a\u63cf\u7ed8\u793e\u4ea4\u4e92\u52a8</p> <p>question Q \uff1a\u5173\u4e8e\u4e92\u52a8\u4e2d\u7684\u793e\u4ea4\u5185\u5bb9</p> <p>a corresponding set of answer options A \uff1a\\(\\{A_{correct},A_{incorrect1},A_{incorrect2},A_{incorrect3}\\}\\)</p> <p>\u6267\u884c\u4efb\u52a1\u7684\u6a21\u578b\u5fc5\u987b\u751f\u6210\u4e00\u4e2a\u63a8\u7406\u8f68\u8ff9 R \uff1a\\(\\{e_1,e_2,...,e_n\\}\\) \uff0c\u5176\u4e2d\u6bcf\u4e2a\u63a8\u7406\u6b65\u9aa4\u4ee3\u8868\u4e00\u6761\u6709\u52a9\u4e8e\u4ece A \u4e2d\u9009\u62e9\u4e00\u4e2a\u7b54\u6848\u7684\u793e\u4ea4\u63a8\u7406\u7684 evidence\uff0c\u4e14\u5fc5\u987b\u6807\u8bb0\u6709\u4e24\u4e2a\u5c5e\u6027\uff1a</p> <ul> <li>a modality tag \\(m_i \\in \\{visual,verbal,vocal,n/a\\}\\) \uff0c\u7528\u4e8e\u6307\u793a evidence \u7684\u4ea4\u6d41\u6a21\u6001</li> <li>an external knowledge tag \\(k_i \\in \\{yes,no\\}\\) \uff0c\u7528\u4e8e\u6307\u793a\u8be5 evidence \u662f\u5426\u53c2\u8003\u4e86\u60c5\u5883\u4fe1\u606f\u7684 external knowledge</li> </ul> <p>\u751f\u6210 R \u5e76\u56de\u7b54 Q \u7684\u8fd9\u9879\u4efb\u52a1\u8bc4\u4f30\u4e86\u6a21\u578b\u63d0\u53d6\u548c\u53c2\u8003\u4e0e\u793e\u4ea4\u63a8\u7406\u76f8\u5173\u7684\u4eba\u7c7b\u4ea4\u6d41\u548c\u77e5\u8bc6\u7684\u591a\u6a21\u6001\u65b9\u9762\u7684\u80fd\u529b\u3002</p> <p>\u7ed9\u5b9a input tuple \\((V,Q,A)\\) \uff0c\u6267\u884c\u4efb\u52a1\u7684\u6a21\u578b\u751f\u6210 output tuple \\((A_a,R)\\)</p> <p>Metrics in SOCIAL GENOME \u4f1a\u7814\u7a76\u7b54\u6848\u7684\u793e\u4ea4\u63a8\u7406\u51c6\u786e\u6027\uff0c\u4ee5\u53ca\u63a8\u7406\u75d5\u8ff9 R \u4e2d\u793e\u4ea4\u63a8\u7406\u7684\u8bed\u4e49\u548c\u7ed3\u6784\u65b9\u9762\u3002</p>"},{"location":"essays/Social/SocialGenome/#social-reasoning-trace-annotations","title":"Social Reasoning Trace Annotations","text":"<p>Human Annotation</p> <p>\u7ed9\u5b9a  input tuple \uff0c\u6807\u6ce8\u4eba\u5458\u9605\u8bfb\u95ee\u9898\u548c\u7b54\u6848\u9009\u9879\uff0c\u89c2\u770b\u89c6\u9891\uff0c\u64b0\u5199\u63a8\u7406\u75d5\u8ff9\u3002\uff08\u8fd9\u4e5f\u592a dirty work\u4e86\uff09</p> <p>Grounded and Fine-Grained Behaviors</p> <ul> <li>low-level \u89c2\u5bdf\uff1a\u611f\u77e5\u5230\u7684\uff0c\u57fa\u4e8e\u7ec6\u7c92\u5ea6\u7684\u89c2\u5bdf\uff0c\u4f8b\u5982\uff0c\u80a2\u4f53\u8bed\u8a00\u7684\u53d8\u5316</li> <li>high-level \u5904\u7406\u8fc7\u7a0b\uff1a\u81ea\u4e0a\u800c\u4e0b\u7684\uff0c\u4f8b\u5982\uff0c\u5185\u9690\u7684\u60c5\u5883\u77e5\u8bc6</li> </ul> <p>\u6ce8\u91ca\u4eba\u5458\u88ab\u8981\u6c42\u53c2\u8003\u4ed6\u4eec\u5728\u56de\u7b54\u95ee\u9898\u65f6\u6240\u4f9d\u8d56\u7684\u4efb\u4f55 low-level \u548c high-level \u7684\u8bc1\u636e\uff1a\u4f8b\u5982\uff0clow-level \u7684\u8bc1\u636e\u53ef\u80fd\u662f \u201c\u8fd9\u4f4d\u5973\u58eb\u540e\u9000\u4e00\u6b65\uff0c\u5634\u5df4\u5927\u5f20\uff08\u89c6\u89c9\u7ebf\u7d22\uff09\u201d\uff0c\u800c\u89e3\u91ca\u8be5\u4f4e\u5c42\u6b21\u7ebf\u7d22\u7684 high-level \u8bc1\u636e\u53ef\u80fd\u662f \u201c\u8fd9\u4f4d\u5973\u58eb\u5f88\u60ca\u8bb6\uff08\u5173\u4e8e\u2018\u60ca\u8bb6\u2019\u53ef\u80fd\u5982\u4f55\u8868\u73b0\u7684\u5916\u90e8\u77e5\u8bc6\uff09\u201d\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u63a8\u7406\u6b65\u9aa4\uff0c\u6ce8\u91ca\u4eba\u5458\u4f1a\u6807\u8bb0\u6240\u53c2\u8003\u7684\u611f\u77e5 modality tag\uff08visual, verbal, vocal, n/a\uff09</p> <p>Grounded External Knowledge </p> <p>\u6ce8\u91ca\u4eba\u5458\u7528 yes or no \u6807\u8bb0\u6bcf\u4e2a\u63a8\u7406\u6b65\u9aa4\u662f\u5426\u6709\u53c2\u8003 external knowledge\uff0c\u5916\u90e8\u77e5\u8bc6\u5305\u62ec\uff1a</p> <ul> <li>contextual norms</li> <li>cultural expectations</li> <li>prior understanding of social commonsense</li> </ul> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u540d\u7537\u5b50\u4e3e\u8d77\u624b\u81c2\uff0c\u800c\u6ce8\u91ca\u8005\u5c06\u4ed6\u7684\u52a8\u4f5c\u8bc6\u522b\u4e3a \u201c\u51fb\u638c\u201d\uff0c\u90a3\u4e48\u5c06\u8be5\u624b\u52bf\u8bc6\u522b\u5e76\u89e3\u8bfb\u4e3a \u201c\u6210\u529f\u7684\u8868\u73b0\u201d \u5219\u662f\u57fa\u4e8e\u793e\u4f1a\u89c4\u8303\u65b9\u9762\u7684\u5916\u90e8\u77e5\u8bc6\u3002</p> <p>Ensuring Annotation Quality</p> <p>\u4e13\u5bb6\u9a8c\u8bc1\uff0c\u5e76\u5bf9\u6ce8\u91ca\u4e0d\u5b8c\u6574\u6216\u504f\u79bb\u8bf4\u660e\u7684\u60c5\u51b5\u8fdb\u884c\u4e86\u4fee\u6b63\u3002</p>"},{"location":"essays/Social/SocialGenome/#dataset-statistics","title":"Dataset Statistics","text":"<p>\u5305\u542b 1486 \u6761\u7531\u4eba\u5de5\u8be6\u7ec6\u6807\u6ce8\u7684\u793e\u4ea4\u63a8\u7406\u8f68\u8ff9\uff0c\u603b\u5171\u6709 5777 \u4e2a\u63a8\u7406\u6b65\u9aa4\uff0c\u6bcf\u6761\u8f68\u8ff9\u5e73\u5747\u6709 3.89 \u00b1 1.68 \u4e2a\u6b65\u9aa4\uff08\u6700\u5c11 1 \u4e2a\u6b65\u9aa4\uff0c\u6700\u591a 10 \u4e2a\u6b65\u9aa4\uff09\uff0c\u6bcf\u6761\u63a8\u7406\u8f68\u8ff9\u5e73\u5747\u6709 43 \u00b1 26 \u4e2a\u5355\u8bcd\uff0c\u6bcf\u4e2a\u6b65\u9aa4\u5e73\u5747\u6709 11 \u00b1 5 \u4e2a\u5355\u8bcd\u3002\u63a8\u7406\u6b65\u9aa4\u501f\u9274\u4e86\u591a\u6a21\u6001\u8bc1\u636e\uff0c\u5176\u4e2d 44% \u7684\u6b65\u9aa4\u53c2\u8003\u4e86\u89c6\u89c9\u7ebf\u7d22\uff0c27% \u7684\u6b65\u9aa4\u53c2\u8003\u4e86\u8bed\u8a00\u7ebf\u7d22\uff0c17% \u7684\u6b65\u9aa4\u53c2\u8003\u4e86\u8bed\u97f3\u7ebf\u7d22\u3002\u603b\u4f53\u800c\u8a00\uff0c77% \u7684\u63a8\u7406\u8f68\u8ff9\u53c2\u8003\u4e86\u81f3\u5c11\u4e00\u4e2a\u89c6\u89c9\u7ebf\u7d22\uff0c63% \u7684\u63a8\u7406\u8f68\u8ff9\u53c2\u8003\u4e86\u81f3\u5c11\u4e00\u4e2a\u8bed\u8a00\u7ebf\u7d22\uff0c47% \u7684\u63a8\u7406\u8f68\u8ff9\u53c2\u8003\u4e86\u81f3\u5c11\u4e00\u4e2a\u8bed\u97f3\u7ebf\u7d22\u3002</p> <p>External knowledge \u8d77\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\uff1a51% \u7684\u63a8\u7406\u6b65\u9aa4\u53c2\u8003\u4e86\u5916\u90e8\u77e5\u8bc6\uff0c\u6bcf\u6761\u63a8\u7406\u8f68\u8ff9\u5e73\u5747\u53c2\u8003\u4e86 2 \u6761\u5916\u90e8\u77e5\u8bc6\u3002\u901a\u8fc7\u4f7f\u7528 spaCy \u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff08NER\uff09\uff0c\u6211\u4eec\u53d1\u73b0\u63d0\u53ca\u4e86 11253 \u4e2a\u5b9e\u4f53\uff08\u4eba\u7269\u3001\u7269\u4f53\u3001\u6982\u5ff5\uff09\uff0c\u6bcf\u6761\u63a8\u7406\u8f68\u8ff9\u6d89\u53ca 7.6 \u4e2a\u72ec\u7279\u7684\u5b9e\u4f53\u4ee5\u53ca 2.23 \u79cd\u60c5\u611f\uff0c\u8fd9\u8868\u660e\u6ce8\u91ca\u7684\u5bc6\u5ea6\u5f88\u9ad8\u3002</p>"},{"location":"essays/Social/SocialGenome/#social-reasoning-metrics-and-statistics","title":"Social Reasoning Metrics and Statistics","text":"<p>\u5f00\u53d1\u7684 Metrics \u7528\u4e8e\u63ed\u793a\u6a21\u578b\u793e\u4ea4\u63a8\u7406\u548c\u591a\u6a21\u6001\u57fa\u7840\u80fd\u529b\u7684\u4f18\u52bf\u4e0e\u4e0d\u8db3\uff0c\u4ee5\u53ca\u6a21\u578b\u63a8\u7406\u8f68\u8ff9\u4e0e\u4eba\u7c7b\u63a8\u7406\u7684\u5dee\u5f02\u7a0b\u5ea6\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6837\u672c\uff0c\u8ba1\u7b97\u6a21\u578b\u63a8\u7406\u8f68\u8ff9 \\(R_M\\) \u4e0e\u4eba\u7c7b\u63a8\u7406\u8f68\u8ff9 \\(R_H\\) \u4e4b\u95f4\u7684\u5982\u4e0b\u6307\u6807\uff1a</p> <ul> <li> <p>Accuracy \uff1a\u901a\u8fc7\u5c06\u6a21\u578b\u751f\u6210\u7684\u7b54\u6848\u4e0e\u771f\u5b9e\u7b54\u6848\u8fdb\u884c\u6bd4\u8f83\u6765\u8861\u91cf\u5176\u51c6\u786e\u6027\u3002</p> </li> <li> <p>Similarity-Trace \uff1a\u8861\u91cf\u6a21\u578b\u63a8\u7406\u8f68\u8ff9\u4e0e\u4eba\u7c7b\u63a8\u7406\u8f68\u8ff9\u7684 high-level semantic similarity</p> </li> </ul> <p></p> <p>\u91cc\u9762\u7684 \\(R_M\\) \u548c \\(R_H\\) \u5206\u522b\u662f\u5404\u81ea\u63a8\u7406\u8f68\u8ff9\u7684 aggregate embedding of evidence steps\uff0c\u5d4c\u5165\u6a21\u578b\u4e3a all-MiniLM-L6-v2\u3002</p> <p>\u5176\u5b83\u8bed\u4e49\u76f8\u4f3c\u5ea6\u6307\u6807\u4e5f\u662f\u5982\u6b64\u3002\u503c\u8d8a\u9ad8\uff0c\u8bed\u4e49\u4fe1\u606f\u5339\u914d\u5ea6\u8d8a\u5f3a\u3002</p> <ul> <li>Similarity-Step \uff1a\u8861\u91cf\u6a21\u578b\u63a8\u7406\u8f68\u8ff9\u4e0e\u4eba\u7c7b\u63a8\u7406\u8f68\u8ff9\u7684 fine-grained semantic similarity. \u5bf9\u4e8e \\(R_M\\) \u4e2d\u6bcf\u4e2a\u6b65\u9aa4 e_i \uff0c\u627e\u5230 R_H \u4e2d\u8bed\u4e49\u6700\u63a5\u8fd1\u7684\u6b65\u9aa4 h_j\uff0c\u6700\u540e\u7b97\u6240\u6709\u6700\u5927\u76f8\u4f3c\u5ea6\u7684\u5747\u503c\uff1a</li> </ul> <p></p> <p>\u5176\u4e2de_i\u662f\u8bc1\u636e\u6b65\u9aa4e_i\u7684\u5d4c\u5165\u5411\u91cf\uff0ch_j\u662f\u8bc1\u636e\u6b65\u9aa4h_j\u7684\u5d4c\u5165\u5411\u91cf\u3002\u6570\u503c\u8d8a\u9ad8\uff0c\u53cd\u6620\u51faR_M\u4e0eR_H\u4e2d\u7ec6\u7c92\u5ea6\u8bc1\u636e\u6b65\u9aa4\u4e4b\u95f4\u7684\u8bed\u4e49\u4fe1\u606f\u5339\u914d\u5ea6\u8d8a\u5f3a\uff08\u6700\u5927\u503c\u4e3a1\uff09</p> <ul> <li>Similarity-Num Steps : \u6a21\u578b\u63a8\u7406\u8f68\u8ff9\u4e2d\uff0c\u4e0e\u4eba\u7c7b\u63a8\u7406\u8f68\u8ff9\u4e2d\u4efb\u610f\u6b65\u9aa4\u76f8\u6bd4\uff0c\u8bed\u4e49\u76f8\u4f3c\u5ea6\u9ad8\u4e8e\u9608\u503c\u03c4\u7684\u63a8\u7406\u6b65\u9aa4\u7684\u6570\u91cf\u3002</li> </ul> <p></p> <p>1(\u22c5)\u662f\u6307\u793a\u51fd\u6570\u3002\u6570\u503c\u8d8a\u9ad8\uff0c\u8868\u793a\u4e24\u4e2a\u75d5\u8ff9\u4e4b\u95f4\u5728\u8bed\u4e49\u4e0a\u5bf9\u5176\u7684 evidence \u8d8a\u591a</p> <ul> <li>DifferenceSequence : \u6839\u636e\u4e24\u4e2a\u63a8\u7406\u8f68\u8ff9\u5404\u81ea\u6a21\u6001\u5e8f\u5217 \\(S_M,S_H\\) \u76f8\u4f3c\u6027\u6765\u8861\u91cf\u4e24\u8f68\u8ff9\u7684\u7ed3\u6784\u76f8\u4f3c\u6027\u3002\u57fa\u4e8e\u7f16\u8f91\u8ddd\u79bb\uff08\u6539\u7f16\u81ea\u83b1\u6587\u65af\u5766\u8ddd\u79bb\uff09\u8ba1\u7b97\u3002\u503c\u8d8a\u9ad8\uff0c\u76f8\u4f3c\u6027\u8d8a\u5927</li> <li>EmotionMetric \uff1a\u8861\u91cf\u60c5\u611f\u5185\u5bb9\u4e00\u81f4\u6027\u3002\u63d0\u53d6\u60c5\u611f\u96c6\u5408\uff0c\u8ba1\u7b97\u96c6\u5408\u95f4\u91cd\u53e0\u7a0b\u5ea6\u3002</li> <li>All Modality Steps \uff1a\u8861\u91cf unique modalities \u91cd\u53e0\u6570\u91cf</li> <li>Visual Steps :  \u8861\u91cf\u5e26\u6709\u89c6\u89c9\u8bc1\u636e\u7684\u6b65\u9aa4\u6570\u91cf\uff0c\u4ee5\u6b64\u8bc4\u4f30\u89c6\u89c9 evidence \u5b58\u5728\u65b9\u9762\u7684\u5951\u5408\u7a0b\u5ea6</li> <li>Verbal Steps \uff1a\u540c\u4e0a</li> <li>Vocal Steps \uff1a\u540c\u4e0a</li> <li>**External Knowledge Steps ** \uff1a\u540c\u4e0a</li> <li>NumSteps \uff1a\u8861\u91cf\u63a8\u7406\u6b65\u9aa4\u6570\u91cf\u4e0a\u7684\u7edd\u5bf9\u5dee\u503c\u3002\u6570\u503c\u8d8a\u4f4e\u8868\u660e\u6a21\u578b\u63a8\u7406\u94fe\u4e0e\u4eba\u7c7b\u63a8\u7406\u94fe\u5728\u957f\u5ea6\u4e0a\u7684\u4e00\u81f4\u6027\u8d8a\u5f3a</li> </ul>"},{"location":"essays/Social/SocialGenome/#social-genome-icl-training-set","title":"SOCIAL GENOME ICL Training Set","text":"<p>\u4e3a\u521b\u5efa\u7528\u4e8e\u4e0a\u4e0b\u6587\u5b66\u4e60\u5b9e\u9a8c ICJ \u7684\u6837\u672c\uff0c\u4ece SOCIAL-IQ 2.0 dataset \u4e2d\u7684\u4e0d\u540c\u89c6\u9891\u91cc\u968f\u673a\u62bd\u53d616\u4e2a\u95ee\u9898\uff0c\u6309\u7167 1.2 \u4e2d\u7684\u683c\u5f0f\u6536\u96c6\u63a8\u7406\u8f68\u8ff9\u6ce8\u91ca\u3002\u5148\u5411\u6a21\u578b\u63d0\u4f9b\u4e0d\u540c\u6570\u91cf\u7684\u8bad\u7ec3\u6837\u672c\u518d\u8ba9\u5176\u6267\u884c\u4efb\u52a1\u3002</p>"},{"location":"essays/Social/SocialGenome/#experiment","title":"Experiment","text":"<p>\u6a21\u578b\uff1a</p> <ul> <li>Gemini-1.5-Flash</li> <li>GPT-4o</li> <li>LLaVA-Video</li> <li>LLaVA-Video-Only : \u56de\u7b54\u4e86\u95ee\u9898\u4f46\u672a\u751f\u6210\u63a8\u7406\u8f68\u8ff9</li> <li>LongVA</li> <li>Video-ChatGPT</li> <li>VideoChat2</li> </ul> <p></p> <ul> <li>ICJ \u53ef\u80fd\u5e76\u975e\u6fc0\u53d1\u591a\u6a21\u6001\u793e\u4ea4\u63a8\u7406\u80fd\u529b\u7684\u6709\u6548\u65b9\u6cd5\u3002\uff08\u6570\u5b66\u4e0e\u4ee3\u7801\u95ee\u9898\u5177\u6709\u660e\u786e\u7684\u89c4\u5219\u4e0e\u5f62\u5f0f\u7ed3\u6784\uff0cICJ\u53ef\u63d0\u5347\u8be5\u9886\u57df\u6a21\u578b\u63a8\u7406\u80fd\u529b\uff1b\u4f46\u662f\u793e\u4ea4\u63a8\u7406\u901a\u5e38\u4f9d\u636e\u9690\u6027\u89c4\u5219\u5c55\u5f00\uff0c\u5176\u5f62\u5f0f\u7ed3\u6784\u4e0d\u90a3\u4e48\u6b63\u5f0f\uff0c\u4e14\u524d\u63d0\u4e2d\u5b58\u5728\u6a21\u7cca\u6027\uff09</li> <li>\u601d\u7ef4\u94fe\u63d0\u793a\u5e76\u6ca1\u6709\u63d0\u9ad8\u6a21\u578b\u7684\u51c6\u786e\u6027\uff0c\u5e76\u4e14\u6a21\u578b\u5728\u4f9d\u9760\u9690\u6027\u77e5\u8bc6\u548c\u60c5\u5883\u77e5\u8bc6\u8fdb\u884c\u63a8\u7406\u65f6\u9047\u5230\u4e86\u56f0\u96be\u3002</li> </ul> <p>\u5bf9\u6a21\u578b\u7684\u63a8\u7406\u75d5\u8ff9\u8fdb\u884c\u4eba\u5de5\u8bc4\u4f30 -- \u63a8\u7406\u8f68\u8ff9\u8bc4\u5206</p> <p></p>"},{"location":"nlp/Deep%20Learning%20Basic/","title":"Deep Learning Basic","text":"<p>ML = Looking for a function \u5bfb\u627e\u4e00\u4e2a\u6620\u5c04</p> <ul> <li>Speed Recognition</li> <li>Image Recognition</li> </ul> <p></p> <p>\u200b   Model f1 \u6027\u80fd\u4f18\u4e8e model f2\uff1b\u901a\u8fc7\u6536\u96c6\u7684Training data\u8f93\u5165model\u540e\u8f93\u51fa\u7684\u6b63\u786e\u6027\u6765\u627e\u5230\u8868\u73b0\u6700\u597d\u7684model\uff0c\u8fd9\u662f\u4e00\u79cd\u76d1\u7763\u5b66\u4e60(Supervised Learning)</p> <p></p> <ul> <li>Playing Go \u4e0b\u56f4\u68cb</li> <li>Dialogue System</li> </ul> <p>3 steps for Deep Learning\uff1a</p> <p></p>"},{"location":"nlp/Deep%20Learning%20Basic/#1-define-a-set-of-function","title":"1. define a set of function","text":"<p>\u76ee\u524d\u4f7f\u7528\u7684\u6a21\u578b\u4fbf\u662f\u795e\u7ecf\u7f51\u7edc\u3002</p>"},{"location":"nlp/Deep%20Learning%20Basic/#11-neural-network","title":"1.1 Neural Network","text":"<ul> <li>Neuron</li> </ul> <p>\u5e38\u89c1\u6fc0\u6d3b\u51fd\u6570\uff1aSigmoid\u3001tanh\u3001ReLu</p> <p>ReLu\u6700\u5e38\u7528 -- \u8ba1\u7b97\u7b80\u5355\u3001\u4e0d\u4f1a\u592a\u5bb9\u6613\u51fa\u73b0\u68af\u5ea6\u6d88\u5931</p> <ul> <li>Network</li> </ul> <p></p> <p></p> <p>\u91c7\u7528\u5168\u8fde\u63a5(fully connect feedforward net):</p> <ul> <li>\u8ba1\u7b97\u7b80\u5355\uff1a\u770b\u4f5c\u8f93\u5165\u5411\u91cf X \u548c\u6743\u91cd\u77e9\u9635 W \u76f8\u4e58\uff0c\u4e5f\u6bd4\u8f83\u597d\u6c42\u5bfc</li> <li> <p>\u7ed3\u6784\u6613\u53d8\u5316</p> </li> <li> <p>Deep or Wide\uff1f</p> </li> </ul> <p></p> <p>\u200b   \u8d8a\u6df1\u7684\u795e\u7ecf\u7f51\u7edc\u8bb0\u5fc6\u80fd\u529b\u8d8a\u597d\uff0c\u4f46\u5bf9\u7b97\u529b\u8981\u6c42\u8d8a\u9ad8</p>"},{"location":"nlp/Deep%20Learning%20Basic/#2-goodness-of-function","title":"2. goodness of function","text":"<ul> <li>Training Data</li> </ul> <p>Softmax \u7528\u4e8e\u5206\u7c7b\u56de\u5f52\uff1a</p> <p></p> <ul> <li>Loss function</li> </ul> <p>loss\u8d8a\u5c11\uff0c \u8bf4\u660e\u6a21\u578b\u62df\u5408\u6548\u679c\u8d8a\u597d. \u5229\u7528MSE\u6c42loss\uff0c\u518d\u6c42\u548c\u3002</p> <p></p>"},{"location":"nlp/Deep%20Learning%20Basic/#3-pick-the-best-function","title":"3. pick the best function","text":"<p>\u4f18\u5316\u8fc7\u7a0b\uff1a\u901a\u8fc7\u5bf9\u635f\u5931\u51fd\u6570\u6c42\u68af\u5ea6\uff0c\u786e\u5b9a\u4f18\u5316\u65b9\u5411\uff0c\u4ece\u800c\u4e00\u6b65\u6b65\u63a5\u8fd1\u6700\u4f18\u89e3</p> <p></p> <p></p> <p></p> <p>\u5bf9\u5b66\u4e60\u7387\u8fd9\u4e2a\u8d85\u53c2\u7684\u8bbe\u7f6e\u5f88\u91cd\u8981\u3002</p> <p>\u53ea\u80fd\u627e\u5230local Minima\uff0c\u65e0\u6cd5\u786e\u5b9a\u662f\u5168\u5c40\u6700\u4f18\u89e3\u3002\u4e14\u6709\u53ef\u80fd\u505c\u5728saddle point(\u68af\u5ea6\u6d88\u5931\u60c5\u51b5\u4e0b)</p> <p></p>"},{"location":"nlp/Word%20Embedding/","title":"Word Embedding","text":"<p>\u200b   \u8bcd\u5411\u91cf\u662f\u7528\u6765\u8868\u793a\u8bcd\u7684\u5411\u91cf\uff0c\u4e5f\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u8bcd\u7684\u7279\u5f81\u5411\u91cf\u6216\u8868\u793a\u3002\u5c06\u8bcd\u6620\u5c04\u5230\u771f\u5b9e\u5411\u91cf\u7684\u6280\u672f\u79f0\u4e3a\u8bcd\u5d4c\u5165 Word Embedding</p>"},{"location":"nlp/Word%20Embedding/#1-one-hot-vector","title":"1. One-Hot Vector","text":"<p>\u5982\u4f55\u8868\u793a\u8bcd\uff1f</p> <p>\u7528 one-hot \u7f16\u7801\uff1b\u5047\u8bbe\u5b57\u5178\u4e2d\u4e0d\u540c\u5355\u8bcd\u7684\u6570\u91cf\uff08\u5b57\u5178\u5927\u5c0f\uff09\u4e3aN\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5355\u8bcd\u5bf9\u5e94\u4e8e\u4ece0\u5230N-1\u7684\u4e0d\u540c\u6574\u6570\uff08\u7d22\u5f15\uff09\u3002\u4e3a\u4e86\u83b7\u5f97\u7d22\u5f15\u4e3ai\u7684\u4efb\u4f55\u5355\u8bcd\u7684one-Hot\u5411\u91cf\u8868\u793a\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3aN\u7684\u5411\u91cf\uff0c\u521d\u59cb\u5316\u6240\u6709\u4f4d\u7f6e\u4e3a0\u5e76\u5c06\u4f4d\u7f6e\u4e3ai\u7684\u5143\u7d20\u8bbe\u7f6e\u4e3a1\u3002\u8fd9\u6837\uff0c\u6bcf\u4e2a\u5355\u8bcd\u90fd\u8868\u793a\u4e3a\u957f\u5ea6\u4e3aN\u7684\u5411\u91cf\uff0c\u5b83\u53ef\u4ee5\u88ab\u795e\u7ecf\u7f51\u7edc\u76f4\u63a5\u4f7f\u7528\u3002</p> <p>\u5982\u5b9d\u9a6c\u3001\u5954\u9a70\u548c\u5965\u8fea\u5206\u522b\u7528100\u3001010\u548c001\u8868\u793a</p> <p>\u7f3a\u9677\uff1a</p> <ul> <li>one-hot word\u5411\u91cf\u4e0d\u80fd\u51c6\u786e\u5730\u8868\u8fbe\u4e0d\u540c\u5355\u8bcd\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\uff0c\u56e0\u5176\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u5355\u8bcd\u7684\u4f59\u5f26\u76f8\u4f3c\u5ea6\u4e3a 0</li> </ul> <p></p>"},{"location":"nlp/Word%20Embedding/#2","title":"2. \u81ea\u76d1\u7763\u6a21\u578b","text":"<p>\u200b   You can get a lot of value by representing a word by means of its neighbors. \u5982\u4f55\u4e86\u89e3\u4e00\u4e2a\u8bcd\u7684\u610f\u601d\uff0c\u901a\u8fc7\u5176\u4e0a\u4e0b\u6587\u6765\u4e86\u89e3\u3002</p> <p></p>"},{"location":"nlp/Word%20Embedding/#21-cbow","title":"2.1 CBOW\u6a21\u578b","text":"<p>\u200b   </p> <p>\u53bb\u6389apple\uff0c\u628a\u5176\u4e0a\u4e0b\u6587\u9001\u5165\u795e\u7ecf\u7f51\u7edc\uff0c\u8ba9\u5176\u9884\u6d4b\u88ab\u53bb\u6389\u7684\u8bcd\u662fapple</p> <p></p>"},{"location":"nlp/Word%20Embedding/#22-sg","title":"2.2 SG\u6a21\u578b","text":"<p>\u5c06apple\u9001\u5165\u795e\u7ecf\u7f51\u7edc\uff0c\u8ba9\u5176\u9884\u6d4bapple\u7684\u4e0a\u4e0b\u6587</p> <p></p>"},{"location":"nlp/Word%20Embedding/#33","title":"3.3 \u7ed3\u5408","text":"<p>\u5c06\u4e24\u4e2a\u6a21\u578b\u7ed3\u5408\u8d77\u6765\uff0cCBOW\u7684\u8f93\u51fa\u4f5c\u4e3aSG\u7684\u8f93\u5165\uff1a</p> <p></p> <p>\u5b9e\u4f8b\uff1a</p> <p>\u8f93\u5165\u4e00\u4e2a1x10\u7ef4\u72ec\u70ed\u7801\uff0c\u6839\u636e\u8f93\u5165\u6743\u91cd\u77e9\u9635(10x5)\u5f97\u5230\u771f\u5b9e\u8bcd\u5411\u91cf\u8868\u8fbe(1x5)\uff0c\u6fc0\u6d3b\u540e\u518d\u4e58\u8f93\u51fa\u6743\u91cd\u77e9\u9635(10x5)\uff0c\u6839\u636esoftmax\u5206\u7c7b\u786e\u5b9a\u6700\u7ec8\u7ed3\u679c\uff1a</p> <p></p> <p>\u4f7f\u8054\u7cfb\u7d27\u5bc6\u7684\u8bcd\u8ddd\u79bb\u66f4\u8fd1\uff0c\u8054\u7cfb\u4e0d\u7d27\u5bc6\u7684\u8bcd\u8ddd\u79bb\u66f4\u8fdc\uff1a</p> <p></p> <p>\u7528\u6b27\u5f0f\u8ddd\u79bb\u6765\u5ea6\u91cf\uff0c\u8fdb\u884c\u8ba1\u7b97</p> <p></p>"}]}